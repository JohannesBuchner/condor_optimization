jx_browser_symbol_table 65   45 "/home/fvandenb/condor106/condor106/common/CNLSolver.cpp" 46 1094761664 "/home/fvandenb/condor106/condor106/common/CTRSSolver.cpp" 47 1094761710 "/home/fvandenb/condor106/condor106/common/IntPoly.cpp" 48 1094761950 "/home/fvandenb/condor106/condor106/common/IntPoly.h" 49 1094761910 "/home/fvandenb/condor106/condor106/common/KeepBests.cpp" 50 1094761742 "/home/fvandenb/condor106/condor106/common/KeepBests.h" 51 1094761752 "/home/fvandenb/condor106/condor106/common/MSSolver.cpp" 56 1094761810 "/home/fvandenb/condor106/condor106/common/Matrix.cpp" 52 1094761794 "/home/fvandenb/condor106/condor106/common/Matrix.h" 53 1094762012 "/home/fvandenb/condor106/condor106/common/MatrixTriangle.cpp" 54 1094761802 "/home/fvandenb/condor106/condor106/common/MatrixTriangle.h" 55 1094762036 "/home/fvandenb/condor106/condor106/common/MultInd.cpp" 57 1094761816 "/home/fvandenb/condor106/condor106/common/MultInd.h" 58 1094762106 "/home/fvandenb/condor106/condor106/common/ObjectiveFunction.cpp" 59 1094762114 "/home/fvandenb/condor106/condor106/common/ObjectiveFunction.h" 60 1094762128 "/home/fvandenb/condor106/condor106/common/Poly.cpp" 63 1094762586 "/home/fvandenb/condor106/condor106/common/Poly.h" 64 1094762198 "/home/fvandenb/condor106/condor106/common/QPSolver.cpp" 65 1094762218 "/home/fvandenb/condor106/condor106/common/Solver.h" 66 1094762298 "/home/fvandenb/condor106/condor106/common/UNLSolver.cpp" 69 1094762324 "/home/fvandenb/condor106/condor106/common/UTRSSolver.cpp" 70 1094762328 "/home/fvandenb/condor106/condor106/common/Vector.cpp" 71 1094762334 "/home/fvandenb/condor106/condor106/common/Vector.h" 72 1094762358 "/home/fvandenb/condor106/condor106/common/VectorChar.cpp" 73 1094762364 "/home/fvandenb/condor106/condor106/common/VectorChar.h" 74 1094762380 "/home/fvandenb/condor106/condor106/common/VectorInt.cpp" 75 1094762386 "/home/fvandenb/condor106/condor106/common/VectorInt.h" 76 1094762400 "/home/fvandenb/condor106/condor106/common/parallel.cpp" 61 1094762140 "/home/fvandenb/condor106/condor106/common/parallel.h" 62 1094762146 "/home/fvandenb/condor106/condor106/common/tools.cpp" 67 1094762310 "/home/fvandenb/condor106/condor106/common/tools.h" 68 1094762316 "/home/fvandenb/condor106/condor106/makefile" 90 1094759678 "/home/fvandenb/condor106/condor106/sifOF/SIFFunction.cpp" 78 1094762412 "/home/fvandenb/condor106/condor106/sifOF/SIFFunction.h" 79 1094762420 "/home/fvandenb/condor106/condor106/sifOF/f2c.h" 77 1078239338 "/home/fvandenb/condor106/condor106/sifOF/sifMain.cpp" 80 1094762424 "/home/fvandenb/condor106/condor106/simpleOF/simpleMain.cpp" 81 1094762430 "/home/fvandenb/condor106/condor106/simpleOF/simpleObjFunctions.cpp" 82 1094762434 "/home/fvandenb/condor106/condor106/simpleOF/simpleObjFunctions.h" 83 1094762438 "/home/fvandenb/condor106/condor106/xmlOF/XMLof.cpp" 86 1094762452 "/home/fvandenb/condor106/condor106/xmlOF/XMLof.h" 87 1094762456 "/home/fvandenb/condor106/condor106/xmlOF/dbtool/DBToolMain.cpp" 84 1094762444 "/home/fvandenb/condor106/condor106/xmlOF/xmlMain.cpp" 85 1094773028 "/home/fvandenb/condor106/condor106/xmlOF/xmlParser.cpp" 88 1094762526 "/home/fvandenb/condor106/condor106/xmlOF/xmlParser.h" 89 1094762546    2655 "__INCLUDE_KEEPBEST__" 1 101 F 51 28 F "__INCLUDE_XML_NODE__" 1 101 F 89 34 F "__INSIDE_MULTIND_CPP__" 1 101 F 57 34 F "__INSIDE_MULTIND_CPP__" 1 101 F 57 36 F "_elfun_" 1 111 F 79 93 F "_finite" 1 103 F 86 45 T " (double d)" "_group_" 1 111 F 79 94 F "_INCLUDE_MATRIX_H" 1 101 F 53 28 F "_INCLUDE_MULTIND_H_" 1 101 F 58 31 F "_INCLUDE_POLY_H_" 1 101 F 64 28 F "_INCLUDE_SOLVER_H" 1 101 F 66 28 F "_INCLUDE_VECTOR_H" 1 101 F 72 28 F "_INCLUDE_VectorCHAR_H" 1 101 F 74 28 F "_INCLUDE_VectorIntINT_H" 1 101 F 76 27 F "_INTPOLY_H_" 1 101 F 49 32 F "_isnan" 1 103 F 86 44 T " (double d)" "_local_getOptValueC" 1 111 F 51 59 F "_local_getOptValueI" 1 111 F 51 60 F "_MATRIXTRIANGLE_H" 1 101 F 55 28 F "_MPI_TOOLS_H_" 1 101 F 68 32 F "_PARALLEL_H_" 1 101 F 62 28 F "_T" 1 101 F 89 60 F "_tcschr" 1 103 F 88 43 T " (const char *c1, int c2)" "_tcscpy" 1 103 F 88 44 T " (char *c1, const char *c2)" "_tcslen" 1 103 F 88 40 T " (const char *c)" "_tcsnicmp" 1 103 F 88 41 T " (const char *c1, const char *c2, int l)" "_tcsstr" 1 103 F 88 42 T " (const char *c1, const char *c2)" "A" 1 111 F 60 65 F "a" 1 111 F 79 83 F "A" 1 111 F 83 126 F "abs" 1 101 F 77 188 F "abs" 1 103 F 68 44 T " ( const double t1 )" "action2" 1 103 F 86 1544 T " (int)" "add" 1 103 F 50 89 T " (double key, double value)" "add" 1 103 F 50 93 T " (double key, double value, double optionalValue)" "add" 1 103 F 50 98 T " (double key, double value, double *optionalValue)" "add" 1 103 F 50 103 T " (double key, double value, double *optionalValue, int nn)" "add" 1 110 F 51 48 T " (double key, double value)" "add" 1 110 F 51 49 T " (double key, double value, double optionalValue)" "add" 1 110 F 51 50 T " (double key, double value, double *optionalValue)" "add" 1 110 F 51 51 T " (double key, double value, double *optionalValue, int nn)" "AddAttribute" 1 103 F 88 464 T " (LPTSTR lpszName, LPTSTR lpszValuev)" "AddAttribute" 1 110 F 89 181 T " (LPTSTR lpszName, LPTSTR lpszValuev)" "AddChild" 1 103 F 88 450 T " (LPTSTR lpszName, int isDeclaration)" "AddChild" 1 110 F 89 180 T " (LPTSTR lpszName, int isDeclaration)" "AddClear" 1 103 F 88 492 T " (LPTSTR lpszValue, LPTSTR lpszOpen, LPTSTR lpszClose)" "AddClear" 1 110 F 89 183 T " (LPTSTR lpszValue, LPTSTR lpszOpen, LPTSTR lpszClose)" "addClosestFeasiblePointInData" 1 103 F 59 221 T " (Vector vX)" "addClosestFeasiblePointInData" 1 110 F 60 104 T " (Vector vX)" "addInPlace" 1 103 F 52 681 T " (Matrix B)" "addInPlace" 1 103 F 71 415 T " (double a, Vector v)" "addInPlace" 1 103 F 71 423 T " (double a, int i, Matrix m)" "addInPlace" 1 110 F 53 111 T " (Matrix B)" "addInPlace" 1 110 F 72 110 T " (double a, Vector v)" "addInPlace" 1 110 F 72 111 T " (double a, int i, Matrix m)" "addMultiplyInPlace" 1 103 F 52 698 T " (double d, Matrix B)" "addMultiplyInPlace" 1 110 F 53 112 T " (double d, Matrix B)" "addr" 1 111 F 77 175 F "address" 1 107 F 77 14 F "address" 1 107 F 77 31 F "AddText" 1 103 F 88 479 T " (LPTSTR lpszValue)" "AddText" 1 110 F 89 182 T " (LPTSTR lpszValue)" "addUnityInPlace" 1 103 F 52 1016 T " (double dd)" "addUnityInPlace" 1 110 F 53 113 T " (double d)" "aerr" 1 111 F 77 122 F "af" 1 111 F 87 71 F "aggregate" 1 103 F 86 1393 T " (double *vLxIndexes, double *vIndexes, int *nerr)" "aggregate" 1 110 F 87 94 T " (double *vLxIndexes, double *vIndexes, int *nerr)" "aggregationFunction" 1 106 F 87 66 F "aggregationFunction" 1 107 F 87 70 F "alist" 1 107 F 77 124 F "all" 18 1701 F 90 4 F "alloc" 1 103 F 71 35 T " (int _n, int _ext)" "alloc" 1 103 F 73 32 T " ( )" "alloc" 1 103 F 75 33 T " (int _n, int _ext)" "alloc" 1 103 F 82 30 T " (int n)" "alloc" 1 110 F 72 41 T " (int n, int ext)" "alloc" 1 110 F 74 67 T " ( )" "alloc" 1 110 F 76 73 T " (int, int)" "alloc" 1 110 F 83 128 T " (int n)" "alltriv" 1 111 F 79 86 F "AMPLFILES" 18 1700 F 90 36 F "amplOptimizer" 18 1701 F 90 82 F "append" 1 103 F 52 1205 T " (Vector tmp)" "append" 1 110 F 53 97 T " (Vector tmp)" "appendToMatrixFile" 1 103 F 71 611 T " (char *saveFileName, char **names)" "appendToMatrixFile" 1 110 F 72 66 T " (char *saveFileName, char **names=NULL)" "Attrib" 1 104 F 88 95 F "Attrib" 1 107 F 88 100 F "attrib" 1 111 F 89 205 F "aunit" 1 111 F 77 123 F "b" 1 111 F 60 66 F "b" 1 111 F 79 83 F "BADScaleRosenbrock" 1 100 F 83 106 F "BADScaleRosenbrock" 1 103 F 82 384 T " (int _t)" "BADScaleRosenbrock" 1 110 F 83 109 T " (int _t)" "BADScaleRosenbrock::BADScaleRosenbrock" 1 103 F 82 384 T " (int _t)" "BADScaleRosenbrock::BADScaleRosenbrock" 1 110 F 83 109 T " (int _t)" "BADScaleRosenbrock::eval" 1 103 F 82 376 T " (Vector X, int *nerror)" "BADScaleRosenbrock::eval" 1 110 F 83 111 T " (Vector v, int *nerror=NULL)" "BADScaleRosenbrock::finalize" 1 103 F 83 112 T " (Vector v, Matrix H, Vector l)" "BADScaleRosenbrock::~BADScaleRosenbrock" 1 103 F 83 110 T " ( )" "BADSCALING" 1 101 F 82 374 F "bit_clear" 1 101 F 77 195 F "bit_set" 1 101 F 77 196 F "bit_test" 1 101 F 77 194 F "bl" 1 111 F 60 62 F "bl" 1 111 F 79 83 F "bQRFailed_QP" 1 109 F 65 82 F "bu" 1 111 F 60 62 F "bu" 1 111 F 79 83 F "buffer" 1 111 F 57 41 F "buffer" 1 111 F 58 82 F "c" 1 111 F 77 165 F "C" 1 111 F 83 127 F "c__50000" 1 109 F 78 614 F "C_f" 1 107 F 77 227 F "c_false" 1 109 F 78 615 F "C_fp" 1 107 F 77 207 F "C_fp" 1 107 F 77 219 F "cacheMultInd" 1 109 F 57 42 F "calculateNParallelJob" 1 103 F 48 321 T " (int n,double *vf,Vector *cp, ObjectiveFunction *of, int *notsuccess)" "calculateNParallelJob" 1 103 F 61 43 T " (int n,double *vf,Vector *cp, ObjectiveFunction *of, int *notsuccess)" "calculateNParallelJob" 1 110 F 48 323 T " (int n,double *vf,Vector *cp, ObjectiveFunction *of, int *notsuccess)" "cbEndTag" 1 111 F 88 81 F "cbNewElement" 1 111 F 88 83 F "cell" 1 107 F 51 38 F "cell_tag" 1 106 F 51 32 F "cell_tag::K" 1 111 F 51 34 F "cell_tag::optValue" 1 111 F 51 36 F "cell_tag::prev" 1 111 F 51 37 F "cell_tag::value" 1 111 F 51 35 F "cerr" 1 111 F 77 115 F "charMemSpace" 1 111 F 87 76 F "CHECK" 1 101 F 73 30 F "checkForTermination" 1 103 F 47 56 T " (Vector d, Vector Base, double rhoEnd)" "checkForTermination" 1 110 F 46 55 T " (Vector d, Vector Base, double rhoEnd)" "checkIfValidityIsInBound" 1 103 F 48 686 T " (Vector ddv, unsigned k, double bound, double rho)" "checkIfValidityIsInBound" 1 110 F 49 70 T " (Vector dd, unsigned k, double bound, double rho)" "child" 1 111 F 89 204 F "cholesky" 1 103 F 52 741 T " (MatrixTriangle matL, double lambda, double *lambdaCorrection)" "cholesky" 1 110 F 53 121 T " (MatrixTriangle matL, double lambda=0, double *lambdaCorrection=NULL)" "choleskySolveInPlace" 1 103 F 52 786 T " (Vector b)" "choleskySolveInPlace" 1 110 F 53 122 T " (Vector b)" "choose" 1 103 F 67 38 T " ( unsigned n, unsigned k )" "choose" 1 110 F 64 128 T " ( unsigned n, unsigned k )" "choose" 1 110 F 68 106 T " ( unsigned n, unsigned k )" "ciend" 1 111 F 77 85 F "cierr" 1 111 F 77 83 F "cifmt" 1 111 F 77 86 F "cilist" 1 107 F 77 88 F "cirec" 1 111 F 77 87 F "ciunit" 1 111 F 77 84 F "clean" 18 1701 F 90 94 F "clear" 1 111 F 89 207 F "ClearTag" 1 106 F 88 68 F "ClearTag" 1 107 F 88 72 F "ClearTag::lpszClose" 1 111 F 88 71 F "ClearTag::lpszOpen" 1 111 F 88 70 F "cllist" 1 107 F 77 118 F "clone" 1 103 F 48 870 T " ( )" "clone" 1 103 F 52 448 T " ( )" "clone" 1 103 F 54 173 T " ( )" "clone" 1 103 F 63 117 T " ( )" "clone" 1 103 F 71 206 T " ( )" "clone" 1 103 F 75 110 T " ( )" "clone" 1 110 F 49 84 T " ( )" "clone" 1 110 F 53 77 T " ( )" "clone" 1 110 F 55 58 T " ( )" "clone" 1 110 F 64 70 T " ( )" "clone" 1 110 F 72 70 T " ( )" "clone" 1 110 F 76 47 T " ( )" "CNLSolver.cpp:quickHack" 1 109 T 46 46 F "CNLSolver.cpp:quickHack" 1 109 T 46 48 F "coeff" 1 111 F 64 42 F "coeffDeg" 1 111 F 58 80 F "coeffLex" 1 111 F 58 80 F "colNamesForData" 1 109 F 86 1185 F "columnNames" 1 111 F 53 42 F "COMMONCPPFILES" 18 1700 F 90 24 F "COMMONHFILES" 18 1700 F 90 31 F "complex" 1 107 F 77 18 F "complex" 1 107 F 77 35 F "ComputeLagrangeBasis" 1 103 F 48 127 T " (double *yy, unsigned nPtsTotal)" "ComputeLagrangeBasis" 1 110 F 49 52 T " (double *, unsigned nPtsTotal)" "computeSigNoise" 1 103 F 86 1476 T " (Matrix mH)" "computeSigNoise" 1 110 F 87 93 T " (Matrix mH)" "CONDOR" 1 103 F 46 75 T " ( double rhoStart, double rhoEnd, int niter, ObjectiveFunction *of, int nnode)" "CONDOR" 1 110 F 66 44 T " (double rhoStart, double rhoEnd, int niter, ObjectiveFunction *of, int nnode=0)" "configFile" 1 111 F 87 75 F "ConstrainedL2NormMinimizer" 1 103 F 47 59 T " (InterPolynomial poly, int k, double delta, int *info, int iterMax, double *lambda1, Vector vOBase, ObjectiveFunction *of)" "ConstrainedL2NormMinimizer" 1 110 F 46 52 T " (InterPolynomial poly, int k, double delta, int *info, int iterMax, double *lambda1, Vector vOBase, ObjectiveFunction *of)" "ConstrainedL2NormMinimizer" 1 110 F 69 44 T " (char isConstrained, InterPolynomial poly, int k, double delta, int *info, int iterMax, double *lambda1, Vector vOBase, ObjectiveFunction *uof)" "copyFrom" 1 103 F 48 878 T " (InterPolynomial m)" "copyFrom" 1 103 F 48 906 T " (Polynomial m)" "copyFrom" 1 103 F 52 456 T " (Matrix m)" "copyFrom" 1 103 F 54 181 T " (MatrixTriangle r)" "copyFrom" 1 103 F 63 125 T " (Polynomial m)" "copyFrom" 1 103 F 71 214 T " (Vector r, int _n)" "copyFrom" 1 103 F 75 118 T " (VectorInt r)" "copyFrom" 1 110 F 49 85 T " (InterPolynomial a)" "copyFrom" 1 110 F 49 86 T " (Polynomial a)" "copyFrom" 1 110 F 53 78 T " (Matrix a)" "copyFrom" 1 110 F 55 59 T " (MatrixTriangle r)" "copyFrom" 1 110 F 64 71 T " (Polynomial a)" "copyFrom" 1 110 F 72 71 T " (Vector r, int _n=0)" "copyFrom" 1 110 F 76 48 T " (VectorInt r)" "CorrectScaleOF" 1 100 F 60 121 F "CorrectScaleOF" 1 103 F 59 371 T " (int _t, ObjectiveFunction *_of)" "CorrectScaleOF" 1 103 F 59 395 T " (int _t, ObjectiveFunction *_of, Vector _rescaling)" "CorrectScaleOF" 1 110 F 60 125 T " (int _t, ObjectiveFunction *_of, Vector _rescaling)" "CorrectScaleOF" 1 110 F 60 126 T " (int _t, ObjectiveFunction *_of)" "CorrectScaleOF::CorrectScaleOF" 1 103 F 59 371 T " (int _t, ObjectiveFunction *_of)" "CorrectScaleOF::CorrectScaleOF" 1 103 F 59 395 T " (int _t, ObjectiveFunction *_of, Vector _rescaling)" "CorrectScaleOF::CorrectScaleOF" 1 110 F 60 125 T " (int _t, ObjectiveFunction *_of, Vector _rescaling)" "CorrectScaleOF::CorrectScaleOF" 1 110 F 60 126 T " (int _t, ObjectiveFunction *_of)" "CorrectScaleOF::eval" 1 103 F 59 345 T " (Vector X, int *nerror)" "CorrectScaleOF::eval" 1 110 F 60 129 T " (Vector v, int *nerror=NULL)" "CorrectScaleOF::evalGradNLConstraint" 1 103 F 59 363 T " (int j, Vector X, Vector result, int *nerror)" "CorrectScaleOF::evalGradNLConstraint" 1 110 F 60 131 T " (int j, Vector v, Vector result, int *nerror=NULL)" "CorrectScaleOF::evalNLConstraint" 1 103 F 59 355 T " (int j, Vector X, int *nerror)" "CorrectScaleOF::evalNLConstraint" 1 110 F 60 130 T " (int j, Vector v, int *nerror=NULL)" "CorrectScaleOF::finalize" 1 103 F 59 456 T " (Vector vG, Matrix mH, Vector vLambda)" "CorrectScaleOF::finalize" 1 110 F 60 132 T " (Vector vG, Matrix mH, Vector vLambda)" "CorrectScaleOF::getNFE" 1 103 F 60 133 T " ( )" "CorrectScaleOF::getNFE2" 1 103 F 60 134 T " ( )" "CorrectScaleOF::init" 1 103 F 59 407 T " ( )" "CorrectScaleOF::init" 1 110 F 60 136 T " ( )" "CorrectScaleOF::of" 1 111 F 60 137 F "CorrectScaleOF::rescaling" 1 111 F 60 124 F "CorrectScaleOF::saveValue" 1 103 F 59 336 T " (Vector X,double valueOF, int nerror)" "CorrectScaleOF::saveValue" 1 110 F 60 128 T " (Vector X,double valueOF,int nerror)" "CorrectScaleOF::xTemp" 1 111 F 60 138 F "CorrectScaleOF::~CorrectScaleOF" 1 103 F 60 127 T " ( )" "CountLinesAndColumns" 1 103 F 88 990 T " (LPCTSTR lpXML, int nUpto, XMLResults *pResults)" "cray" 1 101 F 77 235 F "createXMLString" 1 103 F 88 1393 T " (int nFormat, int *pnSize)" "createXMLString" 1 110 F 89 160 T " (int nFormat, int *pnSize)" "CreateXMLStringR" 1 103 F 88 1125 T " (XMLNodeData *pEntry, LPTSTR lpszMarker, int nFormat)" "CreateXMLStringR" 1 110 F 89 190 T " (XMLNodeData *pEntry, LPTSTR lpszMarker, int nFormat)" "CRLF" 1 103 F 78 328 T " ( )" "CRLF" 1 110 F 79 100 T " ( )" "csta" 1 111 F 77 117 F "ctable" 1 111 F 51 59 F "CTRSSolver.cpp:FullLambda" 1 109 T 47 38 F "cunit" 1 111 F 77 116 F "d" 1 111 F 53 47 F "d" 1 111 F 55 46 F "d" 1 111 F 64 48 F "d" 1 111 F 72 49 F "d" 1 111 F 76 40 F "d" 1 111 F 77 164 F "d" 1 111 F 89 127 F "D_fp" 1 107 F 77 206 F "D_fp" 1 107 F 77 218 F "d_sign" 1 103 F 79 103 T " (double *a,double *b)" "dabs" 1 101 F 77 189 F "data" 1 111 F 60 53 F "dataFull" 1 111 F 87 74 F "dbcolnames" 1 111 F 87 76 F "dbname" 1 111 F 87 75 F "DBTool" 1 103 F 86 54 T " (Vector rescale)" "DBTool" 1 110 F 87 54 T " (Vector r)" "dbtool" 18 1701 F 90 61 F "debugOF" 1 111 F 87 77 F "deg" 1 103 F 64 62 T " ( )" "deg" 1 111 F 58 53 F "deg" 1 111 F 64 45 F "deleteFile" 1 103 F 67 281 T " (const char *line)" "deleteFile" 1 110 F 68 126 T " (const char *l)" "derivate" 1 103 F 63 471 T " (int i)" "derivate" 1 110 F 64 98 T " (int i)" "destroyCurrentBuffer" 1 103 F 48 807 T " ( )" "destroyCurrentBuffer" 1 103 F 52 417 T " ( )" "destroyCurrentBuffer" 1 103 F 54 143 T " ( )" "destroyCurrentBuffer" 1 103 F 63 87 T " ( )" "destroyCurrentBuffer" 1 103 F 71 176 T " ( )" "destroyCurrentBuffer" 1 103 F 75 80 T " ( )" "destroyCurrentBuffer" 1 103 F 88 1416 T " (XMLNodeData *d)" "destroyCurrentBuffer" 1 110 F 49 90 T " ( )" "destroyCurrentBuffer" 1 110 F 53 51 T " ( )" "destroyCurrentBuffer" 1 110 F 55 38 T " ( )" "destroyCurrentBuffer" 1 110 F 64 50 T " ( )" "destroyCurrentBuffer" 1 110 F 72 74 T " ( )" "destroyCurrentBuffer" 1 110 F 76 51 T " ( )" "destroyCurrentBuffer" 1 110 F 89 172 T " (XMLNodeData *d)" "dfold" 1 111 F 60 103 F "dfref" 1 111 F 60 103 F "diagonal" 1 103 F 52 65 T " (double dd)" "diagonal" 1 110 F 53 101 T " (double d)" "diagonalizeAndMultiply" 1 103 F 71 315 T " (Matrix M)" "diagonalizeAndMultiply" 1 110 F 72 113 T " (Matrix M)" "dim" 1 103 F 59 208 T " ( )" "dim" 1 103 F 64 61 T " ( )" "dim" 1 110 F 60 84 T " ( )" "dim" 1 111 F 58 53 F "dim" 1 111 F 64 44 F "dims" 1 111 F 77 176 F "dmax" 1 101 F 77 193 F "dmin" 1 101 F 77 192 F "doublecomplex" 1 107 F 77 19 F "doublecomplex" 1 107 F 77 36 F "doublereal" 1 107 F 77 17 F "doublereal" 1 107 F 77 34 F "E_f" 1 107 F 77 230 F "E_fp" 1 107 F 77 206 F "E_fp" 1 107 F 77 218 F "eAttribEquals" 1 102 F 88 98 F "eAttribName" 1 102 F 88 97 F "eAttribValue" 1 102 F 88 99 F "eInsideTag" 1 102 F 88 106 F "elfunType" 1 107 F 79 66 F "emptyline" 1 110 F 68 116 T " (const char *line)" "emptyMatrix" 1 111 F 52 35 F "emptyMatrix" 1 111 F 53 133 F "emptyMatrixTriangle" 1 111 F 55 74 F "emptyPolynomial" 1 111 F 63 41 F "emptyPolynomial" 1 111 F 64 125 F "emptyVector" 1 111 F 71 33 F "emptyVector" 1 111 F 72 118 F "emptyVectorInt" 1 111 F 75 31 F "emptyVectorInt" 1 111 F 76 70 F "emptyXMLAttribute" 1 111 F 88 49 F "emptyXMLAttribute" 1 111 F 89 177 F "emptyXMLClear" 1 111 F 88 48 F "emptyXMLClear" 1 111 F 89 176 F "emptyXMLNode" 1 111 F 88 47 F "emptyXMLNode" 1 111 F 89 175 F "end" 1 111 F 51 59 F "endInit" 1 103 F 59 88 T " ( )" "endInit" 1 110 F 60 95 T " ( )" "eNodeAttribute" 1 102 F 89 83 F "eNodeChild" 1 102 F 89 82 F "eNodeClear" 1 102 F 89 85 F "eNodeText" 1 102 F 89 84 F "enumContent" 1 103 F 88 1099 T " (XMLNodeData *pEntry, int i, XMLElementType *nodeType)" "enumContent" 1 110 F 89 191 T " (XMLNodeData *pEntry,int i, XMLElementType *nodeType)" "enumContents" 1 103 F 88 1083 T " (int i)" "enumContents" 1 110 F 89 161 T " (int i)" "EOL" 1 101 F 68 40 F "EOL1" 1 101 F 67 165 F "EOL1" 1 101 F 71 530 F "EOL2" 1 101 F 67 166 F "EOL2" 1 101 F 71 531 F "eOutsideTag" 1 102 F 88 107 F "epvalu" 1 111 F 79 83 F "equalities" 1 111 F 87 65 F "equalityFunction" 1 106 F 87 60 F "equalityFunction" 1 107 F 87 64 F "equals" 1 103 F 63 305 T " ( Polynomial q )" "equals" 1 103 F 71 134 T " ( Vector Q )" "equals" 1 103 F 75 149 T " ( const VectorInt& Q )" "equals" 1 110 F 64 106 T " ( Polynomial q )" "equals" 1 110 F 72 81 T " ( const Vector Q )" "equals" 1 110 F 76 68 T " ( const VectorInt& Q )" "error" 1 103 F 67 110 T " (char *s)" "error" 1 111 F 88 79 F "error" 1 111 F 89 91 F "escale" 1 111 F 79 83 F "eTokenClear" 1 102 F 88 62 F "eTokenCloseTag" 1 102 F 88 58 F "eTokenDeclaration" 1 102 F 88 60 F "eTokenEquals" 1 102 F 88 59 F "eTokenError" 1 102 F 88 63 F "eTokenQuotedText" 1 102 F 88 55 F "eTokenShortHandClose" 1 102 F 88 61 F "eTokenTagEnd" 1 102 F 88 57 F "eTokenTagStart" 1 102 F 88 56 F "eTokenText" 1 102 F 88 54 F "euclidianDistance" 1 103 F 71 243 T " (Vector v)" "euclidianDistance" 1 110 F 72 90 T " (Vector v)" "euclidianNorm" 1 103 F 52 1118 T " (int i)" "euclidianNorm" 1 103 F 67 116 T " (int i, double *xp)" "euclidianNorm" 1 103 F 71 221 T " ( )" "euclidianNorm" 1 110 F 53 129 T " (int i)" "euclidianNorm" 1 110 F 68 109 T " (int i, double *xp)" "euclidianNorm" 1 110 F 72 87 T " ( )" "eval" 1 103 F 59 345 T " (Vector X, int *nerror)" "eval" 1 103 F 78 620 T " (Vector v, int *nerror)" "eval" 1 103 F 82 101 T " (Vector X, int *nerror)" "eval" 1 103 F 82 139 T " (Vector X, int *nerror)" "eval" 1 103 F 82 163 T " (Vector X, int *nerror)" "eval" 1 103 F 82 190 T " (Vector X, int *nerror)" "eval" 1 103 F 82 218 T " (Vector X, int *nerror)" "eval" 1 103 F 82 272 T " (Vector v, int *nerror)" "eval" 1 103 F 82 299 T " (Vector v, int *nerror)" "eval" 1 103 F 82 365 T " (Vector v, int *nerror)" "eval" 1 103 F 82 376 T " (Vector X, int *nerror)" "eval" 1 103 F 86 1423 T " (Vector v, int *nerr)" "eval" 1 110 F 60 83 T " (Vector v, int *nerror)" "eval" 1 110 F 60 129 T " (Vector v, int *nerror=NULL)" "eval" 1 110 F 79 78 T " (Vector v, int *nerror=NULL)" "eval" 1 110 F 83 40 T " (Vector v, int *nerror=NULL)" "eval" 1 110 F 83 54 T " (Vector v, int *nerror=NULL)" "eval" 1 110 F 83 65 T " (Vector v, int *nerror=NULL)" "eval" 1 110 F 83 75 T " (Vector v, int *nerror=NULL)" "eval" 1 110 F 83 83 T " (Vector v, int *nerror=NULL)" "eval" 1 110 F 83 91 T " (Vector v, int *nerror=NULL)" "eval" 1 110 F 83 101 T " (Vector v, int *nerror=NULL)" "eval" 1 110 F 83 111 T " (Vector v, int *nerror=NULL)" "eval" 1 110 F 83 121 T " (Vector v, int *nerror=NULL)" "eval" 1 110 F 87 47 T " (Vector v, int *ner=NULL)" "evalGradNLConstraint" 1 103 F 59 328 T " (int j, Vector v, int *nerror)" "evalGradNLConstraint" 1 103 F 59 363 T " (int j, Vector X, Vector result, int *nerror)" "evalGradNLConstraint" 1 103 F 60 116 T " (int j, Vector v, int *nerror=NULL)" "evalGradNLConstraint" 1 103 F 60 117 T " (int j, Vector v, Vector result, int *nerror=NULL)" "evalGradNLConstraint" 1 103 F 82 318 T " (int j, Vector v, Vector R, int *nerror)" "evalGradNLConstraint" 1 103 F 83 56 T " (int j, Vector v, Vector result, int *nerror=NULL)" "evalGradNLConstraint" 1 103 F 83 67 T " (int j, Vector v, Vector result, int *nerror=NULL)" "evalGradNLConstraint" 1 103 F 86 150 T " (int j, Vector sv, Vector result, int *ner)" "evalGradNLConstraint" 1 110 F 60 70 T " (int j, Vector v, int *nerror)" "evalGradNLConstraint" 1 110 F 60 71 T " (int j, Vector v, Vector result, int *nerror)" "evalGradNLConstraint" 1 110 F 60 131 T " (int j, Vector v, Vector result, int *nerror=NULL)" "evalGradNLConstraint" 1 110 F 83 42 T " (int j, Vector v, Vector result, int *nerror=NULL)" "evalGradNLConstraint" 1 110 F 87 49 T " (int j, Vector v, Vector result, int *ner=NULL)" "evalLarge" 1 103 F 86 219 T " (int nIndexInOF, Vector vLx, char *objFunction, char *configFile, char *inputObjF, char *outputObjF, Vector vIndexes, double timeToSleep, int *nerror)" "evalNLConstraint" 1 103 F 59 355 T " (int j, Vector X, int *nerror)" "evalNLConstraint" 1 103 F 60 115 T " (int j, Vector v, int *nerror=NULL)" "evalNLConstraint" 1 103 F 82 307 T " (int j, Vector vv, int *nerror)" "evalNLConstraint" 1 103 F 83 55 T " (int j, Vector v, int *nerror=NULL)" "evalNLConstraint" 1 103 F 83 66 T " (int j, Vector v, int *nerror=NULL)" "evalNLConstraint" 1 103 F 86 143 T " (int j, Vector sv, int *ner)" "evalNLConstraint" 1 110 F 60 69 T " (int j, Vector v, int *nerror)" "evalNLConstraint" 1 110 F 60 130 T " (int j, Vector v, int *nerror=NULL)" "evalNLConstraint" 1 110 F 83 41 T " (int j, Vector v, int *nerror=NULL)" "evalNLConstraint" 1 110 F 87 48 T " (int j, Vector v, int *ner=NULL)" "exactshape" 1 103 F 52 356 T " ( )" "exactshape" 1 103 F 71 124 T " ( )" "exactshape" 1 103 F 73 86 T " ( )" "exactshape" 1 103 F 75 139 T " ( )" "exactshape" 1 110 F 53 69 T " ( )" "exactshape" 1 110 F 72 62 T " ( )" "exactshape" 1 110 F 74 50 T " ( )" "exactshape" 1 110 F 76 56 T " ( )" "eXMLErrorEmpty" 1 102 F 89 67 F "eXMLErrorFileNotFound" 1 102 F 89 76 F "eXMLErrorFirstNotStartTag" 1 102 F 89 68 F "eXMLErrorInvalidTag" 1 102 F 89 74 F "eXMLErrorMissingEndTagName" 1 102 F 89 70 F "eXMLErrorMissingTagName" 1 102 F 89 69 F "eXMLErrorNoElements" 1 102 F 89 75 F "eXMLErrorNoMatchingQuote" 1 102 F 89 71 F "eXMLErrorNone" 1 102 F 89 66 F "eXMLErrorUnexpectedToken" 1 102 F 89 73 F "eXMLErrorUnmatchedEndTag" 1 102 F 89 72 F "EXPMAX" 1 101 F 78 152 F "EXPMAXDIGS" 1 101 F 78 151 F "ext" 1 111 F 55 42 F "extColumn" 1 111 F 53 43 F "extend" 1 103 F 71 118 T " ( )" "extend" 1 103 F 73 80 T " ( )" "extend" 1 103 F 75 133 T " ( )" "extend" 1 110 F 72 60 T " ( )" "extend" 1 110 F 74 48 T " ( )" "extend" 1 110 F 76 54 T " ( )" "extendColumn" 1 103 F 52 173 T " ( )" "extendColumn" 1 110 F 53 66 T " ( )" "extendLine" 1 103 F 52 161 T " ( )" "extendLine" 1 110 F 53 64 T " ( )" "extention" 1 111 F 72 44 F "extention" 1 111 F 74 35 F "extention" 1 111 F 76 36 F "Extern" 1 101 F 77 54 F "externalData" 1 111 F 72 47 F "extLine" 1 111 F 53 43 F "f2c.h:abs" 1 101 T 77 188 F "f2c.h:bit_clear" 1 101 T 77 195 F "f2c.h:bit_set" 1 101 T 77 196 F "f2c.h:bit_test" 1 101 T 77 194 F "f2c.h:cray" 1 101 T 77 235 F "f2c.h:dabs" 1 101 T 77 189 F "f2c.h:dmax" 1 101 T 77 193 F "f2c.h:dmin" 1 101 T 77 192 F "f2c.h:Extern" 1 101 T 77 54 F "f2c.h:F2C_proc_par_types" 1 101 T 77 200 F "f2c.h:FALSE_" 1 101 T 77 50 F "f2c.h:gcos" 1 101 T 77 236 F "f2c.h:KRANF_F2C_INCLUDE" 1 101 T 77 8 F "f2c.h:max" 1 101 T 77 191 F "f2c.h:mc68010" 1 101 T 77 237 F "f2c.h:mc68020" 1 101 T 77 238 F "f2c.h:min" 1 101 T 77 190 F "f2c.h:mips" 1 101 T 77 239 F "f2c.h:pdp11" 1 101 T 77 240 F "f2c.h:qbit_clear" 1 101 T 77 44 F "f2c.h:qbit_set" 1 101 T 77 45 F "f2c.h:sgi" 1 101 T 77 241 F "f2c.h:sparc" 1 101 T 77 242 F "f2c.h:sun" 1 101 T 77 243 F "f2c.h:sun2" 1 101 T 77 244 F "f2c.h:sun3" 1 101 T 77 245 F "f2c.h:sun4" 1 101 T 77 246 F "f2c.h:TRUE_" 1 101 T 77 49 F "f2c.h:u370" 1 101 T 77 247 F "f2c.h:u3b" 1 101 T 77 248 F "f2c.h:u3b2" 1 101 T 77 249 F "f2c.h:u3b5" 1 101 T 77 250 F "f2c.h:unix" 1 101 T 77 251 F "f2c.h:vax" 1 101 T 77 252 F "f2c.h:VOID" 1 101 T 77 156 F "F2C_proc_par_types" 1 101 F 77 200 F "FALSE" 1 101 F 89 53 F "FALSE_" 1 101 F 77 50 F "ff" 1 103 F 82 124 T " (Vector X)" "ff" 1 110 F 83 122 T " (Vector v)" "FF" 1 111 F 79 81 F "finalize" 1 103 F 59 456 T " (Vector vG, Matrix mH, Vector vLambda)" "finalize" 1 103 F 60 89 T " (Vector vG, Matrix mH, Vector vLambda)" "finalize" 1 103 F 83 112 T " (Vector v, Matrix H, Vector l)" "finalize" 1 103 F 86 1489 T " (Vector vG, Matrix mH, Vector vLambda)" "finalize" 1 110 F 60 132 T " (Vector vG, Matrix mH, Vector vLambda)" "finalize" 1 110 F 87 50 T " (Vector vG, Matrix mH, Vector vLambda)" "findAGoodPointToReplace" 1 103 F 48 553 T " (int excludeFromT, double rho, Vector pointToAdd, double *maxd)" "findAGoodPointToReplace" 1 110 F 49 64 T " (int excludeFromT,double rho, Vector pointToAdd, double *modelStep=NULL)" "findAlpha" 1 103 F 70 35 T " (Vector s,Vector u, double delta, Polynomial &q, Vector pointXk,Vector &output, Vector minusG, Matrix H)" "findBest" 1 103 F 69 49 T " (Matrix data, char isConstrained, ObjectiveFunction *of)" "FindEndOfText" 1 103 F 88 508 T " (LPCTSTR lpszToken, int *pcbText)" "findK" 1 103 F 48 214 T " (double *ValuesF, int n, ObjectiveFunction *of, Vector *points)" "findK" 1 103 F 69 161 T " (double *ValuesF, int n, char isConstrained, ObjectiveFunction *of, Vector *points)" "FindNonWhiteSpace" 1 103 F 88 130 T " (XML *pXML)" "flag" 1 107 F 77 61 F "flag" 1 107 F 77 68 F "flag" 1 107 F 77 74 F "flags" 1 111 F 63 39 F "flags" 1 111 F 64 120 F "FletcherTest" 1 100 F 83 31 F "FletcherTest" 1 103 F 82 280 T " (int _t)" "FletcherTest" 1 110 F 83 37 T " (int _t)" "FletcherTest2" 1 100 F 83 45 F "FletcherTest2" 1 103 F 82 243 T " (int _t)" "FletcherTest2" 1 110 F 83 51 T " (int _t)" "FletcherTest2::eval" 1 103 F 82 272 T " (Vector v, int *nerror)" "FletcherTest2::eval" 1 110 F 83 54 T " (Vector v, int *nerror=NULL)" "FletcherTest2::evalGradNLConstraint" 1 103 F 83 56 T " (int j, Vector v, Vector result, int *nerror=NULL)" "FletcherTest2::evalNLConstraint" 1 103 F 83 55 T " (int j, Vector v, int *nerror=NULL)" "FletcherTest2::FletcherTest2" 1 103 F 82 243 T " (int _t)" "FletcherTest2::FletcherTest2" 1 110 F 83 51 T " (int _t)" "FletcherTest2::~FletcherTest2" 1 103 F 83 52 T " ( )" "FletcherTest::eval" 1 103 F 82 299 T " (Vector v, int *nerror)" "FletcherTest::eval" 1 110 F 83 40 T " (Vector v, int *nerror=NULL)" "FletcherTest::evalGradNLConstraint" 1 103 F 82 318 T " (int j, Vector v, Vector R, int *nerror)" "FletcherTest::evalGradNLConstraint" 1 110 F 83 42 T " (int j, Vector v, Vector result, int *nerror=NULL)" "FletcherTest::evalNLConstraint" 1 103 F 82 307 T " (int j, Vector vv, int *nerror)" "FletcherTest::evalNLConstraint" 1 110 F 83 41 T " (int j, Vector v, int *nerror=NULL)" "FletcherTest::FletcherTest" 1 103 F 82 280 T " (int _t)" "FletcherTest::FletcherTest" 1 110 F 83 37 T " (int _t)" "FletcherTest::~FletcherTest" 1 103 F 83 38 T " ( )" "FMAX" 1 101 F 78 150 F "frobeniusNorm" 1 103 F 52 1023 T " ( )" "frobeniusNorm" 1 110 F 53 127 T " ( )" "ft" 1 111 F 79 83 F "ftnint" 1 107 F 77 63 F "ftnint" 1 107 F 77 70 F "ftnint" 1 107 F 77 76 F "ftnlen" 1 107 F 77 62 F "ftnlen" 1 107 F 77 69 F "ftnlen" 1 107 F 77 75 F "FU_SPACE" 1 101 F 79 43 F "fullDim" 1 111 F 87 39 F "fullInit" 1 103 F 57 111 T " ( )" "fullInit" 1 110 F 58 76 T " ( )" "FullLambda" 1 109 F 47 38 F "fullUpdateOfM" 1 103 F 46 60 T " (double rho,Vector Base,Matrix data,InterPolynomial poly)" "fuvals" 1 111 F 79 83 F "g" 1 111 F 77 159 F "gcos" 1 101 F 77 236 F "GenerateBasis" 1 103 F 48 326 T " (double rho,double rhosmall,Matrix data,ObjectiveFunction *of)" "GenerateBasis" 1 110 F 49 53 T " (double rho,double rhosmall, Matrix data,ObjectiveFunction *of)" "get" 1 103 F 57 242 T " (unsigned _dim, unsigned _deg )" "get" 1 110 F 58 41 T " (unsigned _dim, unsigned _deg)" "getAttribute" 1 103 F 88 1507 T " (LPCTSTR lpszAttrib, int *j)" "getAttribute" 1 103 F 88 1539 T " (LPCTSTR name, int j)" "getAttribute" 1 103 F 88 1552 T " (int i)" "getAttribute" 1 110 F 89 151 T " (int i)" "getAttribute" 1 110 F 89 153 T " (LPCTSTR name, int i)" "getAttribute" 1 110 F 89 155 T " (LPCTSTR name, int *i=NULL)" "getChildNode" 1 103 F 88 1482 T " (LPCTSTR name, int *j)" "getChildNode" 1 103 F 88 1499 T " (LPCTSTR name, int j)" "getChildNode" 1 103 F 88 1554 T " (int i)" "getChildNode" 1 110 F 89 144 T " (int i)" "getChildNode" 1 110 F 89 145 T " (LPCTSTR name, int i)" "getChildNode" 1 110 F 89 147 T " (LPCTSTR name, int *i=NULL)" "getClear" 1 103 F 88 1551 T " (int i)" "getClear" 1 110 F 89 158 T " (int i)" "getColumn" 1 103 F 52 1086 T " (int i, int n)" "getColumn" 1 103 F 52 1095 T " (int i, Vector r, int n)" "getColumn" 1 110 F 53 89 T " (int i, int n=0)" "getColumn" 1 110 F 53 90 T " (int i, Vector r, int n=0)" "getColumnNames" 1 103 F 53 84 T " ( )" "getError" 1 103 F 88 387 T " (XMLError error)" "getError" 1 110 F 89 139 T " (XMLError error)" "getFirstPoints" 1 103 F 69 107 T " (double **ValuesFF, int *np, double rho, char isConstrained, ObjectiveFunction *of)" "getFromLine" 1 103 F 71 574 T " (char *line)" "getFromLine" 1 110 F 72 59 T " (char *line)" "getFullPath" 1 103 F 86 384 T " (const char *filename)" "getGoodInterPolationSites" 1 103 F 48 752 T " (Matrix d, int k, double rho, Vector *v)" "getGoodInterPolationSites" 1 110 F 49 71 T " (Matrix d, int k, double rho, Vector *v=NULL)" "getKey" 1 103 F 50 146 T " (int i)" "getKey" 1 110 F 51 52 T " (int i)" "getLine" 1 103 F 52 1072 T " (int i, int n, int startc)" "getLine" 1 103 F 52 1079 T " (int i, Vector r, int n, int startc)" "getLine" 1 110 F 53 87 T " (int i, int n=0, int startCol=0)" "getLine" 1 110 F 53 88 T " (int i, Vector r, int n=0, int startCol=0)" "getMaxColumn" 1 103 F 52 1051 T " ( )" "getMaxColumn" 1 110 F 53 130 T " ( )" "getName" 1 103 F 88 1546 T " ( )" "getName" 1 110 F 89 141 T " ( )" "getNameTable" 1 103 F 67 207 T " (const char *line, int *ncolumn)" "getNameTable" 1 110 F 68 119 T " (const char *line, int *ncolumn)" "getNextChar" 1 103 F 88 122 T " (XML *pXML)" "GetNextToken" 1 103 F 88 156 T " (XML *pXML, int *pcbToken, TokenType *pType)" "getNFE" 1 103 F 60 98 T " ( )" "getNFE" 1 103 F 60 133 T " ( )" "getNFE2" 1 103 F 60 99 T " ( )" "getNFE2" 1 103 F 60 134 T " ( )" "getObjectiveFunction" 1 103 F 80 89 T " (int i, double *rho)" "getObjectiveFunction" 1 103 F 81 48 T " (int i, int n=0)" "getOptValue" 1 103 F 50 154 T " (int i, int no)" "getOptValue" 1 103 F 50 165 T " (int i)" "getOptValue" 1 110 F 51 54 T " (int i, int n)" "getOptValue" 1 110 F 51 55 T " (int i)" "GetRidOfTheEOL" 1 103 F 67 188 T " (char *tline)" "GetRidOfTheEOL" 1 110 F 68 117 T " (char *tline)" "getSubMatrix" 1 103 F 52 1123 T " (Matrix R, int startL, int startC, int nl, int nc)" "getSubMatrix" 1 110 F 53 91 T " (Matrix R, int startL, int StartC, int nl=0, int nc=0)" "getText" 1 103 F 88 1553 T " (int i)" "getText" 1 110 F 89 142 T " (int i=0)" "getValue" 1 103 F 50 138 T " (int i)" "getValue" 1 110 F 51 53 T " (int i)" "gpvalu" 1 111 F 79 83 F "gradient" 1 103 F 63 504 T " (Vector P, Vector G)" "gradient" 1 110 F 64 99 T " (Vector P, Vector G)" "gradientHessian" 1 103 F 63 517 T " (Vector P, Vector G, Matrix H)" "gradientHessian" 1 110 F 64 100 T " (Vector P, Vector G, Matrix H)" "groupType" 1 107 F 79 70 F "gscale" 1 111 F 79 83 F "gvals" 1 111 F 79 83 F "gxeqx" 1 111 F 79 87 F "h" 1 111 F 77 160 F "H_f" 1 107 F 77 228 F "H_fp" 1 107 F 77 211 F "H_fp" 1 107 F 77 223 F "head" 1 111 F 58 43 F "i" 1 111 F 77 18 F "i" 1 111 F 77 19 F "i" 1 111 F 77 35 F "i" 1 111 F 77 36 F "i" 1 111 F 77 161 F "I_fp" 1 107 F 77 204 F "I_fp" 1 107 F 77 216 F "icalcf" 1 111 F 79 84 F "iciend" 1 111 F 77 94 F "icierr" 1 111 F 77 92 F "icifmt" 1 111 F 77 95 F "icilist" 1 107 F 77 98 F "icirlen" 1 111 F 77 96 F "icirnum" 1 111 F 77 97 F "iciunit" 1 111 F 77 93 F "icna" 1 111 F 79 84 F "ieling" 1 111 F 79 84 F "ielvar" 1 111 F 79 84 F "ifstat" 1 109 F 78 613 F "igstat" 1 109 F 78 613 F "inacc" 1 111 F 77 138 F "inacclen" 1 111 F 77 139 F "inblank" 1 111 F 77 152 F "inblanklen" 1 111 F 77 153 F "INDENTCHAR" 1 101 F 88 66 F "index" 1 103 F 58 68 T " ( )" "indexesOfCoefInLexOrder" 1 103 F 57 214 T " ( )" "indexesOfCoefInLexOrder" 1 110 F 58 56 T " ( )" "indexesOfCoefInLexOrderV" 1 111 F 58 79 F "indexV" 1 111 F 58 80 F "indexVar" 1 103 F 86 355 T " (int *r, const char *to,char **names,int fullDim)" "indir" 1 111 F 77 142 F "indirlen" 1 111 F 77 143 F "inerr" 1 111 F 77 128 F "inex" 1 111 F 77 132 F "INF" 1 101 F 51 30 F "INF" 1 101 F 60 34 F "INF" 1 101 F 68 39 F "infile" 1 111 F 77 130 F "infilen" 1 111 F 77 131 F "infmt" 1 111 F 77 144 F "infmtlen" 1 111 F 77 145 F "inform" 1 111 F 77 146 F "informlen" 1 111 F 77 147 F "init" 1 103 F 50 41 T " ( )" "init" 1 103 F 52 37 T " (int _nLine, int _nColumn, int _extLine, int _extColumn,MatrixData* md)" "init" 1 103 F 59 407 T " ( )" "init" 1 103 F 63 43 T " (int _dim, int _deg, double *data)" "init" 1 103 F 86 407 T " (char *filename)" "init" 1 110 F 51 58 T " ( )" "init" 1 110 F 53 49 T " (int _nLine, int _nColumn, int _extLine, int _extColumn, MatrixData* d=NULL)" "init" 1 110 F 60 136 T " ( )" "init" 1 110 F 64 49 T " (int _dim, int _deg, double *data=NULL)" "init" 1 110 F 87 88 T " (char *filame)" "initBounds" 1 103 F 59 315 T " ( )" "initBounds" 1 110 F 60 94 T " ( )" "initConstrainedStep" 1 103 F 47 57 T " (ObjectiveFunction *of)" "initConstrainedStep" 1 110 F 46 56 T " (ObjectiveFunction *of)" "initData" 1 103 F 59 259 T " ( )" "initData" 1 110 F 60 85 T " ( )" "initLambdaL" 1 103 F 70 90 T " (double normG,double delta, Matrix H)" "initLambdaU" 1 103 F 70 112 T " (double normG,double delta, Matrix H)" "initLambdaU2" 1 103 F 70 130 T " (Matrix H)" "initLinux" 1 103 F 86 1542 T " ( )" "initLinux" 1 103 F 86 1545 T " ( )" "initLinux" 1 110 F 86 1380 T " ( )" "initRandom" 1 103 F 67 101 T " (int i)" "initRandom" 1 110 F 68 108 T " (int i=0)" "initTolLC" 1 103 F 59 106 T " (Vector vX)" "initTolLC" 1 110 F 60 96 T " (Vector vX)" "initTolNLC" 1 103 F 59 118 T " (Vector c, double delta)" "initTolNLC" 1 110 F 60 97 T " (Vector c, double delta)" "initXMLBounds" 1 103 F 86 371 T " ( )" "initXMLBounds" 1 110 F 87 89 T " ( )" "inlist" 1 107 F 77 154 F "inname" 1 111 F 77 136 F "innamed" 1 111 F 77 135 F "innamlen" 1 111 F 77 137 F "innrec" 1 111 F 77 151 F "innum" 1 111 F 77 134 F "inopen" 1 111 F 77 133 F "inputObjF" 1 111 F 87 75 F "inrecl" 1 111 F 77 150 F "inseq" 1 111 F 77 140 F "inseqlen" 1 111 F 77 141 F "integer" 1 107 F 77 12 F "integer" 1 107 F 77 29 F "integer1" 1 107 F 77 23 F "integer1" 1 107 F 77 40 F "interpError" 1 103 F 48 538 T " (Vector Point)" "interpError" 1 110 F 49 72 T " (Vector Point)" "InterPolynomial" 1 100 F 49 35 F "InterPolynomial" 1 103 F 48 228 T " ( unsigned _deg, double rho,Vector _vBase, Matrix data, ObjectiveFunction *of)" "InterPolynomial" 1 103 F 48 826 T " (const InterPolynomial &A)" "InterPolynomial" 1 103 F 48 863 T " (unsigned _dim, unsigned _deg)" "InterPolynomial" 1 110 F 49 62 T " ( unsigned _deg, double rho, Vector vBase, Matrix data, ObjectiveFunction *of)" "InterPolynomial" 1 110 F 49 82 T " (const InterPolynomial &A)" "InterPolynomial" 1 110 F 49 87 T " (unsigned dim, unsigned deg)" "InterPolynomial::checkIfValidityIsInBound" 1 103 F 48 686 T " (Vector ddv, unsigned k, double bound, double rho)" "InterPolynomial::checkIfValidityIsInBound" 1 110 F 49 70 T " (Vector dd, unsigned k, double bound, double rho)" "InterPolynomial::clone" 1 103 F 48 870 T " ( )" "InterPolynomial::clone" 1 110 F 49 84 T " ( )" "InterPolynomial::ComputeLagrangeBasis" 1 103 F 48 127 T " (double *yy, unsigned nPtsTotal)" "InterPolynomial::ComputeLagrangeBasis" 1 110 F 49 52 T " (double *, unsigned nPtsTotal)" "InterPolynomial::copyFrom" 1 103 F 48 878 T " (InterPolynomial m)" "InterPolynomial::copyFrom" 1 103 F 48 906 T " (Polynomial m)" "InterPolynomial::copyFrom" 1 110 F 49 85 T " (InterPolynomial a)" "InterPolynomial::copyFrom" 1 110 F 49 86 T " (Polynomial a)" "InterPolynomial::destroyCurrentBuffer" 1 103 F 48 807 T " ( )" "InterPolynomial::destroyCurrentBuffer" 1 110 F 49 90 T " ( )" "InterPolynomial::findAGoodPointToReplace" 1 103 F 48 553 T " (int excludeFromT, double rho, Vector pointToAdd, double *maxd)" "InterPolynomial::findAGoodPointToReplace" 1 110 F 49 64 T " (int excludeFromT,double rho, Vector pointToAdd, double *modelStep=NULL)" "InterPolynomial::GenerateBasis" 1 103 F 48 326 T " (double rho,double rhosmall,Matrix data,ObjectiveFunction *of)" "InterPolynomial::GenerateBasis" 1 110 F 49 53 T " (double rho,double rhosmall, Matrix data,ObjectiveFunction *of)" "InterPolynomial::getGoodInterPolationSites" 1 103 F 48 752 T " (Matrix d, int k, double rho, Vector *v)" "InterPolynomial::getGoodInterPolationSites" 1 110 F 49 71 T " (Matrix d, int k, double rho, Vector *v=NULL)" "InterPolynomial::interpError" 1 103 F 48 538 T " (Vector Point)" "InterPolynomial::interpError" 1 110 F 49 72 T " (Vector Point)" "InterPolynomial::InterPolynomial" 1 103 F 48 228 T " ( unsigned _deg, double rho,Vector _vBase, Matrix data, ObjectiveFunction *of)" "InterPolynomial::InterPolynomial" 1 103 F 48 826 T " (const InterPolynomial &A)" "InterPolynomial::InterPolynomial" 1 103 F 48 863 T " (unsigned _dim, unsigned _deg)" "InterPolynomial::InterPolynomial" 1 110 F 49 62 T " ( unsigned _deg, double rho, Vector vBase, Matrix data, ObjectiveFunction *of)" "InterPolynomial::InterPolynomial" 1 110 F 49 82 T " (const InterPolynomial &A)" "InterPolynomial::InterPolynomial" 1 110 F 49 87 T " (unsigned dim, unsigned deg)" "InterPolynomial::kbest" 1 111 F 49 49 F "InterPolynomial::M" 1 111 F 49 39 F "InterPolynomial::maybeAdd" 1 103 F 48 651 T " (Vector pointToAdd, unsigned k, double rho, double valueF)" "InterPolynomial::maybeAdd" 1 110 F 49 67 T " (Vector pointToAdd, unsigned k, double rho, double valueF)" "InterPolynomial::NewtonBasis" 1 111 F 49 43 F "InterPolynomial::NewtonCoefficient" 1 110 F 49 51 T " (double *)" "InterPolynomial::NewtonPoints" 1 111 F 49 47 F "InterPolynomial::nPtsUsed" 1 111 F 49 40 F "InterPolynomial::nUpdateOfM" 1 111 F 49 40 F "InterPolynomial::operator =" 1 103 F 48 840 T " ( const InterPolynomial& A )" "InterPolynomial::operator =" 1 110 F 49 83 T " ( const InterPolynomial& A )" "InterPolynomial::replace" 1 103 F 48 624 T " (int t, Vector pointToAdd, double valueF)" "InterPolynomial::replace" 1 110 F 49 66 T " (int t, Vector pointToAdd, double valueF)" "InterPolynomial::translate" 1 103 F 48 792 T " (Vector translation)" "InterPolynomial::translate" 1 110 F 49 74 T " (int k)" "InterPolynomial::translate" 1 110 F 49 75 T " (Vector translation)" "InterPolynomial::updateM" 1 103 F 48 521 T " (Vector newPoint, double valueF)" "InterPolynomial::updateM" 1 110 F 49 69 T " (Vector newPoint, double valueF)" "InterPolynomial::valuesF" 1 111 F 49 48 F "InterPolynomial::vBase" 1 111 F 49 47 F "InterPolynomial::~InterPolynomial" 1 103 F 48 821 T " ( )" "InterPolynomial::~InterPolynomial" 1 110 F 49 81 T " ( )" "IntPoly.h:_INTPOLY_H_" 1 101 T 49 32 F "intvar" 1 111 F 79 84 F "inunf" 1 111 F 77 148 F "inunflen" 1 111 F 77 149 F "inunit" 1 111 F 77 129 F "isANumber" 1 103 F 71 533 T " (char c)" "isAttributeSet" 1 103 F 88 1524 T " (LPCTSTR lpszAttrib)" "isAttributeSet" 1 110 F 89 152 T " (LPCTSTR name)" "isConstrained" 1 111 F 60 54 F "isDeclaration" 1 103 F 88 1555 T " ( )" "isDeclaration" 1 110 F 89 166 T " ( )" "isDeclaration" 1 111 F 89 118 F "isdigit" 1 103 F 78 155 T " (char c)" "isEmpty" 1 103 F 67 168 T " (const char *line)" "isEmpty" 1 103 F 88 1556 T " ( )" "isEmpty" 1 110 F 68 121 T " (const char *line)" "isEmpty" 1 110 F 89 165 T " ( )" "isEmptyline" 1 103 F 67 180 T " (const char *line)" "isFeasible" 1 103 F 59 57 T " (Vector vx, double *d)" "isFeasible" 1 110 F 60 93 T " (Vector vx, double *d=NULL)" "isFeasible" 1 110 F 69 42 T " (Vector vx,ConstrainedObjectiveFunction *of, double *d=NULL)" "isInt" 1 103 F 68 61 T " ( const double a)" "isNull" 1 103 F 71 357 T " ( )" "isNull" 1 110 F 72 105 T " ( )" "istada" 1 111 F 79 84 F "istadg" 1 111 F 79 84 F "istadh" 1 111 F 79 84 F "istaev" 1 111 F 79 84 F "istep" 1 111 F 79 84 F "istgp" 1 111 F 79 84 F "itypee" 1 111 F 79 84 F "itypeg" 1 111 F 79 84 F "ivar" 1 111 F 87 63 F "J_fp" 1 107 F 77 203 F "J_fp" 1 107 F 77 215 F "jobToDo" 1 109 F 78 616 F "K" 1 111 F 51 34 F "K_fp" 1 107 F 77 210 F "K_fp" 1 107 F 77 222 F "kbest" 1 111 F 49 49 F "KeepBests" 1 100 F 51 40 F "KeepBests" 1 103 F 50 31 T " (int _n)" "KeepBests" 1 103 F 50 36 T " (int _n, int _optionalN)" "KeepBests" 1 110 F 51 43 T " (int n)" "KeepBests" 1 110 F 51 44 T " (int n, int optionalN)" "KeepBests.h:__INCLUDE_KEEPBEST__" 1 101 T 51 28 F "KeepBests.h:INF" 1 101 T 51 30 F "KeepBests::_local_getOptValueC" 1 111 F 51 59 F "KeepBests::_local_getOptValueI" 1 111 F 51 60 F "KeepBests::add" 1 103 F 50 89 T " (double key, double value)" "KeepBests::add" 1 103 F 50 93 T " (double key, double value, double optionalValue)" "KeepBests::add" 1 103 F 50 98 T " (double key, double value, double *optionalValue)" "KeepBests::add" 1 103 F 50 103 T " (double key, double value, double *optionalValue, int nn)" "KeepBests::add" 1 110 F 51 48 T " (double key, double value)" "KeepBests::add" 1 110 F 51 49 T " (double key, double value, double optionalValue)" "KeepBests::add" 1 110 F 51 50 T " (double key, double value, double *optionalValue)" "KeepBests::add" 1 110 F 51 51 T " (double key, double value, double *optionalValue, int nn)" "KeepBests::ctable" 1 111 F 51 59 F "KeepBests::end" 1 111 F 51 59 F "KeepBests::getKey" 1 103 F 50 146 T " (int i)" "KeepBests::getKey" 1 110 F 51 52 T " (int i)" "KeepBests::getOptValue" 1 103 F 50 154 T " (int i, int no)" "KeepBests::getOptValue" 1 103 F 50 165 T " (int i)" "KeepBests::getOptValue" 1 110 F 51 54 T " (int i, int n)" "KeepBests::getOptValue" 1 110 F 51 55 T " (int i)" "KeepBests::getValue" 1 103 F 50 138 T " (int i)" "KeepBests::getValue" 1 110 F 51 53 T " (int i)" "KeepBests::init" 1 103 F 50 41 T " ( )" "KeepBests::init" 1 110 F 51 58 T " ( )" "KeepBests::KeepBests" 1 103 F 50 31 T " (int _n)" "KeepBests::KeepBests" 1 103 F 50 36 T " (int _n, int _optionalN)" "KeepBests::KeepBests" 1 110 F 51 43 T " (int n)" "KeepBests::KeepBests" 1 110 F 51 44 T " (int n, int optionalN)" "KeepBests::n" 1 111 F 51 60 F "KeepBests::optionalN" 1 111 F 51 60 F "KeepBests::reset" 1 103 F 50 82 T " ( )" "KeepBests::reset" 1 110 F 51 47 T " ( )" "KeepBests::setOptionalN" 1 103 F 50 62 T " (int _optionalN)" "KeepBests::setOptionalN" 1 110 F 51 45 T " (int optinalN)" "KeepBests::sz" 1 103 F 51 56 T " ( )" "KeepBests::~KeepBests" 1 103 F 50 76 T " ( )" "KeepBests::~KeepBests" 1 110 F 51 46 T " ( )" "KRANF_F2C_INCLUDE" 1 101 F 77 8 F "L1Distance" 1 103 F 71 271 T " (Vector v)" "L1Distance" 1 110 F 72 91 T " (Vector v)" "L1Norm" 1 103 F 71 226 T " ( )" "L1Norm" 1 110 F 72 88 T " ( )" "L2NormMinimizer" 1 103 F 70 147 T " (Polynomial q, Vector pointXk, double delta, int *infoOut, int maxIter, double *lambda1, Vector minusG, Matrix H)" "L2NormMinimizer" 1 103 F 70 297 T " (Polynomial q, Vector pointXk, double delta, int *infoOut, int maxIter, double *lambda1)" "L2NormMinimizer" 1 103 F 70 307 T " (Polynomial q, double delta, int *infoOut, int maxIter, double *lambda1)" "L2NormMinimizer" 1 110 F 47 47 T " (Polynomial q, double delta, int *infoOut=NULL, int maxIter=1000, double *lambda1=NULL)" "L2NormMinimizer" 1 110 F 47 49 T " (Polynomial q, Vector pointXk, double delta, int *infoOut=NULL, int maxIter=1000, double *lambda1=NULL)" "L2NormMinimizer" 1 110 F 47 51 T " (Polynomial q, Vector pointXk, double delta, int *infoOut, int maxIter, double *lambda1, Vector minusG, Matrix H)" "L2NormMinimizer" 1 110 F 66 33 T " (Polynomial q, double delta, int *infoOut=NULL, int maxIter=1000, double *lambda1=NULL)" "L2NormMinimizer" 1 110 F 66 35 T " (Polynomial q, Vector pointXk, double delta, int *infoOut=NULL, int maxIter=1000, double *lambda1=NULL)" "L2NormMinimizer" 1 110 F 66 37 T " (Polynomial q, Vector pointXk, double delta, int *infoOut, int maxIter, double *lambda1, Vector minusG, Matrix H)" "L_fp" 1 107 F 77 209 F "L_fp" 1 107 F 77 221 F "LAGMAXModified" 1 103 F 56 40 T " (Vector G, Matrix H, double rho,double &VMAX)" "LAGMAXModified" 1 103 F 56 208 T " (Polynomial q, Vector pointXk, double rho,double &VMAX)" "LAGMAXModified" 1 103 F 56 217 T " (Polynomial q, double rho,double &VMAX)" "LAGMAXModified" 1 110 F 48 33 T " (Vector G, Matrix H, double rho,double &VMAX)" "LAGMAXModified" 1 110 F 66 40 T " (Polynomial q, double rho,double &VMAX)" "LAGMAXModified" 1 110 F 66 41 T " (Polynomial q, Vector pointXk, double rho,double &VMAX)" "LAGMAXModified" 1 110 F 66 42 T " (Vector G, Matrix H, double rho,double &VMAX)" "lastChanges" 1 103 F 57 204 T " ( )" "lastChanges" 1 110 F 58 55 T " ( )" "lastChangesV" 1 111 F 58 79 F "launchObjFunction" 1 103 F 86 158 T " (double tt, char *configFile, char *objFunction,char *inputObjF, char *outputObjF)" "lcalcg" 1 111 F 79 84 F "len" 1 103 F 57 96 T " ( )" "len" 1 110 F 58 69 T " ( )" "LENSTR" 1 101 F 88 1138 F "LENSTR" 1 101 F 88 1380 F "lepvlu" 1 111 F 79 91 F "lgpvlu" 1 111 F 79 91 F "lineIndex" 1 103 F 52 1146 T " (Vector r, int nn)" "lineIndex" 1 110 F 53 95 T " (Vector r, int nn=0)" "LINPACK" 1 103 F 54 119 T " (Vector &R)" "LINPACK" 1 110 F 55 71 T " (Vector &u)" "lnelnum" 1 111 F 79 91 F "lnelvars" 1 111 F 79 91 F "LnftyDistance" 1 103 F 71 255 T " (Vector v)" "LnftyDistance" 1 110 F 72 92 T " (Vector v)" "LnftyNorm" 1 103 F 52 1036 T " ( )" "LnftyNorm" 1 103 F 71 263 T " ( )" "LnftyNorm" 1 110 F 53 128 T " ( )" "LnftyNorm" 1 110 F 72 89 T " ( )" "loadconstraints" 1 110 F 87 86 T " (int nineq, FILE *stream,char *line)" "loadData" 1 110 F 87 87 T " (char *line, char ascii)" "loadFile" 1 103 F 67 268 T " (FILE *f)" "loadFile" 1 110 F 68 123 T " (FILE *f)" "logical" 1 107 F 77 20 F "logical" 1 107 F 77 37 F "logical1" 1 107 F 77 22 F "logical1" 1 107 F 77 39 F "longint" 1 107 F 77 42 F "longXtoShortX" 1 103 F 86 303 T " (double *llx, double *sx)" "longXtoShortX" 1 110 F 87 85 T " (double *llx, double *sx)" "LPCTSTR" 1 101 F 89 44 F "lpEndTag" 1 111 F 88 80 F "lpNewElement" 1 111 F 88 82 F "lpszClose" 1 111 F 88 71 F "lpszCloseTag" 1 111 F 89 97 F "lpszName" 1 111 F 89 102 F "lpszName" 1 111 F 89 113 F "lpszOpen" 1 111 F 88 70 F "lpszOpenTag" 1 111 F 89 97 F "lpszValue" 1 111 F 89 97 F "lpszValue" 1 111 F 89 102 F "LPTSTR" 1 101 F 89 47 F "lpXML" 1 111 F 88 77 F "M" 1 111 F 49 39 F "main" 1 103 F 80 186 T " (int argc, char **argv)" "main" 1 103 F 81 165 T " (int argc, char **argv)" "main" 1 103 F 84 44 T " (int argc, char **argv)" "main" 1 103 F 85 103 T " (int argc, char **argv)" "makefile:all" 18 1701 T 90 4 F "makefile:AMPLFILES" 18 1700 T 90 36 F "makefile:amplOptimizer" 18 1701 T 90 82 F "makefile:clean" 18 1701 T 90 94 F "makefile:COMMONCPPFILES" 18 1700 T 90 24 F "makefile:COMMONHFILES" 18 1700 T 90 31 F "makefile:dbtool" 18 1701 T 90 61 F "makefile:matconvert" 18 1701 T 90 46 F "makefile:MATHEVALCPP" 18 1700 T 90 41 F "makefile:OPTIONS" 18 1700 T 90 10 F "makefile:SIFEXAMPLES" 18 1700 T 90 13 F "makefile:sifOptimizer" 18 1701 T 90 74 F "makefile:simpleOptimizer" 18 1701 T 90 87 F "makefile:testFunctions" 18 1701 T 90 68 F "makefile:XMLFILESCPP" 18 1700 T 90 39 F "makefile:XMLFILESH" 18 1700 T 90 38 F "makefile:xmlOptimizer" 18 1701 T 90 52 F "makefile:xmlStuff" 18 1701 T 90 8 F "matconvert" 18 1701 F 90 46 F "MATHEVALCPP" 18 1700 F 90 41 F "Matrix" 1 100 F 53 37 F "Matrix" 1 103 F 52 60 T " (int _nLine,int _nColumn)" "Matrix" 1 103 F 52 74 T " (Vector a)" "Matrix" 1 103 F 52 81 T " (Vector a, Vector b)" "Matrix" 1 103 F 52 92 T " (int _nLine,int _nColumn,int _extLine,int _extColumn)" "Matrix" 1 103 F 52 97 T " (const char *filename, char ascii)" "Matrix" 1 103 F 52 441 T " (const Matrix &A)" "Matrix" 1 103 F 52 720 T " (MatrixTriangle A, char bTranspose)" "Matrix" 1 110 F 53 56 T " (int _ligne=0,int _nColumn=0)" "Matrix" 1 110 F 53 57 T " (int _ligne,int _nColumn, int _extLine,int _extColumn)" "Matrix" 1 110 F 53 58 T " (const char *filename, char ascii=0)" "Matrix" 1 110 F 53 59 T " (Vector a, Vector b)" "Matrix" 1 110 F 53 60 T " (Vector a)" "Matrix" 1 110 F 53 75 T " (const Matrix &A)" "Matrix" 1 110 F 53 120 T " (MatrixTriangle A, char bTranspose=0)" "Matrix.h:_INCLUDE_MATRIX_H" 1 101 T 53 28 F "Matrix::addInPlace" 1 103 F 52 681 T " (Matrix B)" "Matrix::addInPlace" 1 110 F 53 111 T " (Matrix B)" "Matrix::addMultiplyInPlace" 1 103 F 52 698 T " (double d, Matrix B)" "Matrix::addMultiplyInPlace" 1 110 F 53 112 T " (double d, Matrix B)" "Matrix::addUnityInPlace" 1 103 F 52 1016 T " (double dd)" "Matrix::addUnityInPlace" 1 110 F 53 113 T " (double d)" "Matrix::append" 1 103 F 52 1205 T " (Vector tmp)" "Matrix::append" 1 110 F 53 97 T " (Vector tmp)" "Matrix::cholesky" 1 103 F 52 741 T " (MatrixTriangle matL, double lambda, double *lambdaCorrection)" "Matrix::cholesky" 1 110 F 53 121 T " (MatrixTriangle matL, double lambda=0, double *lambdaCorrection=NULL)" "Matrix::choleskySolveInPlace" 1 103 F 52 786 T " (Vector b)" "Matrix::choleskySolveInPlace" 1 110 F 53 122 T " (Vector b)" "Matrix::clone" 1 103 F 52 448 T " ( )" "Matrix::clone" 1 110 F 53 77 T " ( )" "Matrix::copyFrom" 1 103 F 52 456 T " (Matrix m)" "Matrix::copyFrom" 1 110 F 53 78 T " (Matrix a)" "Matrix::d" 1 111 F 53 47 F "Matrix::destroyCurrentBuffer" 1 103 F 52 417 T " ( )" "Matrix::destroyCurrentBuffer" 1 110 F 53 51 T " ( )" "Matrix::diagonal" 1 103 F 52 65 T " (double dd)" "Matrix::diagonal" 1 110 F 53 101 T " (double d)" "Matrix::emptyMatrix" 1 111 F 52 35 F "Matrix::emptyMatrix" 1 111 F 53 133 F "Matrix::euclidianNorm" 1 103 F 52 1118 T " (int i)" "Matrix::euclidianNorm" 1 110 F 53 129 T " (int i)" "Matrix::exactshape" 1 103 F 52 356 T " ( )" "Matrix::exactshape" 1 110 F 53 69 T " ( )" "Matrix::extendColumn" 1 103 F 52 173 T " ( )" "Matrix::extendColumn" 1 110 F 53 66 T " ( )" "Matrix::extendLine" 1 103 F 52 161 T " ( )" "Matrix::extendLine" 1 110 F 53 64 T " ( )" "Matrix::frobeniusNorm" 1 103 F 52 1023 T " ( )" "Matrix::frobeniusNorm" 1 110 F 53 127 T " ( )" "Matrix::getColumn" 1 103 F 52 1086 T " (int i, int n)" "Matrix::getColumn" 1 103 F 52 1095 T " (int i, Vector r, int n)" "Matrix::getColumn" 1 110 F 53 89 T " (int i, int n=0)" "Matrix::getColumn" 1 110 F 53 90 T " (int i, Vector r, int n=0)" "Matrix::getColumnNames" 1 103 F 53 84 T " ( )" "Matrix::getLine" 1 103 F 52 1072 T " (int i, int n, int startc)" "Matrix::getLine" 1 103 F 52 1079 T " (int i, Vector r, int n, int startc)" "Matrix::getLine" 1 110 F 53 87 T " (int i, int n=0, int startCol=0)" "Matrix::getLine" 1 110 F 53 88 T " (int i, Vector r, int n=0, int startCol=0)" "Matrix::getMaxColumn" 1 103 F 52 1051 T " ( )" "Matrix::getMaxColumn" 1 110 F 53 130 T " ( )" "Matrix::getSubMatrix" 1 103 F 52 1123 T " (Matrix R, int startL, int startC, int nl, int nc)" "Matrix::getSubMatrix" 1 110 F 53 91 T " (Matrix R, int startL, int StartC, int nl=0, int nc=0)" "Matrix::init" 1 103 F 52 37 T " (int _nLine, int _nColumn, int _extLine, int _extColumn,MatrixData* md)" "Matrix::init" 1 110 F 53 49 T " (int _nLine, int _nColumn, int _extLine, int _extColumn, MatrixData* d=NULL)" "Matrix::lineIndex" 1 103 F 52 1146 T " (Vector r, int nn)" "Matrix::lineIndex" 1 110 F 53 95 T " (Vector r, int nn=0)" "Matrix::LnftyNorm" 1 103 F 52 1036 T " ( )" "Matrix::LnftyNorm" 1 110 F 53 128 T " ( )" "Matrix::Matrix" 1 103 F 52 60 T " (int _nLine,int _nColumn)" "Matrix::Matrix" 1 103 F 52 74 T " (Vector a)" "Matrix::Matrix" 1 103 F 52 81 T " (Vector a, Vector b)" "Matrix::Matrix" 1 103 F 52 92 T " (int _nLine,int _nColumn,int _extLine,int _extColumn)" "Matrix::Matrix" 1 103 F 52 97 T " (const char *filename, char ascii)" "Matrix::Matrix" 1 103 F 52 441 T " (const Matrix &A)" "Matrix::Matrix" 1 103 F 52 720 T " (MatrixTriangle A, char bTranspose)" "Matrix::Matrix" 1 110 F 53 56 T " (int _ligne=0,int _nColumn=0)" "Matrix::Matrix" 1 110 F 53 57 T " (int _ligne,int _nColumn, int _extLine,int _extColumn)" "Matrix::Matrix" 1 110 F 53 58 T " (const char *filename, char ascii=0)" "Matrix::Matrix" 1 110 F 53 59 T " (Vector a, Vector b)" "Matrix::Matrix" 1 110 F 53 60 T " (Vector a)" "Matrix::Matrix" 1 110 F 53 75 T " (const Matrix &A)" "Matrix::Matrix" 1 110 F 53 120 T " (MatrixTriangle A, char bTranspose=0)" "Matrix::MatrixData" 1 107 F 53 46 F "Matrix::MatrixDataTag" 1 106 F 53 40 F "Matrix::MatrixDataTag::columnNames" 1 111 F 53 42 F "Matrix::MatrixDataTag::extColumn" 1 111 F 53 43 F "Matrix::MatrixDataTag::extLine" 1 111 F 53 43 F "Matrix::MatrixDataTag::nColumn" 1 111 F 53 43 F "Matrix::MatrixDataTag::nLine" 1 111 F 53 43 F "Matrix::MatrixDataTag::p" 1 111 F 53 45 F "Matrix::MatrixDataTag::ref_count" 1 111 F 53 44 F "Matrix::merge" 1 103 F 52 1181 T " (Matrix m,int eliminateDoubles)" "Matrix::merge" 1 110 F 53 96 T " (Matrix m, int eliminateDoubles=1)" "Matrix::multiply" 1 103 F 52 551 T " (Matrix R, Matrix Bplus)" "Matrix::multiply" 1 103 F 52 611 T " (Matrix Bplus)" "Matrix::multiply" 1 103 F 52 628 T " (Vector rv, Vector v)" "Matrix::multiply" 1 103 F 52 666 T " (Vector v)" "Matrix::multiply" 1 110 F 53 102 T " (Matrix B)" "Matrix::multiply" 1 110 F 53 104 T " (Vector R, Vector v)" "Matrix::multiply" 1 110 F 53 106 T " (Matrix R, Matrix a)" "Matrix::multiply" 1 110 F 53 110 T " (Vector v)" "Matrix::multiplyByDiagonalMatrix" 1 103 F 52 536 T " (Vector v)" "Matrix::multiplyByDiagonalMatrix" 1 110 F 53 109 T " (Vector v)" "Matrix::multiplyByTranspose" 1 103 F 52 591 T " (Matrix R, Matrix Bplus)" "Matrix::multiplyByTranspose" 1 110 F 53 108 T " (Matrix R, Matrix a)" "Matrix::multiplyInPlace" 1 103 F 52 618 T " (double dd)" "Matrix::multiplyInPlace" 1 110 F 53 103 T " (double d)" "Matrix::nColumn" 1 103 F 53 83 T " ( )" "Matrix::nLine" 1 103 F 53 82 T " ( )" "Matrix::operator =" 1 103 F 52 429 T " ( const Matrix& A )" "Matrix::operator =" 1 110 F 53 76 T " ( const Matrix& A )" "Matrix::operator ==" 1 103 F 53 81 T " ( const Matrix& A )" "Matrix::operator []" 1 103 F 53 85 T " (int i)" "Matrix::operator double**" 1 103 F 53 86 T " ( )" "Matrix::print" 1 103 F 52 396 T " ( )" "Matrix::print" 1 110 F 53 70 T " ( )" "Matrix::QR" 1 103 F 52 798 T " (Matrix Q, MatrixTriangle Rt, VectorInt vPermutation)" "Matrix::QR" 1 110 F 53 123 T " (Matrix Q=Matrix::emptyMatrix, MatrixTriangle R=MatrixTriangle::emptyMatrixTriangle, VectorInt permutation=VectorInt::emptyVectorInt)" "Matrix::save" 1 103 F 52 262 T " (char *filename,char ascii)" "Matrix::save" 1 103 F 52 286 T " (FILE *f,char ascii)" "Matrix::save" 1 110 F 53 61 T " (char *filename,char ascii)" "Matrix::save" 1 110 F 53 62 T " (FILE *f,char ascii)" "Matrix::scalarProduct" 1 103 F 52 673 T " (int nl, Vector v)" "Matrix::scalarProduct" 1 110 F 53 117 T " (int nl, Vector v)" "Matrix::setColNames" 1 103 F 52 1158 T " (char **c, int nc)" "Matrix::setColNames" 1 110 F 53 71 T " (char **c, int nc=0)" "Matrix::setExtSize" 1 103 F 52 192 T " (int _extLine, int _extColumn)" "Matrix::setExtSize" 1 110 F 53 50 T " (int _extLine, int _extColumn)" "Matrix::setLine" 1 103 F 52 1103 T " (int i, Vector v, int n)" "Matrix::setLine" 1 110 F 53 92 T " (int i, Vector v, int n=0)" "Matrix::setLines" 1 103 F 52 1109 T " (int indexDest, Matrix Source, int indexSource, int number)" "Matrix::setLines" 1 110 F 53 93 T " (int indexDest, Matrix Source, int indexSource=0, int number=0)" "Matrix::setNColumn" 1 103 F 52 179 T " (int _nColumn)" "Matrix::setNColumn" 1 110 F 53 67 T " (int _nColumn)" "Matrix::setNLine" 1 103 F 52 167 T " (int _nLine)" "Matrix::setNLine" 1 110 F 53 65 T " (int _nLine)" "Matrix::setSize" 1 103 F 52 185 T " (int _nLine,int _nColumn)" "Matrix::setSize" 1 110 F 53 68 T " (int _nLine,int _nColumn)" "Matrix::swapLines" 1 103 F 52 1133 T " (int i, int j)" "Matrix::swapLines" 1 110 F 53 94 T " (int i, int j)" "Matrix::transpose" 1 103 F 52 504 T " (Matrix temp)" "Matrix::transpose" 1 103 F 52 517 T " ( )" "Matrix::transpose" 1 110 F 53 115 T " ( )" "Matrix::transpose" 1 110 F 53 116 T " (Matrix trans)" "Matrix::transposeAndMultiply" 1 103 F 52 571 T " (Matrix R, Matrix Bplus)" "Matrix::transposeAndMultiply" 1 103 F 52 647 T " (Vector rv, Vector v)" "Matrix::transposeAndMultiply" 1 110 F 53 105 T " (Vector R, Vector a)" "Matrix::transposeAndMultiply" 1 110 F 53 107 T " (Matrix R, Matrix a)" "Matrix::transposeInPlace" 1 103 F 52 478 T " ( )" "Matrix::transposeInPlace" 1 110 F 53 114 T " ( )" "Matrix::updateSave" 1 103 F 52 329 T " (char *saveFileName)" "Matrix::updateSave" 1 110 F 53 63 T " (char *saveFileName)" "Matrix::zero" 1 103 F 52 531 T " ( )" "Matrix::zero" 1 110 F 53 100 T " ( )" "Matrix::~Matrix" 1 103 F 52 412 T " ( )" "Matrix::~Matrix" 1 110 F 53 74 T " ( )" "MatrixData" 1 107 F 53 46 F "MatrixDataTag" 1 106 F 53 40 F "MatrixTriangle" 1 100 F 55 34 F "MatrixTriangle" 1 103 F 54 31 T " (int _n)" "MatrixTriangle" 1 103 F 54 154 T " (const MatrixTriangle &A)" "MatrixTriangle" 1 110 F 55 51 T " (int _n=0)" "MatrixTriangle" 1 110 F 55 56 T " (const MatrixTriangle &A)" "MatrixTriangle.h:_MATRIXTRIANGLE_H" 1 101 T 55 28 F "MatrixTriangle::clone" 1 103 F 54 173 T " ( )" "MatrixTriangle::clone" 1 110 F 55 58 T " ( )" "MatrixTriangle::copyFrom" 1 103 F 54 181 T " (MatrixTriangle r)" "MatrixTriangle::copyFrom" 1 110 F 55 59 T " (MatrixTriangle r)" "MatrixTriangle::d" 1 111 F 55 46 F "MatrixTriangle::destroyCurrentBuffer" 1 103 F 54 143 T " ( )" "MatrixTriangle::destroyCurrentBuffer" 1 110 F 55 38 T " ( )" "MatrixTriangle::emptyMatrixTriangle" 1 111 F 55 74 F "MatrixTriangle::LINPACK" 1 103 F 54 119 T " (Vector &R)" "MatrixTriangle::LINPACK" 1 110 F 55 71 T " (Vector &u)" "MatrixTriangle::MatrixTriangle" 1 103 F 54 31 T " (int _n)" "MatrixTriangle::MatrixTriangle" 1 103 F 54 154 T " (const MatrixTriangle &A)" "MatrixTriangle::MatrixTriangle" 1 110 F 55 51 T " (int _n=0)" "MatrixTriangle::MatrixTriangle" 1 110 F 55 56 T " (const MatrixTriangle &A)" "MatrixTriangle::MatrixTriangleData" 1 107 F 55 45 F "MatrixTriangle::MatrixTriangleDataTag" 1 106 F 55 39 F "MatrixTriangle::MatrixTriangleDataTag::ext" 1 111 F 55 42 F "MatrixTriangle::MatrixTriangleDataTag::n" 1 111 F 55 41 F "MatrixTriangle::MatrixTriangleDataTag::p" 1 111 F 55 44 F "MatrixTriangle::MatrixTriangleDataTag::ref_count" 1 111 F 55 43 F "MatrixTriangle::nLine" 1 103 F 55 63 T " ( )" "MatrixTriangle::operator =" 1 103 F 54 161 T " ( const MatrixTriangle& A )" "MatrixTriangle::operator =" 1 110 F 55 57 T " ( const MatrixTriangle& A )" "MatrixTriangle::operator ==" 1 103 F 55 62 T " ( const MatrixTriangle& A )" "MatrixTriangle::operator []" 1 103 F 55 64 T " (int i)" "MatrixTriangle::operator double**" 1 103 F 55 65 T " ( )" "MatrixTriangle::setSize" 1 103 F 54 49 T " (int _n)" "MatrixTriangle::setSize" 1 110 F 55 52 T " (int _n)" "MatrixTriangle::solveInPlace" 1 103 F 54 73 T " (Vector b)" "MatrixTriangle::solveInPlace" 1 110 F 55 68 T " (Vector b)" "MatrixTriangle::solveTransposInPlace" 1 103 F 54 90 T " (Vector y)" "MatrixTriangle::solveTransposInPlace" 1 110 F 55 69 T " (Vector y)" "MatrixTriangle::~MatrixTriangle" 1 103 F 54 138 T " ( )" "MatrixTriangle::~MatrixTriangle" 1 110 F 55 55 T " ( )" "MatrixTriangleData" 1 107 F 55 45 F "MatrixTriangleDataTag" 1 106 F 55 39 F "max" 1 101 F 77 191 F "max" 1 101 F 79 37 F "maxDim" 1 111 F 57 40 F "maxDim" 1 111 F 58 82 F "maxDWORD" 1 101 F 68 38 F "maxIter" 1 111 F 87 39 F "maxNormLC" 1 111 F 60 103 F "maxNormNLC" 1 111 F 60 103 F "maybeAdd" 1 103 F 48 651 T " (Vector pointToAdd, unsigned k, double rho, double valueF)" "maybeAdd" 1 110 F 49 67 T " (Vector pointToAdd, unsigned k, double rho, double valueF)" "mc68010" 1 101 F 77 237 F "mc68020" 1 101 F 77 238 F "me" 1 111 F 87 62 F "me" 1 111 F 87 68 F "merge" 1 103 F 52 1181 T " (Matrix m,int eliminateDoubles)" "merge" 1 110 F 53 96 T " (Matrix m, int eliminateDoubles=1)" "min" 1 101 F 77 190 F "min" 1 101 F 79 34 F "mips" 1 101 F 77 239 F "mmax" 1 103 F 68 81 T " ( const double t1, const double t2 )" "mmax" 1 103 F 68 86 T " ( const unsigned t1, const unsigned t2 )" "mmax" 1 103 F 68 91 T " ( int t1, int t2 )" "mmax" 1 103 F 71 348 T " ( )" "mmax" 1 110 F 72 104 T " ( )" "mmin" 1 103 F 68 66 T " ( const double t1, const double t2 )" "mmin" 1 103 F 68 71 T " ( const unsigned t1, const unsigned t2 )" "mmin" 1 103 F 68 76 T " ( const int t1, const int t2 )" "mmin" 1 103 F 71 339 T " ( )" "mmin" 1 110 F 72 103 T " ( )" "mQ_QP" 1 109 F 65 78 F "mR_QP" 1 109 F 65 79 F "MultInd" 1 100 F 58 50 F "MultInd" 1 103 F 57 67 T " ( unsigned _dim, unsigned _deg)" "MultInd" 1 103 F 57 75 T " (unsigned d)" "MultInd" 1 110 F 58 58 T " (unsigned d=0)" "MultInd" 1 110 F 58 75 T " ( unsigned _dim, unsigned _deg )" "MultInd.cpp:__INSIDE_MULTIND_CPP__" 1 101 T 57 34 F "MultInd.cpp:__INSIDE_MULTIND_CPP__" 1 101 T 57 36 F "MultInd.cpp:cacheMultInd" 1 109 T 57 42 F "MultInd.h:_INCLUDE_MULTIND_H_" 1 101 T 58 31 F "MultInd::buffer" 1 111 F 57 41 F "MultInd::buffer" 1 111 F 58 82 F "MultInd::coeffDeg" 1 111 F 58 80 F "MultInd::coeffLex" 1 111 F 58 80 F "MultInd::deg" 1 111 F 58 53 F "MultInd::dim" 1 111 F 58 53 F "MultInd::fullInit" 1 103 F 57 111 T " ( )" "MultInd::fullInit" 1 110 F 58 76 T " ( )" "MultInd::index" 1 103 F 58 68 T " ( )" "MultInd::indexesOfCoefInLexOrder" 1 103 F 57 214 T " ( )" "MultInd::indexesOfCoefInLexOrder" 1 110 F 58 56 T " ( )" "MultInd::indexesOfCoefInLexOrderV" 1 111 F 58 79 F "MultInd::indexV" 1 111 F 58 80 F "MultInd::lastChanges" 1 103 F 57 204 T " ( )" "MultInd::lastChanges" 1 110 F 58 55 T " ( )" "MultInd::lastChangesV" 1 111 F 58 79 F "MultInd::len" 1 103 F 57 96 T " ( )" "MultInd::len" 1 110 F 58 69 T " ( )" "MultInd::maxDim" 1 111 F 57 40 F "MultInd::maxDim" 1 111 F 58 82 F "MultInd::MultInd" 1 103 F 57 67 T " ( unsigned _dim, unsigned _deg)" "MultInd::MultInd" 1 103 F 57 75 T " (unsigned d)" "MultInd::MultInd" 1 110 F 58 58 T " (unsigned d=0)" "MultInd::MultInd" 1 110 F 58 75 T " ( unsigned _dim, unsigned _deg )" "MultInd::next" 1 111 F 58 84 F "MultInd::operator ++" 1 103 F 57 170 T " ( )" "MultInd::operator ++" 1 103 F 58 63 T " ( int )" "MultInd::operator ++" 1 110 F 58 62 T " ( )" "MultInd::operator =" 1 103 F 57 44 T " ( const MultInd &p )" "MultInd::operator =" 1 110 F 58 66 T " ( const MultInd &P )" "MultInd::operator ==" 1 103 F 57 103 T " ( const MultInd& m )" "MultInd::operator ==" 1 110 F 58 67 T " ( const MultInd& m )" "MultInd::operator unsigned*" 1 103 F 58 65 T " ( )" "MultInd::print" 1 103 F 57 86 T " ( )" "MultInd::print" 1 110 F 58 72 T " ( )" "MultInd::resetCounter" 1 103 F 57 164 T " ( )" "MultInd::resetCounter" 1 110 F 58 61 T " ( )" "MultInd::standardInit" 1 103 F 57 54 T " ( )" "MultInd::standardInit" 1 110 F 58 77 T " ( )" "MultInd::~MultInd" 1 103 F 57 81 T " ( )" "MultInd::~MultInd" 1 110 F 58 59 T " ( )" "MultIndCache" 1 100 F 58 37 F "MultIndCache" 1 103 F 57 224 T " ( )" "MultIndCache" 1 110 F 58 39 T " ( )" "MultIndCache::get" 1 103 F 57 242 T " (unsigned _dim, unsigned _deg )" "MultIndCache::get" 1 110 F 58 41 T " (unsigned _dim, unsigned _deg)" "MultIndCache::head" 1 111 F 58 43 F "MultIndCache::MultIndCache" 1 103 F 57 224 T " ( )" "MultIndCache::MultIndCache" 1 110 F 58 39 T " ( )" "MultIndCache::~MultIndCache" 1 103 F 57 230 T " ( )" "MultIndCache::~MultIndCache" 1 110 F 58 40 T " ( )" "multiply" 1 103 F 52 551 T " (Matrix R, Matrix Bplus)" "multiply" 1 103 F 52 611 T " (Matrix Bplus)" "multiply" 1 103 F 52 628 T " (Vector rv, Vector v)" "multiply" 1 103 F 52 666 T " (Vector v)" "multiply" 1 103 F 71 280 T " (double a)" "multiply" 1 103 F 71 287 T " (Vector R, double a)" "multiply" 1 110 F 53 102 T " (Matrix B)" "multiply" 1 110 F 53 104 T " (Vector R, Vector v)" "multiply" 1 110 F 53 106 T " (Matrix R, Matrix a)" "multiply" 1 110 F 53 110 T " (Vector v)" "multiply" 1 110 F 72 95 T " (double a)" "multiply" 1 110 F 72 96 T " (Vector R, double a)" "multiplyByDiagonalMatrix" 1 103 F 52 536 T " (Vector v)" "multiplyByDiagonalMatrix" 1 110 F 53 109 T " (Vector v)" "multiplyByTranspose" 1 103 F 52 591 T " (Matrix R, Matrix Bplus)" "multiplyByTranspose" 1 110 F 53 108 T " (Matrix R, Matrix a)" "multiplyInPlace" 1 103 F 52 618 T " (double dd)" "multiplyInPlace" 1 110 F 53 103 T " (double d)" "Multitype" 1 107 F 77 169 F "Multitype" 1 108 F 77 158 F "Multitype::c" 1 111 F 77 165 F "Multitype::d" 1 111 F 77 164 F "Multitype::g" 1 111 F 77 159 F "Multitype::h" 1 111 F 77 160 F "Multitype::i" 1 111 F 77 161 F "Multitype::r" 1 111 F 77 163 F "Multitype::z" 1 111 F 77 166 F "myErrno" 1 111 F 79 89 F "mysrand" 1 109 F 67 87 F "n" 1 111 F 51 60 F "n" 1 111 F 55 41 F "n" 1 111 F 64 43 F "n" 1 111 F 72 44 F "n" 1 111 F 74 38 F "n" 1 111 F 76 36 F "n" 1 111 F 79 85 F "n" 1 111 F 83 93 F "n" 1 111 F 83 103 F "name" 1 111 F 60 41 F "name" 1 111 F 77 174 F "name" 1 111 F 77 182 F "name" 1 111 F 87 69 F "Namelist" 1 106 F 77 181 F "Namelist" 1 107 F 77 186 F "Namelist::name" 1 111 F 77 182 F "Namelist::nvars" 1 111 F 77 184 F "Namelist::vars" 1 111 F 77 183 F "names" 1 111 F 87 77 F "nAttribute" 1 103 F 88 1549 T " ( )" "nAttribute" 1 110 F 89 157 T " ( )" "nAttribute" 1 111 F 89 117 F "nChild" 1 111 F 89 114 F "nChildNode" 1 103 F 88 1470 T " (LPCTSTR name)" "nChildNode" 1 103 F 88 1548 T " ( )" "nChildNode" 1 110 F 89 149 T " (LPCTSTR name)" "nChildNode" 1 110 F 89 150 T " ( )" "nClear" 1 103 F 88 1550 T " ( )" "nClear" 1 110 F 89 159 T " ( )" "nClear" 1 111 F 89 116 F "nColumn" 1 103 F 53 83 T " ( )" "nColumn" 1 111 F 53 43 F "nColumn" 1 111 F 89 92 F "nel1" 1 111 F 79 91 F "nElement" 1 103 F 88 1115 T " (XMLNodeData *pEntry)" "nElement" 1 103 F 88 1557 T " ( )" "nElement" 1 110 F 89 164 T " ( )" "nElement" 1 110 F 89 192 T " (XMLNodeData *pEntry)" "nelnum" 1 111 F 79 85 F "nelvars" 1 111 F 79 85 F "nepvlu" 1 111 F 79 85 F "neq" 1 111 F 87 80 F "NewtonBasis" 1 111 F 49 43 F "NewtonCoefficient" 1 110 F 49 51 T " (double *)" "NewtonPoints" 1 111 F 49 47 F "next" 1 111 F 58 84 F "NextToken" 1 107 F 88 92 F "nfe" 1 111 F 60 106 F "nfe2" 1 111 F 60 106 F "nFirst" 1 111 F 88 84 F "ng" 1 111 F 79 85 F "ng1" 1 111 F 79 91 F "ngel" 1 111 F 79 85 F "ngpvlu" 1 111 F 79 85 F "NicePrint" 1 111 F 63 36 F "NicePrint" 1 111 F 64 116 F "nIndex" 1 111 F 88 78 F "nIndexInOF" 1 111 F 87 80 F "nLine" 1 103 F 53 82 T " ( )" "nLine" 1 103 F 55 63 T " ( )" "nLine" 1 111 F 53 43 F "nLine" 1 111 F 89 92 F "nlinequalities" 1 111 F 87 72 F "nNLConstraints" 1 111 F 60 54 F "nnza" 1 111 F 79 85 F "noiseAbsolute" 1 111 F 60 46 F "noiseRelative" 1 111 F 60 46 F "NoisyQuadratic" 1 100 F 83 86 F "NoisyQuadratic" 1 103 F 82 200 T " (int _t, int _n)" "NoisyQuadratic" 1 110 F 83 89 T " (int _t, int _n=0)" "NoisyQuadratic::eval" 1 103 F 82 190 T " (Vector X, int *nerror)" "NoisyQuadratic::eval" 1 110 F 83 91 T " (Vector v, int *nerror=NULL)" "NoisyQuadratic::n" 1 111 F 83 93 F "NoisyQuadratic::NoisyQuadratic" 1 103 F 82 200 T " (int _t, int _n)" "NoisyQuadratic::NoisyQuadratic" 1 110 F 83 89 T " (int _t, int _n=0)" "NoisyQuadratic::~NoisyQuadratic" 1 103 F 83 90 T " ( )" "NoisyRosenbrock" 1 100 F 83 78 F "NoisyRosenbrock" 1 103 F 82 171 T " (int _t)" "NoisyRosenbrock" 1 110 F 83 81 T " (int _t)" "NoisyRosenbrock::eval" 1 103 F 82 163 T " (Vector X, int *nerror)" "NoisyRosenbrock::eval" 1 110 F 83 83 T " (Vector v, int *nerror=NULL)" "NoisyRosenbrock::NoisyRosenbrock" 1 103 F 82 171 T " (int _t)" "NoisyRosenbrock::NoisyRosenbrock" 1 110 F 83 81 T " (int _t)" "NoisyRosenbrock::~NoisyRosenbrock" 1 103 F 83 82 T " ( )" "Normalized" 1 111 F 63 38 F "Normalized" 1 111 F 64 118 F "np" 1 111 F 74 35 F "nPtsUsed" 1 111 F 49 40 F "nSubAggrFunction" 1 111 F 87 80 F "nText" 1 103 F 88 1547 T " ( )" "nText" 1 110 F 89 143 T " ( )" "nText" 1 111 F 89 115 F "nToOptim" 1 111 F 87 39 F "nUpdateOfM" 1 111 F 49 40 F "nvars" 1 111 F 77 184 F "oacc" 1 111 F 77 107 F "objectiveConst" 1 111 F 60 46 F "ObjectiveFunction" 1 100 F 60 36 F "ObjectiveFunction" 1 103 F 60 77 T " ( )" "ObjectiveFunction.h:INF" 1 101 T 60 34 F "ObjectiveFunction.h:OBJECTIVEFUNCTION_INCLUDE" 1 101 T 60 28 F "ObjectiveFunction::A" 1 111 F 60 65 F "ObjectiveFunction::addClosestFeasiblePointInData" 1 103 F 59 221 T " (Vector vX)" "ObjectiveFunction::addClosestFeasiblePointInData" 1 110 F 60 104 T " (Vector vX)" "ObjectiveFunction::b" 1 111 F 60 66 F "ObjectiveFunction::bl" 1 111 F 60 62 F "ObjectiveFunction::bu" 1 111 F 60 62 F "ObjectiveFunction::data" 1 111 F 60 53 F "ObjectiveFunction::dfold" 1 111 F 60 103 F "ObjectiveFunction::dfref" 1 111 F 60 103 F "ObjectiveFunction::dim" 1 103 F 59 208 T " ( )" "ObjectiveFunction::dim" 1 110 F 60 84 T " ( )" "ObjectiveFunction::endInit" 1 103 F 59 88 T " ( )" "ObjectiveFunction::endInit" 1 110 F 60 95 T " ( )" "ObjectiveFunction::eval" 1 110 F 60 83 T " (Vector v, int *nerror)" "ObjectiveFunction::evalGradNLConstraint" 1 103 F 59 328 T " (int j, Vector v, int *nerror)" "ObjectiveFunction::evalGradNLConstraint" 1 110 F 60 70 T " (int j, Vector v, int *nerror)" "ObjectiveFunction::evalGradNLConstraint" 1 110 F 60 71 T " (int j, Vector v, Vector result, int *nerror)" "ObjectiveFunction::evalNLConstraint" 1 110 F 60 69 T " (int j, Vector v, int *nerror)" "ObjectiveFunction::finalize" 1 103 F 60 89 T " (Vector vG, Matrix mH, Vector vLambda)" "ObjectiveFunction::getNFE" 1 103 F 60 98 T " ( )" "ObjectiveFunction::getNFE2" 1 103 F 60 99 T " ( )" "ObjectiveFunction::initBounds" 1 103 F 59 315 T " ( )" "ObjectiveFunction::initBounds" 1 110 F 60 94 T " ( )" "ObjectiveFunction::initData" 1 103 F 59 259 T " ( )" "ObjectiveFunction::initData" 1 110 F 60 85 T " ( )" "ObjectiveFunction::initTolLC" 1 103 F 59 106 T " (Vector vX)" "ObjectiveFunction::initTolLC" 1 110 F 60 96 T " (Vector vX)" "ObjectiveFunction::initTolNLC" 1 103 F 59 118 T " (Vector c, double delta)" "ObjectiveFunction::initTolNLC" 1 110 F 60 97 T " (Vector c, double delta)" "ObjectiveFunction::isConstrained" 1 111 F 60 54 F "ObjectiveFunction::isFeasible" 1 103 F 59 57 T " (Vector vx, double *d)" "ObjectiveFunction::isFeasible" 1 110 F 60 93 T " (Vector vx, double *d=NULL)" "ObjectiveFunction::maxNormLC" 1 111 F 60 103 F "ObjectiveFunction::maxNormNLC" 1 111 F 60 103 F "ObjectiveFunction::name" 1 111 F 60 41 F "ObjectiveFunction::nfe" 1 111 F 60 106 F "ObjectiveFunction::nfe2" 1 111 F 60 106 F "ObjectiveFunction::nNLConstraints" 1 111 F 60 54 F "ObjectiveFunction::noiseAbsolute" 1 111 F 60 46 F "ObjectiveFunction::noiseRelative" 1 111 F 60 46 F "ObjectiveFunction::objectiveConst" 1 111 F 60 46 F "ObjectiveFunction::ObjectiveFunction" 1 103 F 60 77 T " ( )" "ObjectiveFunction::printStats" 1 103 F 59 166 T " (char cc)" "ObjectiveFunction::printStats" 1 110 F 60 87 T " (char cc=1)" "ObjectiveFunction::saveFileName" 1 111 F 60 102 F "ObjectiveFunction::saveStats" 1 103 F 59 37 T " (char *resultsFile, Vector vG, Matrix mH, Vector vLambda)" "ObjectiveFunction::saveStats" 1 110 F 60 88 T " (char *filename, Vector vG, Matrix mH, Vector vLambda)" "ObjectiveFunction::saveValue" 1 103 F 59 198 T " (Vector tmp,double valueOF, int nerror)" "ObjectiveFunction::saveValue" 1 110 F 60 86 T " (Vector tmp,double valueOF, int nerror)" "ObjectiveFunction::setName" 1 103 F 59 154 T " (char *s)" "ObjectiveFunction::setName" 1 110 F 60 90 T " (char *s)" "ObjectiveFunction::setSaveFile" 1 103 F 59 142 T " (char *s)" "ObjectiveFunction::setSaveFile" 1 110 F 60 91 T " (char *b=NULL)" "ObjectiveFunction::startPointIsGiven" 1 111 F 60 41 F "ObjectiveFunction::t" 1 111 F 60 54 F "ObjectiveFunction::tolLC" 1 111 F 60 75 F "ObjectiveFunction::tolNLC" 1 111 F 60 74 F "ObjectiveFunction::tolRelFeasibilityForLC" 1 111 F 60 75 F "ObjectiveFunction::tolRelFeasibilityForNLC" 1 111 F 60 74 F "ObjectiveFunction::updateCounter" 1 103 F 59 128 T " (double df, Vector vX, int nerror)" "ObjectiveFunction::updateCounter" 1 110 F 60 92 T " (double df, Vector vX, int nerror=0)" "ObjectiveFunction::valueBest" 1 111 F 60 46 F "ObjectiveFunction::valueOptimal" 1 111 F 60 46 F "ObjectiveFunction::xBest" 1 111 F 60 42 F "ObjectiveFunction::xOptimal" 1 111 F 60 42 F "ObjectiveFunction::xStart" 1 111 F 60 42 F "ObjectiveFunction::~ObjectiveFunction" 1 103 F 60 82 T " ( )" "OBJECTIVEFUNCTION_INCLUDE" 1 101 F 60 28 F "objFunction" 1 111 F 87 75 F "oblnk" 1 111 F 77 110 F "oerr" 1 111 F 77 102 F "of" 1 109 F 85 53 F "of" 1 111 F 60 137 F "ofc" 1 109 F 85 54 F "ofm" 1 111 F 77 108 F "ofnm" 1 111 F 77 104 F "ofnmlen" 1 111 F 77 105 F "olist" 1 107 F 77 111 F "oneByOneInvert" 1 103 F 71 382 T " ( )" "oneByOneInvert" 1 110 F 72 102 T " ( )" "oneByOneMutiply" 1 103 F 71 375 T " (Vector rescaling)" "oneByOneMutiply" 1 110 F 72 101 T " (Vector r)" "operator ()" 1 103 F 63 393 T " ( Vector Point )" "operator ()" 1 110 F 64 97 T " ( )" "operator *" 1 103 F 63 143 T " ( const double t )" "operator *" 1 103 F 64 131 T " ( const double& dou, Polynomial& p )" "operator *" 1 110 F 64 76 T " ( const double )" "operator *=" 1 103 F 63 280 T " ( const double t )" "operator *=" 1 110 F 64 90 T " ( const double )" "operator +" 1 103 F 63 169 T " ( Polynomial q )" "operator +" 1 103 F 64 83 T " ( void )" "operator +" 1 103 F 71 389 T " ( Vector v)" "operator +" 1 110 F 64 78 T " ( )" "operator +" 1 110 F 72 107 T " ( Vector v)" "operator ++" 1 103 F 57 170 T " ( )" "operator ++" 1 103 F 58 63 T " ( int )" "operator ++" 1 110 F 58 62 T " ( )" "operator +=" 1 103 F 63 223 T " ( Polynomial p )" "operator +=" 1 103 F 71 407 T " ( Vector v)" "operator +=" 1 110 F 64 88 T " ( )" "operator +=" 1 110 F 72 109 T " ( Vector v)" "operator -" 1 103 F 63 190 T " ( Polynomial q )" "operator -" 1 103 F 63 209 T " ( void )" "operator -" 1 103 F 71 365 T " ( Vector v)" "operator -" 1 110 F 64 79 T " ( )" "operator -" 1 110 F 64 82 T " ( void )" "operator -" 1 110 F 72 106 T " ( Vector v)" "operator -=" 1 103 F 63 252 T " ( Polynomial p )" "operator -=" 1 103 F 71 399 T " ( Vector v)" "operator -=" 1 110 F 64 89 T " ( )" "operator -=" 1 110 F 72 108 T " ( Vector v)" "operator /" 1 103 F 63 154 T " ( const double t )" "operator /" 1 110 F 64 77 T " ( const double )" "operator /=" 1 103 F 63 290 T " ( const double t )" "operator /=" 1 110 F 64 91 T " ( const double )" "operator =" 1 103 F 48 840 T " ( const InterPolynomial& A )" "operator =" 1 103 F 52 429 T " ( const Matrix& A )" "operator =" 1 103 F 54 161 T " ( const MatrixTriangle& A )" "operator =" 1 103 F 57 44 T " ( const MultInd &p )" "operator =" 1 103 F 63 98 T " ( const Polynomial& A )" "operator =" 1 103 F 71 194 T " ( const Vector& A )" "operator =" 1 103 F 73 116 T " ( const VectorChar& P )" "operator =" 1 103 F 75 98 T " ( const VectorInt& A )" "operator =" 1 103 F 88 1451 T " ( const XMLNode& A )" "operator =" 1 110 F 49 83 T " ( const InterPolynomial& A )" "operator =" 1 110 F 53 76 T " ( const Matrix& A )" "operator =" 1 110 F 55 57 T " ( const MatrixTriangle& A )" "operator =" 1 110 F 58 66 T " ( const MultInd &P )" "operator =" 1 110 F 64 69 T " ( const Polynomial& A )" "operator =" 1 110 F 72 73 T " ( const Vector& P )" "operator =" 1 110 F 74 59 T " ( const VectorChar& P )" "operator =" 1 110 F 76 50 T " ( const VectorInt& P )" "operator =" 1 110 F 89 171 T " ( const XMLNode& A )" "operator ==" 1 103 F 53 81 T " ( const Matrix& A )" "operator ==" 1 103 F 55 62 T " ( const MatrixTriangle& A )" "operator ==" 1 103 F 57 103 T " ( const MultInd& m )" "operator ==" 1 103 F 64 105 T " ( const Polynomial q)" "operator ==" 1 103 F 72 80 T " ( const Vector Q)" "operator ==" 1 103 F 73 100 T " ( const VectorChar& Q )" "operator ==" 1 103 F 76 64 T " ( const VectorInt& P)" "operator ==" 1 110 F 58 67 T " ( const MultInd& m )" "operator ==" 1 110 F 74 58 T " ( const VectorChar& )" "operator []" 1 103 F 53 85 T " (int i)" "operator []" 1 103 F 55 64 T " (int i)" "operator char*" 1 103 F 74 60 T " ( )" "operator double*" 1 103 F 64 64 T " ( )" "operator double*" 1 103 F 72 82 T " ( )" "operator double**" 1 103 F 53 86 T " ( )" "operator double**" 1 103 F 55 65 T " ( )" "operator int*" 1 103 F 76 65 T " ( )" "operator unsigned*" 1 103 F 58 65 T " ( )" "optionalN" 1 111 F 51 60 F "OPTIONS" 18 1700 F 90 10 F "optValue" 1 111 F 51 36 F "orl" 1 111 F 77 109 F "osta" 1 111 F 77 106 F "ounit" 1 111 F 77 103 F "outputObjF" 1 111 F 87 75 F "p" 1 111 F 53 45 F "p" 1 111 F 55 44 F "p" 1 111 F 72 46 F "p" 1 111 F 74 37 F "p" 1 111 F 76 38 F "parallel.h:_PARALLEL_H_" 1 101 T 62 28 F "parallelFinish" 1 103 F 61 41 T " ( )" "parallelFinish" 1 110 F 62 32 T " ( )" "parallelImprove" 1 103 F 61 36 T " (InterPolynomial *p, int *_k, double _rho, double *_valueFk, Vector _Base)" "parallelImprove" 1 110 F 62 30 T " (InterPolynomial *p, int *_k, double _rho, double *_valueFk, Vector _Base)" "parallelInit" 1 103 F 61 40 T " (int _nnode, int _dim, ObjectiveFunction *_of)" "parallelInit" 1 110 F 62 31 T " (int _nnode, int _dim, ObjectiveFunction *_of)" "ParseClearTag" 1 103 F 88 547 T " (void *px, void *pa)" "ParseClearTag" 1 110 F 89 188 T " (void *pXML, void *pClear)" "parseFile" 1 103 F 88 1058 T " (char *filename, XMLResults *pResults)" "parseFile" 1 110 F 89 136 T " (LPTSTR lpszXML, XMLResults *pResults=NULL)" "parseString" 1 103 F 88 1014 T " (LPTSTR lpszXML, XMLResults *pResults)" "parseString" 1 110 F 89 135 T " (LPTSTR lpszXML, XMLResults *pResults=NULL)" "ParseXMLElement" 1 103 F 88 578 T " (void *pa)" "ParseXMLElement" 1 110 F 89 189 T " (void *pXML)" "pAttribute" 1 111 F 89 123 F "pChild" 1 111 F 89 120 F "pClear" 1 111 F 89 122 F "pClr" 1 111 F 88 90 F "pClrTags" 1 111 F 88 85 F "pdp11" 1 101 F 77 240 F "permutIn" 1 103 F 71 500 T " (Vector vR, VectorInt viP)" "permutIn" 1 110 F 72 114 T " (Vector vR, VectorInt viP)" "permutOut" 1 103 F 71 515 T " (Vector vR, VectorInt viP)" "permutOut" 1 110 F 72 115 T " (Vector vR, VectorInt viP)" "PI" 1 101 F 68 41 F "Poly.h:_INCLUDE_POLY_H_" 1 101 T 64 28 F "Polynomial" 1 100 F 64 37 F "Polynomial" 1 103 F 63 66 T " ( unsigned Dim, unsigned Deg, double *data )" "Polynomial" 1 103 F 63 71 T " ( unsigned Dim, double val )" "Polynomial" 1 103 F 63 76 T " ( MultInd& I )" "Polynomial" 1 103 F 63 110 T " (const Polynomial &A)" "Polynomial" 1 103 F 63 590 T " (char *name)" "Polynomial" 1 103 F 64 53 T " ( )" "Polynomial" 1 110 F 64 54 T " ( unsigned Dim, unsigned deg=0, double *data=0 )" "Polynomial" 1 110 F 64 55 T " ( unsigned Dim, double val )" "Polynomial" 1 110 F 64 56 T " ( MultInd& )" "Polynomial" 1 110 F 64 57 T " (char *name)" "Polynomial" 1 110 F 64 68 T " (const Polynomial &A)" "Polynomial::clone" 1 103 F 63 117 T " ( )" "Polynomial::clone" 1 110 F 64 70 T " ( )" "Polynomial::copyFrom" 1 103 F 63 125 T " (Polynomial m)" "Polynomial::copyFrom" 1 110 F 64 71 T " (Polynomial a)" "Polynomial::d" 1 111 F 64 48 F "Polynomial::deg" 1 103 F 64 62 T " ( )" "Polynomial::derivate" 1 103 F 63 471 T " (int i)" "Polynomial::derivate" 1 110 F 64 98 T " (int i)" "Polynomial::destroyCurrentBuffer" 1 103 F 63 87 T " ( )" "Polynomial::destroyCurrentBuffer" 1 110 F 64 50 T " ( )" "Polynomial::dim" 1 103 F 64 61 T " ( )" "Polynomial::emptyPolynomial" 1 111 F 63 41 F "Polynomial::emptyPolynomial" 1 111 F 64 125 F "Polynomial::equals" 1 103 F 63 305 T " ( Polynomial q )" "Polynomial::equals" 1 110 F 64 106 T " ( Polynomial q )" "Polynomial::flags" 1 111 F 63 39 F "Polynomial::flags" 1 111 F 64 120 F "Polynomial::gradient" 1 103 F 63 504 T " (Vector P, Vector G)" "Polynomial::gradient" 1 110 F 64 99 T " (Vector P, Vector G)" "Polynomial::gradientHessian" 1 103 F 63 517 T " (Vector P, Vector G, Matrix H)" "Polynomial::gradientHessian" 1 110 F 64 100 T " (Vector P, Vector G, Matrix H)" "Polynomial::init" 1 103 F 63 43 T " (int _dim, int _deg, double *data)" "Polynomial::init" 1 110 F 64 49 T " (int _dim, int _deg, double *data=NULL)" "Polynomial::NicePrint" 1 111 F 63 36 F "Polynomial::NicePrint" 1 111 F 64 116 F "Polynomial::Normalized" 1 111 F 63 38 F "Polynomial::Normalized" 1 111 F 64 118 F "Polynomial::operator ()" 1 103 F 63 393 T " ( Vector Point )" "Polynomial::operator ()" 1 110 F 64 97 T " ( )" "Polynomial::operator *" 1 103 F 63 143 T " ( const double t )" "Polynomial::operator *" 1 110 F 64 76 T " ( const double )" "Polynomial::operator *=" 1 103 F 63 280 T " ( const double t )" "Polynomial::operator *=" 1 110 F 64 90 T " ( const double )" "Polynomial::operator +" 1 103 F 63 169 T " ( Polynomial q )" "Polynomial::operator +" 1 103 F 64 83 T " ( void )" "Polynomial::operator +" 1 110 F 64 78 T " ( )" "Polynomial::operator +=" 1 103 F 63 223 T " ( Polynomial p )" "Polynomial::operator +=" 1 110 F 64 88 T " ( )" "Polynomial::operator -" 1 103 F 63 190 T " ( Polynomial q )" "Polynomial::operator -" 1 103 F 63 209 T " ( void )" "Polynomial::operator -" 1 110 F 64 79 T " ( )" "Polynomial::operator -" 1 110 F 64 82 T " ( void )" "Polynomial::operator -=" 1 103 F 63 252 T " ( Polynomial p )" "Polynomial::operator -=" 1 110 F 64 89 T " ( )" "Polynomial::operator /" 1 103 F 63 154 T " ( const double t )" "Polynomial::operator /" 1 110 F 64 77 T " ( const double )" "Polynomial::operator /=" 1 103 F 63 290 T " ( const double t )" "Polynomial::operator /=" 1 110 F 64 91 T " ( const double )" "Polynomial::operator =" 1 103 F 63 98 T " ( const Polynomial& A )" "Polynomial::operator =" 1 110 F 64 69 T " ( const Polynomial& A )" "Polynomial::operator ==" 1 103 F 64 105 T " ( const Polynomial q)" "Polynomial::operator double*" 1 103 F 64 64 T " ( )" "Polynomial::Polynomial" 1 103 F 63 66 T " ( unsigned Dim, unsigned Deg, double *data )" "Polynomial::Polynomial" 1 103 F 63 71 T " ( unsigned Dim, double val )" "Polynomial::Polynomial" 1 103 F 63 76 T " ( MultInd& I )" "Polynomial::Polynomial" 1 103 F 63 110 T " (const Polynomial &A)" "Polynomial::Polynomial" 1 103 F 63 590 T " (char *name)" "Polynomial::Polynomial" 1 103 F 64 53 T " ( )" "Polynomial::Polynomial" 1 110 F 64 54 T " ( unsigned Dim, unsigned deg=0, double *data=0 )" "Polynomial::Polynomial" 1 110 F 64 55 T " ( unsigned Dim, double val )" "Polynomial::Polynomial" 1 110 F 64 56 T " ( MultInd& )" "Polynomial::Polynomial" 1 110 F 64 57 T " (char *name)" "Polynomial::Polynomial" 1 110 F 64 68 T " (const Polynomial &A)" "Polynomial::PolynomialData" 1 107 F 64 47 F "Polynomial::PolynomialDataTag" 1 106 F 64 40 F "Polynomial::PolynomialDataTag::coeff" 1 111 F 64 42 F "Polynomial::PolynomialDataTag::deg" 1 111 F 64 45 F "Polynomial::PolynomialDataTag::dim" 1 111 F 64 44 F "Polynomial::PolynomialDataTag::n" 1 111 F 64 43 F "Polynomial::PolynomialDataTag::ref_count" 1 111 F 64 46 F "Polynomial::print" 1 103 F 63 320 T " ( )" "Polynomial::print" 1 110 F 64 110 T " ( )" "Polynomial::queryFlag" 1 103 F 64 123 T " ( unsigned int val )" "Polynomial::save" 1 103 F 63 581 T " (char *name)" "Polynomial::save" 1 110 F 64 111 T " (char *name)" "Polynomial::setFlag" 1 103 F 64 121 T " ( unsigned int val )" "Polynomial::shiftedEval" 1 103 F 63 380 T " ( Vector Point, double minusVal)" "Polynomial::shiftedEval" 1 110 F 64 96 T " ( Vector Point, double minusVal)" "Polynomial::sz" 1 103 F 64 63 T " ( )" "Polynomial::translate" 1 103 F 63 565 T " (Vector translation)" "Polynomial::translate" 1 110 F 64 101 T " (Vector translation)" "Polynomial::unsetFlag" 1 103 F 64 122 T " ( unsigned int val )" "Polynomial::Warning" 1 111 F 63 37 F "Polynomial::Warning" 1 111 F 64 117 F "Polynomial::~Polynomial" 1 103 F 63 82 T " ( )" "Polynomial::~Polynomial" 1 110 F 64 67 T " ( )" "PolynomialData" 1 107 F 64 47 F "PolynomialDataTag" 1 106 F 64 40 F "pOrder" 1 111 F 89 124 F "pow_dd" 1 103 F 79 109 T " (doublereal *ap, doublereal *bp)" "pParent" 1 111 F 89 119 F "prepareExtend" 1 103 F 71 98 T " (int new_extention)" "prepareExtend" 1 103 F 73 63 T " (int new_extention)" "prepareExtend" 1 103 F 75 65 T " (int new_extention)" "prepareExtend" 1 110 F 72 40 T " (int new_extention)" "prepareExtend" 1 110 F 74 54 T " (int new_extention)" "prepareExtend" 1 110 F 76 60 T " (int new_extention)" "prev" 1 111 F 51 37 F "print" 1 103 F 52 396 T " ( )" "print" 1 103 F 57 86 T " ( )" "print" 1 103 F 63 320 T " ( )" "print" 1 103 F 71 160 T " ( )" "print" 1 103 F 73 135 T " ( )" "print" 1 103 F 75 166 T " ( )" "print" 1 110 F 53 70 T " ( )" "print" 1 110 F 58 72 T " ( )" "print" 1 110 F 64 110 T " ( )" "print" 1 110 F 72 63 T " ( )" "print" 1 110 F 74 51 T " ( )" "print" 1 110 F 76 57 T " ( )" "printStats" 1 103 F 59 166 T " (char cc)" "printStats" 1 110 F 60 87 T " (char cc=1)" "projectionIntoFeasibleSpace" 1 103 F 47 74 T " (Vector vFrom, Vector vBase,ObjectiveFunction *of)" "projectionIntoFeasibleSpace" 1 103 F 59 216 T " (Vector vFrom, Vector vBase, ObjectiveFunction *of)" "projectionIntoFeasibleSpace" 1 110 F 59 218 T " (Vector vFrom, Vector vBase, ObjectiveFunction *of)" "projectionIntoFeasibleSpace" 1 110 F 69 47 T " (Vector vFrom, Vector vBase, ObjectiveFunction *uof)" "protect" 1 110 F 85 64 T " (char*)" "pStr" 1 111 F 88 91 F "pText" 1 111 F 89 121 F "qbit_clear" 1 101 F 77 44 F "qbit_set" 1 101 F 77 45 F "ql0001_" 1 110 F 65 40 T " (int *m,int *me,int *mmax,int *n,int *nmax,int *mnn, double *c,double *d,double *a,double *b,double *xl, double *xu,double *x,double *u,int *iout,int *ifail, int *iprint,double *war,int *lwar,int *iwar,int *liwar, double *eps1)" "QPOptim" 1 103 F 69 183 T " ( double rhoStart, double rhoEnd, int niter, ObjectiveFunction *of, int nnode, char isConstrained)" "QPReconstructLambda" 1 103 F 65 84 T " (Vector vLambda, Vector vLambdaScale)" "QPSolver.cpp:bQRFailed_QP" 1 109 T 65 82 F "QPSolver.cpp:mQ_QP" 1 109 T 65 78 F "QPSolver.cpp:mR_QP" 1 109 T 65 79 F "QPSolver.cpp:vi_QP" 1 109 T 65 80 F "QPSolver.cpp:viPermut_QP" 1 109 T 65 80 F "QPSolver.cpp:vLastLambda_QP" 1 109 T 65 81 F "QR" 1 103 F 52 798 T " (Matrix Q, MatrixTriangle Rt, VectorInt vPermutation)" "QR" 1 110 F 53 123 T " (Matrix Q=Matrix::emptyMatrix, MatrixTriangle R=MatrixTriangle::emptyMatrixTriangle, VectorInt permutation=VectorInt::emptyVectorInt)" "queryFlag" 1 103 F 64 123 T " ( unsigned int val )" "quickHack" 1 109 F 46 46 F "quickHack" 1 109 F 46 48 F "quickHackBurgmannFunction" 1 103 F 85 55 T " (InterPolynomial poly, int k)" "r" 1 111 F 77 18 F "r" 1 111 F 77 19 F "r" 1 111 F 77 35 F "r" 1 111 F 77 36 F "r" 1 111 F 77 163 F "R_fp" 1 107 F 77 205 F "R_fp" 1 107 F 77 217 F "rand1" 1 103 F 67 88 T " ( )" "rand1" 1 110 F 68 107 T " ( )" "RandomOF" 1 100 F 83 115 F "RandomOF" 1 103 F 82 40 T " (int _t,int n)" "RandomOF" 1 103 F 82 83 T " (int _t,char *filename)" "RandomOF" 1 110 F 83 118 T " (int _t,int n)" "RandomOF" 1 110 F 83 119 T " (int _t,char *)" "RandomOF::A" 1 111 F 83 126 F "RandomOF::alloc" 1 103 F 82 30 T " (int n)" "RandomOF::alloc" 1 110 F 83 128 T " (int n)" "RandomOF::C" 1 111 F 83 127 F "RandomOF::eval" 1 103 F 82 101 T " (Vector X, int *nerror)" "RandomOF::eval" 1 110 F 83 121 T " (Vector v, int *nerror=NULL)" "RandomOF::ff" 1 103 F 82 124 T " (Vector X)" "RandomOF::ff" 1 110 F 83 122 T " (Vector v)" "RandomOF::RandomOF" 1 103 F 82 40 T " (int _t,int n)" "RandomOF::RandomOF" 1 103 F 82 83 T " (int _t,char *filename)" "RandomOF::RandomOF" 1 110 F 83 118 T " (int _t,int n)" "RandomOF::RandomOF" 1 110 F 83 119 T " (int _t,char *)" "RandomOF::S" 1 111 F 83 127 F "RandomOF::save" 1 103 F 82 69 T " (char *filename)" "RandomOF::save" 1 110 F 83 123 T " (char *)" "RandomOF::~RandomOF" 1 103 F 83 120 T " ( )" "rd_Char" 1 103 F 78 317 T " (char *p, int len)" "rd_Char" 1 110 F 79 99 T " (char *p, int len)" "rd_Double" 1 103 F 78 157 T " (double *p, int w, int d, int f__scale, bool f__cblank)" "rd_Double" 1 110 F 79 98 T " (double *p, int w, int d, int f__scale=0, bool f__cblank=false)" "rd_Int" 1 103 F 78 42 T " (integer *n, int w, register int base, bool f__cblank)" "rd_Int" 1 110 F 79 96 T " (integer *n, int w, register int base=10, bool f__cblank=false)" "rd_Logical" 1 103 F 78 99 T " (bool *n, int w)" "rd_Logical" 1 110 F 79 97 T " (bool *n, int w)" "real" 1 107 F 77 16 F "real" 1 107 F 77 33 F "reductionDimension" 1 103 F 86 1215 T " ( )" "reductionDimension" 1 110 F 87 90 T " ( )" "ref_count" 1 111 F 53 44 F "ref_count" 1 111 F 55 43 F "ref_count" 1 111 F 64 46 F "ref_count" 1 111 F 72 45 F "ref_count" 1 111 F 76 37 F "ref_count" 1 111 F 89 125 F "removeAllEOL" 1 103 F 67 249 T " (char *t)" "removeAllEOL" 1 110 F 68 122 T " (char *t)" "removeOrderElement" 1 103 F 88 111 T " (XMLNodeData *d, XMLElementType t, int index)" "removeOrderElement" 1 110 F 89 193 T " (XMLNodeData *d, XMLElementType t, int index)" "removeQuotes" 1 103 F 67 197 T " (char *t)" "removeQuotes" 1 110 F 68 118 T " (char *t)" "replace" 1 103 F 48 624 T " (int t, Vector pointToAdd, double valueF)" "replace" 1 110 F 49 66 T " (int t, Vector pointToAdd, double valueF)" "rescaling" 1 111 F 60 124 F "reset" 1 103 F 50 82 T " ( )" "reset" 1 110 F 51 47 T " ( )" "resetCounter" 1 103 F 57 164 T " ( )" "resetCounter" 1 110 F 58 61 T " ( )" "restartSimpleQPSolve" 1 103 F 65 365 T " (Vector vBO, Vector vP)" "restartSimpleQPSolve" 1 110 F 47 43 T " (Vector vBO, Vector vP)" "resultsFile" 1 111 F 87 77 F "rhoEnd" 1 111 F 87 82 F "rhostart" 1 111 F 87 41 F "ROOT2" 1 101 F 68 42 F "Rosenbrock" 1 100 F 83 70 F "Rosenbrock" 1 103 F 82 146 T " (int _t)" "Rosenbrock" 1 110 F 83 73 T " (int _t)" "Rosenbrock::eval" 1 103 F 82 139 T " (Vector X, int *nerror)" "Rosenbrock::eval" 1 110 F 83 75 T " (Vector v, int *nerror=NULL)" "Rosenbrock::Rosenbrock" 1 103 F 82 146 T " (int _t)" "Rosenbrock::Rosenbrock" 1 110 F 83 73 T " (int _t)" "Rosenbrock::~Rosenbrock" 1 103 F 83 74 T " ( )" "round" 1 103 F 68 101 T " (double a)" "runXML" 1 103 F 85 66 T " (int argc, char **argv)" "S" 1 111 F 83 127 F "S_fp" 1 107 F 77 212 F "S_fp" 1 107 F 77 224 F "save" 1 103 F 52 262 T " (char *filename,char ascii)" "save" 1 103 F 52 286 T " (FILE *f,char ascii)" "save" 1 103 F 63 581 T " (char *name)" "save" 1 103 F 71 440 T " (char *filename, char ascii)" "save" 1 103 F 71 453 T " (FILE *f, char ascii)" "save" 1 103 F 82 69 T " (char *filename)" "save" 1 110 F 53 61 T " (char *filename,char ascii)" "save" 1 110 F 53 62 T " (FILE *f,char ascii)" "save" 1 110 F 64 111 T " (char *name)" "save" 1 110 F 72 64 T " (char *filename, char ascii)" "save" 1 110 F 72 65 T " (FILE *f, char ascii)" "save" 1 110 F 83 123 T " (char *)" "saveFileName" 1 111 F 60 102 F "saveStats" 1 103 F 59 37 T " (char *resultsFile, Vector vG, Matrix mH, Vector vLambda)" "saveStats" 1 110 F 60 88 T " (char *filename, Vector vG, Matrix mH, Vector vLambda)" "saveValue" 1 103 F 59 198 T " (Vector tmp,double valueOF, int nerror)" "saveValue" 1 103 F 59 336 T " (Vector X,double valueOF, int nerror)" "saveValue" 1 110 F 60 86 T " (Vector tmp,double valueOF, int nerror)" "saveValue" 1 110 F 60 128 T " (Vector X,double valueOF,int nerror)" "scalarProduct" 1 103 F 52 673 T " (int nl, Vector v)" "scalarProduct" 1 103 F 71 331 T " (Vector v)" "scalarProduct" 1 110 F 53 117 T " (int nl, Vector v)" "scalarProduct" 1 110 F 72 100 T " (Vector v)" "scalingFactorIsGiven" 1 111 F 87 40 F "set" 1 103 F 71 481 T " (double dd)" "set" 1 103 F 73 146 T " (char c)" "set" 1 110 F 72 98 T " (double dd)" "set" 1 110 F 74 64 T " (char c)" "setColNames" 1 103 F 52 1158 T " (char **c, int nc)" "setColNames" 1 110 F 53 71 T " (char **c, int nc=0)" "setExternalData" 1 103 F 71 79 T " (int _n, double *dd)" "setExternalData" 1 110 F 72 67 T " (int _n, double *dd)" "setExtSize" 1 103 F 52 192 T " (int _extLine, int _extColumn)" "setExtSize" 1 110 F 53 50 T " (int _extLine, int _extColumn)" "setFlag" 1 103 F 64 121 T " ( unsigned int val )" "setLine" 1 103 F 52 1103 T " (int i, Vector v, int n)" "setLine" 1 110 F 53 92 T " (int i, Vector v, int n=0)" "setLines" 1 103 F 52 1109 T " (int indexDest, Matrix Source, int indexSource, int number)" "setLines" 1 110 F 53 93 T " (int indexDest, Matrix Source, int indexSource=0, int number=0)" "setName" 1 103 F 59 154 T " (char *s)" "setName" 1 110 F 60 90 T " (char *s)" "setNamesForDBfile" 1 103 F 86 1109 T " (int nIndexNames, char **indexNames, char **allVarNames)" "setNamesForDBfile" 1 110 F 87 91 T " (int nIndexNames, char **indexNames, char **allVarNames)" "setNamesForTraceFile" 1 103 F 86 1187 T " ( )" "setNamesForTraceFile" 1 110 F 87 92 T " ( )" "setNColumn" 1 103 F 52 179 T " (int _nColumn)" "setNColumn" 1 110 F 53 67 T " (int _nColumn)" "setNLine" 1 103 F 52 167 T " (int _nLine)" "setNLine" 1 110 F 53 65 T " (int _nLine)" "setOptionalN" 1 103 F 50 62 T " (int _optionalN)" "setOptionalN" 1 110 F 51 45 T " (int optinalN)" "setPart" 1 103 F 71 474 T " (int i, Vector v, int n, int ii)" "setPart" 1 110 F 72 84 T " (int i, Vector v, int n=0, int ii=0)" "setSaveFile" 1 103 F 59 142 T " (char *s)" "setSaveFile" 1 110 F 60 91 T " (char *b=NULL)" "setSigma" 1 103 F 86 1531 T " (Matrix mH, Vector rescale)" "setSigma" 1 110 F 87 53 T " (Matrix mH, Vector rescale)" "setSize" 1 103 F 52 185 T " (int _nLine,int _nColumn)" "setSize" 1 103 F 54 49 T " (int _n)" "setSize" 1 103 F 71 111 T " (int _n)" "setSize" 1 103 F 73 73 T " (int _n)" "setSize" 1 103 F 75 126 T " (int _n)" "setSize" 1 110 F 53 68 T " (int _nLine,int _nColumn)" "setSize" 1 110 F 55 52 T " (int _n)" "setSize" 1 110 F 72 61 T " (int _n)" "setSize" 1 110 F 74 49 T " (int _n)" "setSize" 1 110 F 76 55 T " (int _n)" "sgi" 1 101 F 77 241 F "shift" 1 103 F 71 489 T " (int s)" "shift" 1 110 F 72 99 T " (int s)" "shiftedEval" 1 103 F 63 380 T " ( Vector Point, double minusVal)" "shiftedEval" 1 110 F 64 96 T " ( Vector Point, double minusVal)" "shortint" 1 107 F 77 15 F "shortint" 1 107 F 77 32 F "shortlogical" 1 107 F 77 21 F "shortlogical" 1 107 F 77 38 F "shortXToLongX" 1 103 F 86 291 T " (double *sx, double *llx)" "shortXToLongX" 1 110 F 87 84 T " (double *sx, double *llx)" "SIFEXAMPLES" 18 1700 F 90 13 F "SIFFunction" 1 100 F 79 73 F "SIFFunction" 1 103 F 78 334 T " (int _t, char *input , elfunType t1, groupType t2)" "SIFFunction" 1 110 F 79 76 T " (int _t,char *, elfunType , groupType )" "SIFFunction.cpp:c__50000" 1 109 T 78 614 F "SIFFunction.cpp:c_false" 1 109 T 78 615 F "SIFFunction.cpp:EXPMAX" 1 101 T 78 152 F "SIFFunction.cpp:EXPMAXDIGS" 1 101 T 78 151 F "SIFFunction.cpp:FMAX" 1 101 T 78 150 F "SIFFunction.cpp:ifstat" 1 109 T 78 613 F "SIFFunction.cpp:igstat" 1 109 T 78 613 F "SIFFunction.cpp:jobToDo" 1 109 T 78 616 F "SIFFunction.cpp:VAL" 1 101 T 78 315 F "SIFFunction.h:FU_SPACE" 1 101 T 79 43 F "SIFFunction.h:max" 1 101 T 79 37 F "SIFFunction.h:min" 1 101 T 79 34 F "SIFFunction.h:SIFFUNCTION_INCLUDE" 1 101 T 79 27 F "SIFFunction::_elfun_" 1 111 F 79 93 F "SIFFunction::_group_" 1 111 F 79 94 F "SIFFunction::a" 1 111 F 79 83 F "SIFFunction::alltriv" 1 111 F 79 86 F "SIFFunction::b" 1 111 F 79 83 F "SIFFunction::bl" 1 111 F 79 83 F "SIFFunction::bu" 1 111 F 79 83 F "SIFFunction::CRLF" 1 103 F 78 328 T " ( )" "SIFFunction::CRLF" 1 110 F 79 100 T " ( )" "SIFFunction::epvalu" 1 111 F 79 83 F "SIFFunction::escale" 1 111 F 79 83 F "SIFFunction::eval" 1 103 F 78 620 T " (Vector v, int *nerror)" "SIFFunction::eval" 1 110 F 79 78 T " (Vector v, int *nerror=NULL)" "SIFFunction::FF" 1 111 F 79 81 F "SIFFunction::ft" 1 111 F 79 83 F "SIFFunction::fuvals" 1 111 F 79 83 F "SIFFunction::gpvalu" 1 111 F 79 83 F "SIFFunction::gscale" 1 111 F 79 83 F "SIFFunction::gvals" 1 111 F 79 83 F "SIFFunction::gxeqx" 1 111 F 79 87 F "SIFFunction::icalcf" 1 111 F 79 84 F "SIFFunction::icna" 1 111 F 79 84 F "SIFFunction::ieling" 1 111 F 79 84 F "SIFFunction::ielvar" 1 111 F 79 84 F "SIFFunction::intvar" 1 111 F 79 84 F "SIFFunction::istada" 1 111 F 79 84 F "SIFFunction::istadg" 1 111 F 79 84 F "SIFFunction::istadh" 1 111 F 79 84 F "SIFFunction::istaev" 1 111 F 79 84 F "SIFFunction::istep" 1 111 F 79 84 F "SIFFunction::istgp" 1 111 F 79 84 F "SIFFunction::itypee" 1 111 F 79 84 F "SIFFunction::itypeg" 1 111 F 79 84 F "SIFFunction::lcalcg" 1 111 F 79 84 F "SIFFunction::lepvlu" 1 111 F 79 91 F "SIFFunction::lgpvlu" 1 111 F 79 91 F "SIFFunction::lnelnum" 1 111 F 79 91 F "SIFFunction::lnelvars" 1 111 F 79 91 F "SIFFunction::myErrno" 1 111 F 79 89 F "SIFFunction::n" 1 111 F 79 85 F "SIFFunction::nel1" 1 111 F 79 91 F "SIFFunction::nelnum" 1 111 F 79 85 F "SIFFunction::nelvars" 1 111 F 79 85 F "SIFFunction::nepvlu" 1 111 F 79 85 F "SIFFunction::ng" 1 111 F 79 85 F "SIFFunction::ng1" 1 111 F 79 91 F "SIFFunction::ngel" 1 111 F 79 85 F "SIFFunction::ngpvlu" 1 111 F 79 85 F "SIFFunction::nnza" 1 111 F 79 85 F "SIFFunction::rd_Char" 1 103 F 78 317 T " (char *p, int len)" "SIFFunction::rd_Char" 1 110 F 79 99 T " (char *p, int len)" "SIFFunction::rd_Double" 1 103 F 78 157 T " (double *p, int w, int d, int f__scale, bool f__cblank)" "SIFFunction::rd_Double" 1 110 F 79 98 T " (double *p, int w, int d, int f__scale=0, bool f__cblank=false)" "SIFFunction::rd_Int" 1 103 F 78 42 T " (integer *n, int w, register int base, bool f__cblank)" "SIFFunction::rd_Int" 1 110 F 79 96 T " (integer *n, int w, register int base=10, bool f__cblank=false)" "SIFFunction::rd_Logical" 1 103 F 78 99 T " (bool *n, int w)" "SIFFunction::rd_Logical" 1 110 F 79 97 T " (bool *n, int w)" "SIFFunction::SIFFunction" 1 103 F 78 334 T " (int _t, char *input , elfunType t1, groupType t2)" "SIFFunction::SIFFunction" 1 110 F 79 76 T " (int _t,char *, elfunType , groupType )" "SIFFunction::~SIFFunction" 1 103 F 78 605 T " ( )" "SIFFunction::~SIFFunction" 1 110 F 79 77 T " ( )" "SIFFUNCTION_INCLUDE" 1 101 F 79 27 F "sifOptimizer" 18 1701 F 90 74 F "sigmaIsSet" 1 111 F 87 77 F "sign" 1 103 F 68 49 T " ( const double a )" "sign" 1 103 F 68 55 T " ( const double t1, const double t2 )" "SIMPLE_OBJECTIVEFUNCTION_INCLUDE" 1 101 F 83 27 F "simpleObjFunctions.cpp:BADSCALING" 1 101 T 82 374 F "simpleObjFunctions.h:SIMPLE_OBJECTIVEFUNCTION_INCLUDE" 1 101 T 83 27 F "simpleOptimizer" 18 1701 F 90 87 F "simpleQPSolve" 1 103 F 65 46 T " (Matrix G, Vector vd, Matrix Astar, Vector vBstar, Vector vXtmp, Vector vLambda)" "simpleQPSolve" 1 103 F 65 105 T " (Matrix mH, Vector vG, Matrix mA, Vector vB, Vector vP, Vector vLambda, int *info)" "simpleQPSolve" 1 110 F 47 41 T " (Matrix mH, Vector vG, Matrix mA, Vector vB, Vector vP, Vector vLambda, int *info)" "SimpleQuadratic" 1 100 F 83 96 F "SimpleQuadratic" 1 103 F 82 227 T " (int _t, int _n)" "SimpleQuadratic" 1 110 F 83 99 T " (int _t, int _n=0)" "SimpleQuadratic::eval" 1 103 F 82 218 T " (Vector X, int *nerror)" "SimpleQuadratic::eval" 1 110 F 83 101 T " (Vector v, int *nerror=NULL)" "SimpleQuadratic::n" 1 111 F 83 103 F "SimpleQuadratic::SimpleQuadratic" 1 103 F 82 227 T " (int _t, int _n)" "SimpleQuadratic::SimpleQuadratic" 1 110 F 83 99 T " (int _t, int _n=0)" "SimpleQuadratic::~SimpleQuadratic" 1 103 F 83 100 T " ( )" "simpleTest" 1 103 F 81 110 T " (char c, int n)" "skipLine" 1 103 F 67 260 T " (const char *t)" "skipLine" 1 110 F 68 124 T " (const char *l)" "skipSpaces" 1 103 F 67 174 T " (const char *t)" "skipSpaces" 1 110 F 68 125 T " (const char *l)" "solveInPlace" 1 103 F 54 73 T " (Vector b)" "solveInPlace" 1 110 F 55 68 T " (Vector b)" "Solver.h:_INCLUDE_SOLVER_H" 1 101 T 66 28 F "solveTransposInPlace" 1 103 F 54 90 T " (Vector y)" "solveTransposInPlace" 1 110 F 55 69 T " (Vector y)" "sparc" 1 101 F 77 242 F "sqr" 1 103 F 68 96 T " ( const double& t )" "square" 1 103 F 71 235 T " ( )" "square" 1 110 F 72 94 T " ( )" "standardInit" 1 103 F 57 54 T " ( )" "standardInit" 1 110 F 58 77 T " ( )" "startParallelThread" 1 103 F 61 39 T " ( )" "startParallelThread" 1 110 F 62 33 T " ( )" "startPointIsGiven" 1 111 F 60 41 F "Status" 1 104 F 88 104 F "Status" 1 107 F 88 108 F "stringDup" 1 103 F 88 531 T " (LPCTSTR lpszData, int cbData)" "stringDuplicate" 1 103 F 67 237 T " (const char *line)" "stringDuplicate" 1 110 F 68 120 T " (const char *l)" "sun" 1 101 F 77 243 F "sun2" 1 101 F 77 244 F "sun3" 1 101 F 77 245 F "sun4" 1 101 F 77 246 F "SuperSimpleConstrainedObjectiveFunction" 1 100 F 83 59 F "SuperSimpleConstrainedObjectiveFunction" 1 103 F 82 332 T " (int _t)" "SuperSimpleConstrainedObjectiveFunction" 1 110 F 83 62 T " (int _t)" "SuperSimpleConstrainedObjectiveFunction::eval" 1 103 F 82 365 T " (Vector v, int *nerror)" "SuperSimpleConstrainedObjectiveFunction::eval" 1 110 F 83 65 T " (Vector v, int *nerror=NULL)" "SuperSimpleConstrainedObjectiveFunction::evalGradNLConstraint" 1 103 F 83 67 T " (int j, Vector v, Vector result, int *nerror=NULL)" "SuperSimpleConstrainedObjectiveFunction::evalNLConstraint" 1 103 F 83 66 T " (int j, Vector v, int *nerror=NULL)" "SuperSimpleConstrainedObjectiveFunction::SuperSimpleConstrainedObjectiveFunction" 1 103 F 82 332 T " (int _t)" "SuperSimpleConstrainedObjectiveFunction::SuperSimpleConstrainedObjectiveFunction" 1 110 F 83 62 T " (int _t)" "SuperSimpleConstrainedObjectiveFunction::~SuperSimpleConstrainedObjectiveFunction" 1 103 F 83 63 T " ( )" "swapLines" 1 103 F 52 1133 T " (int i, int j)" "swapLines" 1 110 F 53 94 T " (int i, int j)" "sz" 1 103 F 51 56 T " ( )" "sz" 1 103 F 64 63 T " ( )" "sz" 1 103 F 72 78 T " ( )" "sz" 1 103 F 74 57 T " ( )" "sz" 1 103 F 76 63 T " ( )" "t" 1 111 F 60 54 F "TCHAR" 1 101 F 89 50 F "testCONDORonSIF" 1 103 F 80 157 T " ( )" "testFunctions" 18 1701 F 90 68 F "testNoise" 1 103 F 81 134 T " ( )" "testRescale1" 1 103 F 81 95 T " ( )" "testRescale2" 1 103 F 81 78 T " ( )" "text" 1 111 F 89 206 F "timeToSleep" 1 111 F 87 81 F "TokenType" 1 104 F 88 52 F "TokenType" 1 107 F 88 64 F "tolLC" 1 111 F 60 75 F "tolNLC" 1 111 F 60 74 F "tolRelFeasibilityForLC" 1 111 F 60 75 F "tolRelFeasibilityForNLC" 1 111 F 60 74 F "tools.cpp:EOL1" 1 101 T 67 165 F "tools.cpp:EOL2" 1 101 T 67 166 F "tools.cpp:mysrand" 1 109 T 67 87 F "tools.h:_MPI_TOOLS_H_" 1 101 T 68 32 F "tools.h:EOL" 1 101 T 68 40 F "tools.h:INF" 1 101 T 68 39 F "tools.h:maxDWORD" 1 101 T 68 38 F "tools.h:PI" 1 101 T 68 41 F "tools.h:ROOT2" 1 101 T 68 42 F "translate" 1 103 F 48 792 T " (Vector translation)" "translate" 1 103 F 63 565 T " (Vector translation)" "translate" 1 110 F 49 74 T " (int k)" "translate" 1 110 F 49 75 T " (Vector translation)" "translate" 1 110 F 64 101 T " (Vector translation)" "transpose" 1 103 F 52 504 T " (Matrix temp)" "transpose" 1 103 F 52 517 T " ( )" "transpose" 1 110 F 53 115 T " ( )" "transpose" 1 110 F 53 116 T " (Matrix trans)" "transposeAndMultiply" 1 103 F 52 571 T " (Matrix R, Matrix Bplus)" "transposeAndMultiply" 1 103 F 52 647 T " (Vector rv, Vector v)" "transposeAndMultiply" 1 103 F 71 296 T " (Vector vR, Matrix M)" "transposeAndMultiply" 1 110 F 53 105 T " (Vector R, Vector a)" "transposeAndMultiply" 1 110 F 53 107 T " (Matrix R, Matrix a)" "transposeAndMultiply" 1 110 F 72 112 T " (Vector vR, Matrix M)" "transposeInPlace" 1 103 F 52 478 T " ( )" "transposeInPlace" 1 110 F 53 114 T " ( )" "TRUE" 1 101 F 89 56 F "TRUE_" 1 101 F 77 49 F "type" 1 111 F 77 177 F "type" 1 111 F 89 201 F "u370" 1 101 F 77 247 F "u3b" 1 101 F 77 248 F "u3b2" 1 101 F 77 249 F "u3b5" 1 101 F 77 250 F "U_fp" 1 107 F 77 202 F "U_fp" 1 107 F 77 214 F "uinteger" 1 107 F 77 13 F "uinteger" 1 107 F 77 30 F "ulongint" 1 107 F 77 43 F "UnconstrainedObjectiveFunction" 1 100 F 60 109 F "UnconstrainedObjectiveFunction" 1 103 F 60 112 T " ( )" "UnconstrainedObjectiveFunction::evalGradNLConstraint" 1 103 F 60 116 T " (int j, Vector v, int *nerror=NULL)" "UnconstrainedObjectiveFunction::evalGradNLConstraint" 1 103 F 60 117 T " (int j, Vector v, Vector result, int *nerror=NULL)" "UnconstrainedObjectiveFunction::evalNLConstraint" 1 103 F 60 115 T " (int j, Vector v, int *nerror=NULL)" "UnconstrainedObjectiveFunction::UnconstrainedObjectiveFunction" 1 103 F 60 112 T " ( )" "UnconstrainedObjectiveFunction::~UnconstrainedObjectiveFunction" 1 103 F 60 113 T " ( )" "unConstraintedQPOptim" 1 103 F 69 177 T " ( double rhoStart, double rhoEnd, int niter, ObjectiveFunction *of, int nnode)" "unix" 1 101 F 77 251 F "unsetFlag" 1 103 F 64 122 T " ( unsigned int val )" "updateCounter" 1 103 F 59 128 T " (double df, Vector vX, int nerror)" "updateCounter" 1 110 F 60 92 T " (double df, Vector vX, int nerror=0)" "updateM" 1 103 F 48 521 T " (Vector newPoint, double valueF)" "updateM" 1 110 F 49 69 T " (Vector newPoint, double valueF)" "updateSave" 1 103 F 52 329 T " (char *saveFileName)" "updateSave" 1 110 F 53 63 T " (char *saveFileName)" "VAL" 1 101 F 78 315 F "value" 1 111 F 51 35 F "valueBest" 1 111 F 60 46 F "valueOptimal" 1 111 F 60 46 F "valuesF" 1 111 F 49 48 F "Vardesc" 1 106 F 77 173 F "Vardesc" 1 107 F 77 179 F "Vardesc::addr" 1 111 F 77 175 F "Vardesc::dims" 1 111 F 77 176 F "Vardesc::name" 1 111 F 77 174 F "Vardesc::type" 1 111 F 77 177 F "vars" 1 111 F 77 183 F "vax" 1 101 F 77 252 F "vBase" 1 111 F 49 47 F "Vector" 1 100 F 72 36 F "Vector" 1 103 F 71 48 T " (int n)" "Vector" 1 103 F 71 54 T " (int n, int ext)" "Vector" 1 103 F 71 60 T " (int n, double *dd, char _exte)" "Vector" 1 103 F 71 71 T " (Vector a,Vector b)" "Vector" 1 103 F 71 187 T " (const Vector &A)" "Vector" 1 103 F 71 430 T " (char *filename)" "Vector" 1 103 F 71 542 T " (char *line, int gn)" "Vector" 1 110 F 72 52 T " (int _n=0)" "Vector" 1 110 F 72 53 T " (int _n, int _ext)" "Vector" 1 110 F 72 54 T " (int _n, double *dd, char externalData=0)" "Vector" 1 110 F 72 55 T " (char *filename)" "Vector" 1 110 F 72 56 T " (char *line, int guess_on_size)" "Vector" 1 110 F 72 57 T " (Vector a,Vector b)" "Vector" 1 110 F 72 72 T " ( const Vector& P )" "Vector.cpp:EOL1" 1 101 T 71 530 F "Vector.cpp:EOL2" 1 101 T 71 531 F "Vector.h:_INCLUDE_VECTOR_H" 1 101 T 72 28 F "Vector::addInPlace" 1 103 F 71 415 T " (double a, Vector v)" "Vector::addInPlace" 1 103 F 71 423 T " (double a, int i, Matrix m)" "Vector::addInPlace" 1 110 F 72 110 T " (double a, Vector v)" "Vector::addInPlace" 1 110 F 72 111 T " (double a, int i, Matrix m)" "Vector::alloc" 1 103 F 71 35 T " (int _n, int _ext)" "Vector::alloc" 1 110 F 72 41 T " (int n, int ext)" "Vector::appendToMatrixFile" 1 103 F 71 611 T " (char *saveFileName, char **names)" "Vector::appendToMatrixFile" 1 110 F 72 66 T " (char *saveFileName, char **names=NULL)" "Vector::clone" 1 103 F 71 206 T " ( )" "Vector::clone" 1 110 F 72 70 T " ( )" "Vector::copyFrom" 1 103 F 71 214 T " (Vector r, int _n)" "Vector::copyFrom" 1 110 F 72 71 T " (Vector r, int _n=0)" "Vector::d" 1 111 F 72 49 F "Vector::destroyCurrentBuffer" 1 103 F 71 176 T " ( )" "Vector::destroyCurrentBuffer" 1 110 F 72 74 T " ( )" "Vector::diagonalizeAndMultiply" 1 103 F 71 315 T " (Matrix M)" "Vector::diagonalizeAndMultiply" 1 110 F 72 113 T " (Matrix M)" "Vector::emptyVector" 1 111 F 71 33 F "Vector::emptyVector" 1 111 F 72 118 F "Vector::equals" 1 103 F 71 134 T " ( Vector Q )" "Vector::equals" 1 110 F 72 81 T " ( const Vector Q )" "Vector::euclidianDistance" 1 103 F 71 243 T " (Vector v)" "Vector::euclidianDistance" 1 110 F 72 90 T " (Vector v)" "Vector::euclidianNorm" 1 103 F 71 221 T " ( )" "Vector::euclidianNorm" 1 110 F 72 87 T " ( )" "Vector::exactshape" 1 103 F 71 124 T " ( )" "Vector::exactshape" 1 110 F 72 62 T " ( )" "Vector::extend" 1 103 F 71 118 T " ( )" "Vector::extend" 1 110 F 72 60 T " ( )" "Vector::getFromLine" 1 103 F 71 574 T " (char *line)" "Vector::getFromLine" 1 110 F 72 59 T " (char *line)" "Vector::isNull" 1 103 F 71 357 T " ( )" "Vector::isNull" 1 110 F 72 105 T " ( )" "Vector::L1Distance" 1 103 F 71 271 T " (Vector v)" "Vector::L1Distance" 1 110 F 72 91 T " (Vector v)" "Vector::L1Norm" 1 103 F 71 226 T " ( )" "Vector::L1Norm" 1 110 F 72 88 T " ( )" "Vector::LnftyDistance" 1 103 F 71 255 T " (Vector v)" "Vector::LnftyDistance" 1 110 F 72 92 T " (Vector v)" "Vector::LnftyNorm" 1 103 F 71 263 T " ( )" "Vector::LnftyNorm" 1 110 F 72 89 T " ( )" "Vector::mmax" 1 103 F 71 348 T " ( )" "Vector::mmax" 1 110 F 72 104 T " ( )" "Vector::mmin" 1 103 F 71 339 T " ( )" "Vector::mmin" 1 110 F 72 103 T " ( )" "Vector::multiply" 1 103 F 71 280 T " (double a)" "Vector::multiply" 1 103 F 71 287 T " (Vector R, double a)" "Vector::multiply" 1 110 F 72 95 T " (double a)" "Vector::multiply" 1 110 F 72 96 T " (Vector R, double a)" "Vector::oneByOneInvert" 1 103 F 71 382 T " ( )" "Vector::oneByOneInvert" 1 110 F 72 102 T " ( )" "Vector::oneByOneMutiply" 1 103 F 71 375 T " (Vector rescaling)" "Vector::oneByOneMutiply" 1 110 F 72 101 T " (Vector r)" "Vector::operator +" 1 103 F 71 389 T " ( Vector v)" "Vector::operator +" 1 110 F 72 107 T " ( Vector v)" "Vector::operator +=" 1 103 F 71 407 T " ( Vector v)" "Vector::operator +=" 1 110 F 72 109 T " ( Vector v)" "Vector::operator -" 1 103 F 71 365 T " ( Vector v)" "Vector::operator -" 1 110 F 72 106 T " ( Vector v)" "Vector::operator -=" 1 103 F 71 399 T " ( Vector v)" "Vector::operator -=" 1 110 F 72 108 T " ( Vector v)" "Vector::operator =" 1 103 F 71 194 T " ( const Vector& A )" "Vector::operator =" 1 110 F 72 73 T " ( const Vector& P )" "Vector::operator ==" 1 103 F 72 80 T " ( const Vector Q)" "Vector::operator double*" 1 103 F 72 82 T " ( )" "Vector::permutIn" 1 103 F 71 500 T " (Vector vR, VectorInt viP)" "Vector::permutIn" 1 110 F 72 114 T " (Vector vR, VectorInt viP)" "Vector::permutOut" 1 103 F 71 515 T " (Vector vR, VectorInt viP)" "Vector::permutOut" 1 110 F 72 115 T " (Vector vR, VectorInt viP)" "Vector::prepareExtend" 1 103 F 71 98 T " (int new_extention)" "Vector::prepareExtend" 1 110 F 72 40 T " (int new_extention)" "Vector::print" 1 103 F 71 160 T " ( )" "Vector::print" 1 110 F 72 63 T " ( )" "Vector::save" 1 103 F 71 440 T " (char *filename, char ascii)" "Vector::save" 1 103 F 71 453 T " (FILE *f, char ascii)" "Vector::save" 1 110 F 72 64 T " (char *filename, char ascii)" "Vector::save" 1 110 F 72 65 T " (FILE *f, char ascii)" "Vector::scalarProduct" 1 103 F 71 331 T " (Vector v)" "Vector::scalarProduct" 1 110 F 72 100 T " (Vector v)" "Vector::set" 1 103 F 71 481 T " (double dd)" "Vector::set" 1 110 F 72 98 T " (double dd)" "Vector::setExternalData" 1 103 F 71 79 T " (int _n, double *dd)" "Vector::setExternalData" 1 110 F 72 67 T " (int _n, double *dd)" "Vector::setPart" 1 103 F 71 474 T " (int i, Vector v, int n, int ii)" "Vector::setPart" 1 110 F 72 84 T " (int i, Vector v, int n=0, int ii=0)" "Vector::setSize" 1 103 F 71 111 T " (int _n)" "Vector::setSize" 1 110 F 72 61 T " (int _n)" "Vector::shift" 1 103 F 71 489 T " (int s)" "Vector::shift" 1 110 F 72 99 T " (int s)" "Vector::square" 1 103 F 71 235 T " ( )" "Vector::square" 1 110 F 72 94 T " ( )" "Vector::sz" 1 103 F 72 78 T " ( )" "Vector::transposeAndMultiply" 1 103 F 71 296 T " (Vector vR, Matrix M)" "Vector::transposeAndMultiply" 1 110 F 72 112 T " (Vector vR, Matrix M)" "Vector::Vector" 1 103 F 71 48 T " (int n)" "Vector::Vector" 1 103 F 71 54 T " (int n, int ext)" "Vector::Vector" 1 103 F 71 60 T " (int n, double *dd, char _exte)" "Vector::Vector" 1 103 F 71 71 T " (Vector a,Vector b)" "Vector::Vector" 1 103 F 71 187 T " (const Vector &A)" "Vector::Vector" 1 103 F 71 430 T " (char *filename)" "Vector::Vector" 1 103 F 71 542 T " (char *line, int gn)" "Vector::Vector" 1 110 F 72 52 T " (int _n=0)" "Vector::Vector" 1 110 F 72 53 T " (int _n, int _ext)" "Vector::Vector" 1 110 F 72 54 T " (int _n, double *dd, char externalData=0)" "Vector::Vector" 1 110 F 72 55 T " (char *filename)" "Vector::Vector" 1 110 F 72 56 T " (char *line, int guess_on_size)" "Vector::Vector" 1 110 F 72 57 T " (Vector a,Vector b)" "Vector::Vector" 1 110 F 72 72 T " ( const Vector& P )" "Vector::VectorData" 1 107 F 72 48 F "Vector::VectorDataTag" 1 106 F 72 42 F "Vector::VectorDataTag::extention" 1 111 F 72 44 F "Vector::VectorDataTag::externalData" 1 111 F 72 47 F "Vector::VectorDataTag::n" 1 111 F 72 44 F "Vector::VectorDataTag::p" 1 111 F 72 46 F "Vector::VectorDataTag::ref_count" 1 111 F 72 45 F "Vector::zero" 1 103 F 71 92 T " (int i, int _n)" "Vector::zero" 1 110 F 72 97 T " (int _i=0, int _n=0)" "Vector::~Vector" 1 103 F 71 171 T " ( )" "Vector::~Vector" 1 110 F 72 75 T " ( )" "VectorChar" 1 100 F 74 32 F "VectorChar" 1 103 F 73 38 T " (int _n)" "VectorChar" 1 103 F 73 44 T " (int _n, int _ext)" "VectorChar" 1 103 F 73 50 T " (VectorChar *v)" "VectorChar" 1 103 F 73 56 T " (int _n, char *d)" "VectorChar" 1 103 F 73 128 T " ( const VectorChar& P )" "VectorChar" 1 103 F 74 40 T " ( )" "VectorChar" 1 110 F 74 41 T " (int _n)" "VectorChar" 1 110 F 74 42 T " (int _n, int _ext)" "VectorChar" 1 110 F 74 43 T " (int _n, char *d)" "VectorChar" 1 110 F 74 44 T " ( const VectorChar& P )" "VectorChar" 1 110 F 74 45 T " (VectorChar *v)" "VectorChar.cpp:CHECK" 1 101 T 73 30 F "VectorChar.h:_INCLUDE_VectorCHAR_H" 1 101 T 74 28 F "VectorChar::alloc" 1 103 F 73 32 T " ( )" "VectorChar::alloc" 1 110 F 74 67 T " ( )" "VectorChar::exactshape" 1 103 F 73 86 T " ( )" "VectorChar::exactshape" 1 110 F 74 50 T " ( )" "VectorChar::extend" 1 103 F 73 80 T " ( )" "VectorChar::extend" 1 110 F 74 48 T " ( )" "VectorChar::extention" 1 111 F 74 35 F "VectorChar::n" 1 111 F 74 38 F "VectorChar::np" 1 111 F 74 35 F "VectorChar::operator =" 1 103 F 73 116 T " ( const VectorChar& P )" "VectorChar::operator =" 1 110 F 74 59 T " ( const VectorChar& P )" "VectorChar::operator ==" 1 103 F 73 100 T " ( const VectorChar& Q )" "VectorChar::operator ==" 1 110 F 74 58 T " ( const VectorChar& )" "VectorChar::operator char*" 1 103 F 74 60 T " ( )" "VectorChar::p" 1 111 F 74 37 F "VectorChar::prepareExtend" 1 103 F 73 63 T " (int new_extention)" "VectorChar::prepareExtend" 1 110 F 74 54 T " (int new_extention)" "VectorChar::print" 1 103 F 73 135 T " ( )" "VectorChar::print" 1 110 F 74 51 T " ( )" "VectorChar::set" 1 103 F 73 146 T " (char c)" "VectorChar::set" 1 110 F 74 64 T " (char c)" "VectorChar::setSize" 1 103 F 73 73 T " (int _n)" "VectorChar::setSize" 1 110 F 74 49 T " (int _n)" "VectorChar::sz" 1 103 F 74 57 T " ( )" "VectorChar::VectorChar" 1 103 F 73 38 T " (int _n)" "VectorChar::VectorChar" 1 103 F 73 44 T " (int _n, int _ext)" "VectorChar::VectorChar" 1 103 F 73 50 T " (VectorChar *v)" "VectorChar::VectorChar" 1 103 F 73 56 T " (int _n, char *d)" "VectorChar::VectorChar" 1 103 F 73 128 T " ( const VectorChar& P )" "VectorChar::VectorChar" 1 103 F 74 40 T " ( )" "VectorChar::VectorChar" 1 110 F 74 41 T " (int _n)" "VectorChar::VectorChar" 1 110 F 74 42 T " (int _n, int _ext)" "VectorChar::VectorChar" 1 110 F 74 43 T " (int _n, char *d)" "VectorChar::VectorChar" 1 110 F 74 44 T " ( const VectorChar& P )" "VectorChar::VectorChar" 1 110 F 74 45 T " (VectorChar *v)" "VectorChar::~VectorChar" 1 103 F 73 95 T " ( )" "VectorChar::~VectorChar" 1 110 F 74 46 T " ( )" "VectorData" 1 107 F 72 48 F "VectorDataTag" 1 106 F 72 42 F "VectorInt" 1 100 F 76 31 F "VectorInt" 1 103 F 75 46 T " (int _n)" "VectorInt" 1 103 F 75 52 T " (int _n, int _ext)" "VectorInt" 1 103 F 75 58 T " (int _n, int *_d)" "VectorInt" 1 103 F 75 91 T " (const VectorInt &A)" "VectorInt" 1 110 F 76 42 T " (int _n=0)" "VectorInt" 1 110 F 76 43 T " (int _n, int _ext)" "VectorInt" 1 110 F 76 44 T " (int _n, int *d)" "VectorInt" 1 110 F 76 49 T " ( const VectorInt& P )" "VectorInt.h:_INCLUDE_VectorIntINT_H" 1 101 T 76 27 F "VectorInt::alloc" 1 103 F 75 33 T " (int _n, int _ext)" "VectorInt::alloc" 1 110 F 76 73 T " (int, int)" "VectorInt::clone" 1 103 F 75 110 T " ( )" "VectorInt::clone" 1 110 F 76 47 T " ( )" "VectorInt::copyFrom" 1 103 F 75 118 T " (VectorInt r)" "VectorInt::copyFrom" 1 110 F 76 48 T " (VectorInt r)" "VectorInt::d" 1 111 F 76 40 F "VectorInt::destroyCurrentBuffer" 1 103 F 75 80 T " ( )" "VectorInt::destroyCurrentBuffer" 1 110 F 76 51 T " ( )" "VectorInt::emptyVectorInt" 1 111 F 75 31 F "VectorInt::emptyVectorInt" 1 111 F 76 70 F "VectorInt::equals" 1 103 F 75 149 T " ( const VectorInt& Q )" "VectorInt::equals" 1 110 F 76 68 T " ( const VectorInt& Q )" "VectorInt::exactshape" 1 103 F 75 139 T " ( )" "VectorInt::exactshape" 1 110 F 76 56 T " ( )" "VectorInt::extend" 1 103 F 75 133 T " ( )" "VectorInt::extend" 1 110 F 76 54 T " ( )" "VectorInt::operator =" 1 103 F 75 98 T " ( const VectorInt& A )" "VectorInt::operator =" 1 110 F 76 50 T " ( const VectorInt& P )" "VectorInt::operator ==" 1 103 F 76 64 T " ( const VectorInt& P)" "VectorInt::operator int*" 1 103 F 76 65 T " ( )" "VectorInt::prepareExtend" 1 103 F 75 65 T " (int new_extention)" "VectorInt::prepareExtend" 1 110 F 76 60 T " (int new_extention)" "VectorInt::print" 1 103 F 75 166 T " ( )" "VectorInt::print" 1 110 F 76 57 T " ( )" "VectorInt::setSize" 1 103 F 75 126 T " (int _n)" "VectorInt::setSize" 1 110 F 76 55 T " (int _n)" "VectorInt::sz" 1 103 F 76 63 T " ( )" "VectorInt::VectorInt" 1 103 F 75 46 T " (int _n)" "VectorInt::VectorInt" 1 103 F 75 52 T " (int _n, int _ext)" "VectorInt::VectorInt" 1 103 F 75 58 T " (int _n, int *_d)" "VectorInt::VectorInt" 1 103 F 75 91 T " (const VectorInt &A)" "VectorInt::VectorInt" 1 110 F 76 42 T " (int _n=0)" "VectorInt::VectorInt" 1 110 F 76 43 T " (int _n, int _ext)" "VectorInt::VectorInt" 1 110 F 76 44 T " (int _n, int *d)" "VectorInt::VectorInt" 1 110 F 76 49 T " ( const VectorInt& P )" "VectorInt::VectorIntData" 1 107 F 76 39 F "VectorInt::VectorIntDataTag" 1 106 F 76 34 F "VectorInt::VectorIntDataTag::extention" 1 111 F 76 36 F "VectorInt::VectorIntDataTag::n" 1 111 F 76 36 F "VectorInt::VectorIntDataTag::p" 1 111 F 76 38 F "VectorInt::VectorIntDataTag::ref_count" 1 111 F 76 37 F "VectorInt::~VectorInt" 1 103 F 75 75 T " ( )" "VectorInt::~VectorInt" 1 110 F 76 52 T " ( )" "VectorIntData" 1 107 F 76 39 F "VectorIntDataTag" 1 106 F 76 34 F "vFullStart" 1 111 F 87 42 F "vi_QP" 1 109 F 65 80 F "vIndexes" 1 111 F 87 78 F "viPermut_QP" 1 109 F 65 80 F "vLastLambda_QP" 1 109 F 65 81 F "vLx" 1 111 F 87 78 F "vLxIndexes" 1 111 F 87 78 F "VOID" 1 101 F 77 156 F "vScale" 1 111 F 87 42 F "vSigma" 1 111 F 87 42 F "vSigNoise" 1 111 F 87 78 F "vXToOptim" 1 111 F 87 79 F "Warning" 1 111 F 63 37 F "Warning" 1 111 F 64 117 F "xBest" 1 111 F 60 42 F "XML" 1 106 F 88 75 F "XML" 1 107 F 88 86 F "XML::cbEndTag" 1 111 F 88 81 F "XML::cbNewElement" 1 111 F 88 83 F "XML::error" 1 111 F 88 79 F "XML::lpEndTag" 1 111 F 88 80 F "XML::lpNewElement" 1 111 F 88 82 F "XML::lpXML" 1 111 F 88 77 F "XML::nFirst" 1 111 F 88 84 F "XML::nIndex" 1 111 F 88 78 F "XML::pClrTags" 1 111 F 88 85 F "XML_OBJECTIVEFUNCTION_INCLUDE" 1 101 F 87 27 F "XMLAttribute" 1 107 F 89 103 F "XMLClear" 1 107 F 89 98 F "XMLElementType" 1 104 F 89 80 F "XMLElementType" 1 107 F 89 86 F "XMLError" 1 104 F 89 64 F "XMLError" 1 107 F 89 77 F "XMLFILESCPP" 18 1700 F 90 39 F "XMLFILESH" 18 1700 F 90 38 F "xmlMain.cpp:of" 1 109 T 85 53 F "xmlMain.cpp:ofc" 1 109 T 85 54 F "XMLNode" 1 103 F 88 427 T " (XMLNode *pParent, LPTSTR lpszName, int isDeclaration)" "XMLNode" 1 103 F 88 1463 T " (const XMLNode &A)" "XMLNode" 1 103 F 89 174 T " ( )" "XMLNode" 1 106 F 89 107 F "XMLNode" 1 107 F 89 194 F "XMLNode" 1 110 F 89 130 T " (XMLNode *pParent, LPTSTR lpszName, int isDeclaration)" "XMLNode" 1 110 F 89 170 T " (const XMLNode &A)" "XMLNode::<anonymous>::isDeclaration" 1 111 F 89 118 F "XMLNode::<anonymous>::lpszName" 1 111 F 89 113 F "XMLNode::<anonymous>::nAttribute" 1 111 F 89 117 F "XMLNode::<anonymous>::nChild" 1 111 F 89 114 F "XMLNode::<anonymous>::nClear" 1 111 F 89 116 F "XMLNode::<anonymous>::nText" 1 111 F 89 115 F "XMLNode::<anonymous>::pAttribute" 1 111 F 89 123 F "XMLNode::<anonymous>::pChild" 1 111 F 89 120 F "XMLNode::<anonymous>::pClear" 1 111 F 89 122 F "XMLNode::<anonymous>::pOrder" 1 111 F 89 124 F "XMLNode::<anonymous>::pParent" 1 111 F 89 119 F "XMLNode::<anonymous>::pText" 1 111 F 89 121 F "XMLNode::<anonymous>::ref_count" 1 111 F 89 125 F "XMLNode::AddAttribute" 1 103 F 88 464 T " (LPTSTR lpszName, LPTSTR lpszValuev)" "XMLNode::AddAttribute" 1 110 F 89 181 T " (LPTSTR lpszName, LPTSTR lpszValuev)" "XMLNode::AddChild" 1 103 F 88 450 T " (LPTSTR lpszName, int isDeclaration)" "XMLNode::AddChild" 1 110 F 89 180 T " (LPTSTR lpszName, int isDeclaration)" "XMLNode::AddClear" 1 103 F 88 492 T " (LPTSTR lpszValue, LPTSTR lpszOpen, LPTSTR lpszClose)" "XMLNode::AddClear" 1 110 F 89 183 T " (LPTSTR lpszValue, LPTSTR lpszOpen, LPTSTR lpszClose)" "XMLNode::AddText" 1 103 F 88 479 T " (LPTSTR lpszValue)" "XMLNode::AddText" 1 110 F 89 182 T " (LPTSTR lpszValue)" "XMLNode::createXMLString" 1 103 F 88 1393 T " (int nFormat, int *pnSize)" "XMLNode::createXMLString" 1 110 F 89 160 T " (int nFormat, int *pnSize)" "XMLNode::CreateXMLStringR" 1 103 F 88 1125 T " (XMLNodeData *pEntry, LPTSTR lpszMarker, int nFormat)" "XMLNode::CreateXMLStringR" 1 110 F 89 190 T " (XMLNodeData *pEntry, LPTSTR lpszMarker, int nFormat)" "XMLNode::d" 1 111 F 89 127 F "XMLNode::destroyCurrentBuffer" 1 103 F 88 1416 T " (XMLNodeData *d)" "XMLNode::destroyCurrentBuffer" 1 110 F 89 172 T " (XMLNodeData *d)" "XMLNode::emptyXMLAttribute" 1 111 F 88 49 F "XMLNode::emptyXMLAttribute" 1 111 F 89 177 F "XMLNode::emptyXMLClear" 1 111 F 88 48 F "XMLNode::emptyXMLClear" 1 111 F 89 176 F "XMLNode::emptyXMLNode" 1 111 F 88 47 F "XMLNode::emptyXMLNode" 1 111 F 89 175 F "XMLNode::enumContent" 1 103 F 88 1099 T " (XMLNodeData *pEntry, int i, XMLElementType *nodeType)" "XMLNode::enumContent" 1 110 F 89 191 T " (XMLNodeData *pEntry,int i, XMLElementType *nodeType)" "XMLNode::enumContents" 1 103 F 88 1083 T " (int i)" "XMLNode::enumContents" 1 110 F 89 161 T " (int i)" "XMLNode::getAttribute" 1 103 F 88 1507 T " (LPCTSTR lpszAttrib, int *j)" "XMLNode::getAttribute" 1 103 F 88 1539 T " (LPCTSTR name, int j)" "XMLNode::getAttribute" 1 103 F 88 1552 T " (int i)" "XMLNode::getAttribute" 1 110 F 89 151 T " (int i)" "XMLNode::getAttribute" 1 110 F 89 153 T " (LPCTSTR name, int i)" "XMLNode::getAttribute" 1 110 F 89 155 T " (LPCTSTR name, int *i=NULL)" "XMLNode::getChildNode" 1 103 F 88 1482 T " (LPCTSTR name, int *j)" "XMLNode::getChildNode" 1 103 F 88 1499 T " (LPCTSTR name, int j)" "XMLNode::getChildNode" 1 103 F 88 1554 T " (int i)" "XMLNode::getChildNode" 1 110 F 89 144 T " (int i)" "XMLNode::getChildNode" 1 110 F 89 145 T " (LPCTSTR name, int i)" "XMLNode::getChildNode" 1 110 F 89 147 T " (LPCTSTR name, int *i=NULL)" "XMLNode::getClear" 1 103 F 88 1551 T " (int i)" "XMLNode::getClear" 1 110 F 89 158 T " (int i)" "XMLNode::getError" 1 103 F 88 387 T " (XMLError error)" "XMLNode::getError" 1 110 F 89 139 T " (XMLError error)" "XMLNode::getName" 1 103 F 88 1546 T " ( )" "XMLNode::getName" 1 110 F 89 141 T " ( )" "XMLNode::getText" 1 103 F 88 1553 T " (int i)" "XMLNode::getText" 1 110 F 89 142 T " (int i=0)" "XMLNode::isAttributeSet" 1 103 F 88 1524 T " (LPCTSTR lpszAttrib)" "XMLNode::isAttributeSet" 1 110 F 89 152 T " (LPCTSTR name)" "XMLNode::isDeclaration" 1 103 F 88 1555 T " ( )" "XMLNode::isDeclaration" 1 110 F 89 166 T " ( )" "XMLNode::isEmpty" 1 103 F 88 1556 T " ( )" "XMLNode::isEmpty" 1 110 F 89 165 T " ( )" "XMLNode::nAttribute" 1 103 F 88 1549 T " ( )" "XMLNode::nAttribute" 1 110 F 89 157 T " ( )" "XMLNode::nChildNode" 1 103 F 88 1470 T " (LPCTSTR name)" "XMLNode::nChildNode" 1 103 F 88 1548 T " ( )" "XMLNode::nChildNode" 1 110 F 89 149 T " (LPCTSTR name)" "XMLNode::nChildNode" 1 110 F 89 150 T " ( )" "XMLNode::nClear" 1 103 F 88 1550 T " ( )" "XMLNode::nClear" 1 110 F 89 159 T " ( )" "XMLNode::nElement" 1 103 F 88 1115 T " (XMLNodeData *pEntry)" "XMLNode::nElement" 1 103 F 88 1557 T " ( )" "XMLNode::nElement" 1 110 F 89 164 T " ( )" "XMLNode::nElement" 1 110 F 89 192 T " (XMLNodeData *pEntry)" "XMLNode::nText" 1 103 F 88 1547 T " ( )" "XMLNode::nText" 1 110 F 89 143 T " ( )" "XMLNode::operator =" 1 103 F 88 1451 T " ( const XMLNode& A )" "XMLNode::operator =" 1 110 F 89 171 T " ( const XMLNode& A )" "XMLNode::ParseClearTag" 1 103 F 88 547 T " (void *px, void *pa)" "XMLNode::ParseClearTag" 1 110 F 89 188 T " (void *pXML, void *pClear)" "XMLNode::parseFile" 1 103 F 88 1058 T " (char *filename, XMLResults *pResults)" "XMLNode::parseFile" 1 110 F 89 136 T " (LPTSTR lpszXML, XMLResults *pResults=NULL)" "XMLNode::parseString" 1 103 F 88 1014 T " (LPTSTR lpszXML, XMLResults *pResults)" "XMLNode::parseString" 1 110 F 89 135 T " (LPTSTR lpszXML, XMLResults *pResults=NULL)" "XMLNode::ParseXMLElement" 1 103 F 88 578 T " (void *pa)" "XMLNode::ParseXMLElement" 1 110 F 89 189 T " (void *pXML)" "XMLNode::removeOrderElement" 1 103 F 88 111 T " (XMLNodeData *d, XMLElementType t, int index)" "XMLNode::removeOrderElement" 1 110 F 89 193 T " (XMLNodeData *d, XMLElementType t, int index)" "XMLNode::XMLNode" 1 103 F 88 427 T " (XMLNode *pParent, LPTSTR lpszName, int isDeclaration)" "XMLNode::XMLNode" 1 103 F 88 1463 T " (const XMLNode &A)" "XMLNode::XMLNode" 1 103 F 89 174 T " ( )" "XMLNode::XMLNode" 1 110 F 89 130 T " (XMLNode *pParent, LPTSTR lpszName, int isDeclaration)" "XMLNode::XMLNode" 1 110 F 89 170 T " (const XMLNode &A)" "XMLNode::XMLNodeData" 1 107 F 89 126 F "XMLNode::~XMLNode" 1 103 F 88 1410 T " ( )" "XMLNode::~XMLNode" 1 110 F 89 169 T " ( )" "XMLNodeContents" 1 106 F 89 198 F "XMLNodeContents" 1 107 F 89 209 F "XMLNodeContents::attrib" 1 111 F 89 205 F "XMLNodeContents::child" 1 111 F 89 204 F "XMLNodeContents::clear" 1 111 F 89 207 F "XMLNodeContents::text" 1 111 F 89 206 F "XMLNodeContents::type" 1 111 F 89 201 F "XMLNodeData" 1 107 F 89 126 F "XMLof" 1 100 F 87 36 F "XMLof" 1 103 F 86 1381 T " (int _t,char *argv, double *r)" "XMLof" 1 110 F 87 44 T " (int _t,char *argv, double *rhoEnd)" "XMLof.cpp:colNamesForData" 1 109 T 86 1185 F "XMLof.h:XML_OBJECTIVEFUNCTION_INCLUDE" 1 101 T 87 27 F "XMLof::af" 1 111 F 87 71 F "XMLof::aggregate" 1 103 F 86 1393 T " (double *vLxIndexes, double *vIndexes, int *nerr)" "XMLof::aggregate" 1 110 F 87 94 T " (double *vLxIndexes, double *vIndexes, int *nerr)" "XMLof::aggregationFunction" 1 106 F 87 66 F "XMLof::aggregationFunction" 1 107 F 87 70 F "XMLof::aggregationFunction::me" 1 111 F 87 68 F "XMLof::aggregationFunction::name" 1 111 F 87 69 F "XMLof::charMemSpace" 1 111 F 87 76 F "XMLof::computeSigNoise" 1 103 F 86 1476 T " (Matrix mH)" "XMLof::computeSigNoise" 1 110 F 87 93 T " (Matrix mH)" "XMLof::configFile" 1 111 F 87 75 F "XMLof::dataFull" 1 111 F 87 74 F "XMLof::dbcolnames" 1 111 F 87 76 F "XMLof::dbname" 1 111 F 87 75 F "XMLof::DBTool" 1 103 F 86 54 T " (Vector rescale)" "XMLof::DBTool" 1 110 F 87 54 T " (Vector r)" "XMLof::debugOF" 1 111 F 87 77 F "XMLof::equalities" 1 111 F 87 65 F "XMLof::equalityFunction" 1 106 F 87 60 F "XMLof::equalityFunction" 1 107 F 87 64 F "XMLof::equalityFunction::ivar" 1 111 F 87 63 F "XMLof::equalityFunction::me" 1 111 F 87 62 F "XMLof::eval" 1 103 F 86 1423 T " (Vector v, int *nerr)" "XMLof::eval" 1 110 F 87 47 T " (Vector v, int *ner=NULL)" "XMLof::evalGradNLConstraint" 1 103 F 86 150 T " (int j, Vector sv, Vector result, int *ner)" "XMLof::evalGradNLConstraint" 1 110 F 87 49 T " (int j, Vector v, Vector result, int *ner=NULL)" "XMLof::evalNLConstraint" 1 103 F 86 143 T " (int j, Vector sv, int *ner)" "XMLof::evalNLConstraint" 1 110 F 87 48 T " (int j, Vector v, int *ner=NULL)" "XMLof::finalize" 1 103 F 86 1489 T " (Vector vG, Matrix mH, Vector vLambda)" "XMLof::finalize" 1 110 F 87 50 T " (Vector vG, Matrix mH, Vector vLambda)" "XMLof::fullDim" 1 111 F 87 39 F "XMLof::init" 1 103 F 86 407 T " (char *filename)" "XMLof::init" 1 110 F 87 88 T " (char *filame)" "XMLof::initXMLBounds" 1 103 F 86 371 T " ( )" "XMLof::initXMLBounds" 1 110 F 87 89 T " ( )" "XMLof::inputObjF" 1 111 F 87 75 F "XMLof::loadconstraints" 1 110 F 87 86 T " (int nineq, FILE *stream,char *line)" "XMLof::loadData" 1 110 F 87 87 T " (char *line, char ascii)" "XMLof::longXtoShortX" 1 103 F 86 303 T " (double *llx, double *sx)" "XMLof::longXtoShortX" 1 110 F 87 85 T " (double *llx, double *sx)" "XMLof::maxIter" 1 111 F 87 39 F "XMLof::names" 1 111 F 87 77 F "XMLof::neq" 1 111 F 87 80 F "XMLof::nIndexInOF" 1 111 F 87 80 F "XMLof::nlinequalities" 1 111 F 87 72 F "XMLof::nSubAggrFunction" 1 111 F 87 80 F "XMLof::nToOptim" 1 111 F 87 39 F "XMLof::objFunction" 1 111 F 87 75 F "XMLof::outputObjF" 1 111 F 87 75 F "XMLof::reductionDimension" 1 103 F 86 1215 T " ( )" "XMLof::reductionDimension" 1 110 F 87 90 T " ( )" "XMLof::resultsFile" 1 111 F 87 77 F "XMLof::rhoEnd" 1 111 F 87 82 F "XMLof::rhostart" 1 111 F 87 41 F "XMLof::scalingFactorIsGiven" 1 111 F 87 40 F "XMLof::setNamesForDBfile" 1 103 F 86 1109 T " (int nIndexNames, char **indexNames, char **allVarNames)" "XMLof::setNamesForDBfile" 1 110 F 87 91 T " (int nIndexNames, char **indexNames, char **allVarNames)" "XMLof::setNamesForTraceFile" 1 103 F 86 1187 T " ( )" "XMLof::setNamesForTraceFile" 1 110 F 87 92 T " ( )" "XMLof::setSigma" 1 103 F 86 1531 T " (Matrix mH, Vector rescale)" "XMLof::setSigma" 1 110 F 87 53 T " (Matrix mH, Vector rescale)" "XMLof::shortXToLongX" 1 103 F 86 291 T " (double *sx, double *llx)" "XMLof::shortXToLongX" 1 110 F 87 84 T " (double *sx, double *llx)" "XMLof::sigmaIsSet" 1 111 F 87 77 F "XMLof::timeToSleep" 1 111 F 87 81 F "XMLof::vFullStart" 1 111 F 87 42 F "XMLof::vIndexes" 1 111 F 87 78 F "XMLof::vLx" 1 111 F 87 78 F "XMLof::vLxIndexes" 1 111 F 87 78 F "XMLof::vScale" 1 111 F 87 42 F "XMLof::vSigma" 1 111 F 87 42 F "XMLof::vSigNoise" 1 111 F 87 78 F "XMLof::vXToOptim" 1 111 F 87 79 F "XMLof::XMLof" 1 103 F 86 1381 T " (int _t,char *argv, double *r)" "XMLof::XMLof" 1 110 F 87 44 T " (int _t,char *argv, double *rhoEnd)" "XMLof::~XMLof" 1 103 F 86 319 T " ( )" "XMLof::~XMLof" 1 110 F 87 45 T " ( )" "xmlOptimizer" 18 1701 F 90 52 F "xmlParser.cpp:INDENTCHAR" 1 101 T 88 66 F "xmlParser.cpp:LENSTR" 1 101 T 88 1138 F "xmlParser.cpp:LENSTR" 1 101 T 88 1380 F "xmlParser.h:__INCLUDE_XML_NODE__" 1 101 T 89 34 F "xmlParser.h:_T" 1 101 T 89 60 F "xmlParser.h:FALSE" 1 101 T 89 53 F "xmlParser.h:LPCTSTR" 1 101 T 89 44 F "xmlParser.h:LPTSTR" 1 101 T 89 47 F "xmlParser.h:TCHAR" 1 101 T 89 50 F "xmlParser.h:TRUE" 1 101 T 89 56 F "XMLResults" 1 106 F 89 89 F "XMLResults" 1 107 F 89 93 F "XMLResults::error" 1 111 F 89 91 F "XMLResults::nColumn" 1 111 F 89 92 F "XMLResults::nLine" 1 111 F 89 92 F "xmlStuff" 18 1701 F 90 8 F "xOptimal" 1 111 F 60 42 F "xStart" 1 111 F 60 42 F "xTemp" 1 111 F 60 138 F "z" 1 111 F 77 166 F "Z_f" 1 107 F 77 229 F "Z_fp" 1 107 F 77 208 F "Z_fp" 1 107 F 77 220 F "zero" 1 103 F 52 531 T " ( )" "zero" 1 103 F 71 92 T " (int i, int _n)" "zero" 1 110 F 53 100 T " ( )" "zero" 1 110 F 72 97 T " (int _i=0, int _n=0)" "~BADScaleRosenbrock" 1 103 F 83 110 T " ( )" "~CorrectScaleOF" 1 103 F 60 127 T " ( )" "~FletcherTest" 1 103 F 83 38 T " ( )" "~FletcherTest2" 1 103 F 83 52 T " ( )" "~InterPolynomial" 1 103 F 48 821 T " ( )" "~InterPolynomial" 1 110 F 49 81 T " ( )" "~KeepBests" 1 103 F 50 76 T " ( )" "~KeepBests" 1 110 F 51 46 T " ( )" "~Matrix" 1 103 F 52 412 T " ( )" "~Matrix" 1 110 F 53 74 T " ( )" "~MatrixTriangle" 1 103 F 54 138 T " ( )" "~MatrixTriangle" 1 110 F 55 55 T " ( )" "~MultInd" 1 103 F 57 81 T " ( )" "~MultInd" 1 110 F 58 59 T " ( )" "~MultIndCache" 1 103 F 57 230 T " ( )" "~MultIndCache" 1 110 F 58 40 T " ( )" "~NoisyQuadratic" 1 103 F 83 90 T " ( )" "~NoisyRosenbrock" 1 103 F 83 82 T " ( )" "~ObjectiveFunction" 1 103 F 60 82 T " ( )" "~Polynomial" 1 103 F 63 82 T " ( )" "~Polynomial" 1 110 F 64 67 T " ( )" "~RandomOF" 1 103 F 83 120 T " ( )" "~Rosenbrock" 1 103 F 83 74 T " ( )" "~SIFFunction" 1 103 F 78 605 T " ( )" "~SIFFunction" 1 110 F 79 77 T " ( )" "~SimpleQuadratic" 1 103 F 83 100 T " ( )" "~SuperSimpleConstrainedObjectiveFunction" 1 103 F 83 63 T " ( )" "~UnconstrainedObjectiveFunction" 1 103 F 60 113 T " ( )" "~Vector" 1 103 F 71 171 T " ( )" "~Vector" 1 110 F 72 75 T " ( )" "~VectorChar" 1 103 F 73 95 T " ( )" "~VectorChar" 1 110 F 74 46 T " ( )" "~VectorInt" 1 103 F 75 75 T " ( )" "~VectorInt" 1 110 F 76 52 T " ( )" "~XMLNode" 1 103 F 88 1410 T " ( )" "~XMLNode" 1 110 F 89 169 T " ( )" "~XMLof" 1 103 F 86 319 T " ( )" "~XMLof" 1 110 F 87 45 T " ( )"   39  "BADScaleRosenbrock" "BADScaleRosenbrock" 0 83 281 305 305 296 321 409 F F T F F F F 1 "UnconstrainedObjectiveFunction" 24 0 4 "BADScaleRosenbrock" 0 F "eval" 0 F "finalize" 0 F "~BADScaleRosenbrock" 0 F   "CorrectScaleOF" "CorrectScaleOF" 0 60 100 225 225 115 241 199 F F T F F F F 1 "ObjectiveFunction" 16 0 11 "CorrectScaleOF" 0 F "CorrectScaleOF" 0 F "eval" 0 F "evalGradNLConstraint" 0 F "evalNLConstraint" 0 F "finalize" 0 F "getNFE" 0 F "getNFE2" 0 F "init" 2 F "saveValue" 0 F "~CorrectScaleOF" 0 F   "FletcherTest" "FletcherTest" 0 83 100 245 245 115 261 184 F F T F F F F 1 "ObjectiveFunction" 16 0 5 "eval" 0 F "evalGradNLConstraint" 0 F "evalNLConstraint" 0 F "FletcherTest" 0 F "~FletcherTest" 0 F   "FletcherTest2" "FletcherTest2" 0 83 100 265 265 115 281 190 F F T F F F F 1 "ObjectiveFunction" 16 0 5 "eval" 0 F "evalGradNLConstraint" 0 F "evalNLConstraint" 0 F "FletcherTest2" 0 F "~FletcherTest2" 0 F   "InterPolynomial" "InterPolynomial" 0 49 66 465 465 81 481 165 F F T F F F F 1 "Polynomial" 17 0 21 "checkIfValidityIsInBound" 0 F "clone" 0 F "ComputeLagrangeBasis" 0 F "copyFrom" 0 F "copyFrom" 0 F "destroyCurrentBuffer" 1 F "findAGoodPointToReplace" 0 F "GenerateBasis" 0 F "getGoodInterPolationSites" 0 F "interpError" 0 F "InterPolynomial" 0 F "InterPolynomial" 0 F "InterPolynomial" 0 F "maybeAdd" 0 F "NewtonCoefficient" 0 F "operator=" 0 F "replace" 0 F "translate" 0 F "translate" 0 F "updateM" 0 F "~InterPolynomial" 0 F   "KeepBests" "KeepBests" 0 51 5 65 65 5 81 65 F F T F F F F 0 15 "add" 0 F "add" 0 F "add" 0 F "add" 0 F "getKey" 0 F "getOptValue" 0 F "getOptValue" 0 F "getValue" 0 F "init" 2 F "KeepBests" 0 F "KeepBests" 0 F "reset" 0 F "setOptionalN" 0 F "sz" 0 F "~KeepBests" 0 F   "Matrix" "Matrix" 0 53 5 85 85 5 101 55 F F T F F F F 0 67 "addInPlace" 0 F "addMultiplyInPlace" 0 F "addUnityInPlace" 0 F "append" 0 F "cholesky" 0 F "choleskySolveInPlace" 0 F "clone" 0 F "copyFrom" 0 F "destroyCurrentBuffer" 1 F "diagonal" 0 F "euclidianNorm" 0 F "exactshape" 0 F "extendColumn" 0 F "extendLine" 0 F "frobeniusNorm" 0 F "getColumn" 0 F "getColumn" 0 F "getColumnNames" 0 F "getLine" 0 F "getLine" 0 F "getMaxColumn" 0 F "getSubMatrix" 0 F "init" 1 F "lineIndex" 0 F "LnftyNorm" 0 F "Matrix" 0 F "Matrix" 0 F "Matrix" 0 F "Matrix" 0 F "Matrix" 0 F "Matrix" 0 F "Matrix" 0 F "merge" 0 F "multiply" 0 F "multiply" 0 F "multiply" 0 F "multiply" 0 F "multiplyByDiagonalMatrix" 0 F "multiplyByTranspose" 0 F "multiplyInPlace" 0 F "nColumn" 0 F "nLine" 0 F "operator []" 0 F "operator double**" 0 F "operator=" 0 F "operator==" 0 F "print" 0 F "QR" 0 F "save" 0 F "save" 0 F "scalarProduct" 0 F "setColNames" 0 F "setExtSize" 1 F "setLine" 0 F "setLines" 0 F "setNColumn" 0 F "setNLine" 0 F "setSize" 0 F "swapLines" 0 F "transpose" 0 F "transpose" 0 F "transposeAndMultiply" 0 F "transposeAndMultiply" 0 F "transposeInPlace" 0 F "updateSave" 0 F "zero" 0 F "~Matrix" 0 F   "Matrix::MatrixDataTag" "MatrixDataTag" 1 53 5 105 105 5 121 159 F F T F F F F 0 0   "MatrixTriangle" "MatrixTriangle" 0 55 5 125 125 5 141 86 F F T F F F F 0 15 "clone" 0 F "copyFrom" 0 F "destroyCurrentBuffer" 1 F "LINPACK" 0 F "MatrixTriangle" 0 F "MatrixTriangle" 0 F "nLine" 0 F "operator []" 0 F "operator double**" 0 F "operator=" 0 F "operator==" 0 F "setSize" 0 F "solveInPlace" 0 F "solveTransposInPlace" 0 F "~MatrixTriangle" 0 F   "MatrixTriangle::MatrixTriangleDataTag" "MatrixTriangleDataTag" 1 55 5 145 145 5 161 241 F F T F F F F 0 0   "MultInd" "MultInd" 0 58 5 165 165 5 181 55 F F T F F F F 0 16 "fullInit" 2 F "index" 0 F "indexesOfCoefInLexOrder" 0 F "lastChanges" 0 F "len" 0 F "MultInd" 0 F "MultInd" 2 F "operator unsigned*" 0 F "operator++" 0 F "operator++" 0 F "operator=" 0 F "operator==" 0 F "print" 0 F "resetCounter" 0 F "standardInit" 2 F "~MultInd" 0 F   "MultIndCache" "MultIndCache" 0 58 5 185 185 5 201 80 F F T F F F F 0 3 "get" 0 F "MultIndCache" 0 F "~MultIndCache" 0 F   "Namelist" "Namelist" 1 77 5 205 205 5 221 88 F F T F F F F 0 0   "NoisyQuadratic" "NoisyQuadratic" 0 83 281 325 325 296 341 379 F F T F F F F 1 "UnconstrainedObjectiveFunction" 24 0 3 "eval" 0 F "NoisyQuadratic" 0 F "~NoisyQuadratic" 0 F   "NoisyRosenbrock" "NoisyRosenbrock" 0 83 281 345 345 296 361 389 F F T F F F F 1 "UnconstrainedObjectiveFunction" 24 0 3 "eval" 0 F "NoisyRosenbrock" 0 F "~NoisyRosenbrock" 0 F   "ObjectiveFunction" "ObjectiveFunction" 0 60 5 325 325 5 341 100 T F T F F T F 0 23 "addClosestFeasiblePointInData" 2 F "dim" 0 F "endInit" 0 F "eval" 0 T "evalGradNLConstraint" 0 F "evalGradNLConstraint" 0 T "evalNLConstraint" 0 T "finalize" 0 F "getNFE" 0 F "getNFE2" 0 F "initBounds" 0 F "initData" 0 F "initTolLC" 0 F "initTolNLC" 0 F "isFeasible" 0 F "ObjectiveFunction" 0 F "printStats" 0 F "saveStats" 0 F "saveValue" 0 F "setName" 0 F "setSaveFile" 0 F "updateCounter" 0 F "~ObjectiveFunction" 0 F   "Polynomial" "Polynomial" 0 64 5 465 465 5 481 66 F F T F F T F 0 39 "clone" 0 F "copyFrom" 0 F "deg" 0 F "derivate" 0 F "destroyCurrentBuffer" 1 F "dim" 0 F "equals" 0 F "gradient" 0 F "gradientHessian" 0 F "init" 1 F "operator double*" 0 F "operator()" 0 F "operator*" 0 F "operator*=" 0 F "operator+" 0 F "operator+" 0 F "operator+=" 0 F "operator-" 0 F "operator-" 0 F "operator-=" 0 F "operator/" 0 F "operator/=" 0 F "operator=" 0 F "operator==" 0 F "Polynomial" 0 F "Polynomial" 0 F "Polynomial" 0 F "Polynomial" 0 F "Polynomial" 0 F "Polynomial" 0 F "print" 0 F "queryFlag" 0 F "save" 0 F "setFlag" 0 F "shiftedEval" 0 F "sz" 0 F "translate" 0 F "unsetFlag" 0 F "~Polynomial" 0 F   "Polynomial::PolynomialDataTag" "PolynomialDataTag" 1 64 5 485 485 5 501 201 F F T F F F F 0 0   "RandomOF" "RandomOF" 0 83 281 365 365 296 381 356 F F T F F F F 1 "UnconstrainedObjectiveFunction" 24 0 7 "alloc" 2 F "eval" 0 F "ff" 0 F "RandomOF" 0 F "RandomOF" 0 F "save" 0 F "~RandomOF" 0 F   "Rosenbrock" "Rosenbrock" 0 83 281 385 385 296 401 360 F F T F F F F 1 "UnconstrainedObjectiveFunction" 24 0 3 "eval" 0 F "Rosenbrock" 0 F "~Rosenbrock" 0 F   "SIFFunction" "SIFFunction" 0 79 281 405 405 296 421 360 F F T F F F F 1 "UnconstrainedObjectiveFunction" 24 0 8 "CRLF" 2 F "eval" 0 F "rd_Char" 2 F "rd_Double" 2 F "rd_Int" 2 F "rd_Logical" 2 F "SIFFunction" 0 F "~SIFFunction" 0 F   "SimpleQuadratic" "SimpleQuadratic" 0 83 281 425 425 296 441 384 F F T F F F F 1 "UnconstrainedObjectiveFunction" 24 0 3 "eval" 0 F "SimpleQuadratic" 0 F "~SimpleQuadratic" 0 F   "SuperSimpleConstrainedObjectiveFunction" "SuperSimpleConstrainedObjectiveFunction" 0 83 100 285 285 115 301 334 F F T F F F F 1 "ObjectiveFunction" 16 0 5 "eval" 0 F "evalGradNLConstraint" 0 F "evalNLConstraint" 0 F "SuperSimpleConstrainedObjectiveFunction" 0 F "~SuperSimpleConstrainedObjectiveFunction" 0 F   "UnconstrainedObjectiveFunction" "UnconstrainedObjectiveFunction" 0 60 100 365 365 115 381 281 F F T F F T F 1 "ObjectiveFunction" 16 0 5 "evalGradNLConstraint" 0 F "evalGradNLConstraint" 0 F "evalNLConstraint" 0 F "UnconstrainedObjectiveFunction" 0 F "~UnconstrainedObjectiveFunction" 0 F   "Vardesc" "Vardesc" 1 77 5 505 505 5 521 84 F F T F F F F 0 0   "Vector" "Vector" 0 72 5 525 525 5 541 55 F F T F F F F 0 56 "addInPlace" 0 F "addInPlace" 0 F "alloc" 0 F "appendToMatrixFile" 0 F "clone" 0 F "copyFrom" 0 F "destroyCurrentBuffer" 0 F "diagonalizeAndMultiply" 0 F "equals" 0 F "euclidianDistance" 0 F "euclidianNorm" 0 F "exactshape" 0 F "extend" 0 F "getFromLine" 0 F "isNull" 0 F "L1Distance" 0 F "L1Norm" 0 F "LnftyDistance" 0 F "LnftyNorm" 0 F "mmax" 0 F "mmin" 0 F "multiply" 0 F "multiply" 0 F "oneByOneInvert" 0 F "oneByOneMutiply" 0 F "operator double*" 0 F "operator+" 0 F "operator+=" 0 F "operator-" 0 F "operator-=" 0 F "operator=" 0 F "operator==" 0 F "permutIn" 0 F "permutOut" 0 F "prepareExtend" 0 F "print" 0 F "save" 0 F "save" 0 F "scalarProduct" 0 F "set" 0 F "setExternalData" 0 F "setPart" 0 F "setSize" 0 F "shift" 0 F "square" 0 F "sz" 0 F "transposeAndMultiply" 0 F "Vector" 0 F "Vector" 0 F "Vector" 0 F "Vector" 0 F "Vector" 0 F "Vector" 0 F "Vector" 0 F "zero" 0 F "~Vector" 0 F   "Vector::VectorDataTag" "VectorDataTag" 1 72 5 565 565 5 581 157 F F T F F F F 0 0   "VectorChar" "VectorChar" 0 74 5 545 545 5 561 68 F F T F F F F 0 18 "alloc" 2 F "exactshape" 0 F "extend" 0 F "operator char*" 0 F "operator=" 0 F "operator==" 0 F "prepareExtend" 0 F "print" 0 F "set" 0 F "setSize" 0 F "sz" 0 F "VectorChar" 0 F "VectorChar" 0 F "VectorChar" 0 F "VectorChar" 0 F "VectorChar" 0 F "VectorChar" 0 F "~VectorChar" 0 F   "VectorInt" "VectorInt" 0 76 5 585 585 5 601 57 F F T F F F F 0 19 "alloc" 2 F "clone" 0 F "copyFrom" 0 F "destroyCurrentBuffer" 0 F "equals" 0 F "exactshape" 0 F "extend" 0 F "operator int*" 0 F "operator=" 0 F "operator==" 0 F "prepareExtend" 0 F "print" 0 F "setSize" 0 F "sz" 0 F "VectorInt" 0 F "VectorInt" 0 F "VectorInt" 0 F "VectorInt" 0 F "~VectorInt" 0 F   "VectorInt::VectorIntDataTag" "VectorIntDataTag" 1 76 5 605 605 5 621 183 F F T F F F F 0 0   "XMLElementType" "XMLElementType" 3 89 5 625 625 5 641 130 F F T F F F F 0 4 "eNodeAttribute" 0 F "eNodeChild" 0 F "eNodeClear" 0 F "eNodeText" 0 F   "XMLError" "XMLError" 3 89 5 645 645 5 661 89 F F T F F F F 0 12 "" 0 F "eXMLErrorEmpty" 0 F "eXMLErrorFileNotFound" 0 F "eXMLErrorFirstNotStartTag" 0 F "eXMLErrorInvalidTag" 0 F "eXMLErrorMissingEndTagName" 0 F "eXMLErrorMissingTagName" 0 F "eXMLErrorNoElements" 0 F "eXMLErrorNoMatchingQuote" 0 F "eXMLErrorNone" 0 F "eXMLErrorUnexpectedToken" 0 F "eXMLErrorUnmatchedEndTag" 0 F   "XMLNode" "XMLNode" 1 89 5 665 665 5 681 93 F F T F F F F 0 39 "AddAttribute" 0 F "AddChild" 0 F "AddClear" 0 F "AddText" 0 F "createXMLString" 0 F "CreateXMLStringR" 2 F "destroyCurrentBuffer" 0 F "enumContent" 2 F "enumContents" 0 F "getAttribute" 0 F "getAttribute" 0 F "getAttribute" 0 F "getChildNode" 0 F "getChildNode" 0 F "getChildNode" 0 F "getClear" 0 F "getError" 0 F "getName" 0 F "getText" 0 F "isAttributeSet" 0 F "isDeclaration" 0 F "isEmpty" 0 F "nAttribute" 0 F "nChildNode" 0 F "nChildNode" 0 F "nClear" 0 F "nElement" 0 F "nElement" 2 F "nText" 0 F "operator=" 0 F "ParseClearTag" 2 F "parseFile" 0 F "parseString" 0 F "ParseXMLElement" 2 F "removeOrderElement" 2 F "XMLNode" 1 F "XMLNode" 0 F "XMLNode" 0 F "~XMLNode" 0 F   "XMLNodeContents" "XMLNodeContents" 1 89 5 685 685 5 701 139 F F T F F F F 0 0   "XMLResults" "XMLResults" 1 89 5 705 705 5 721 105 F F T F F F F 0 0   "XMLof" "XMLof" 0 87 100 445 445 115 461 165 F F T F F F F 1 "ObjectiveFunction" 16 0 19 "aggregate" 2 F "computeSigNoise" 2 F "DBTool" 0 F "eval" 0 F "evalGradNLConstraint" 0 F "evalNLConstraint" 0 F "finalize" 0 F "init" 2 F "initXMLBounds" 2 F "loadconstraints" 2 F "loadData" 2 F "longXtoShortX" 2 F "reductionDimension" 2 F "setNamesForDBfile" 2 F "setNamesForTraceFile" 2 F "setSigma" 0 F "shortXToLongX" 2 F "XMLof" 0 F "~XMLof" 0 F   "XMLof::aggregationFunction" "aggregationFunction" 1 87 5 5 5 5 21 184 F F T F F F F 0 0   "XMLof::equalityFunction" "equalityFunction" 1 87 5 45 45 5 61 165 F F T F F F F 0 0   "cell_tag" "cell_tag" 1 51 5 25 25 5 41 82 F F T F F F F 0 0  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39   0 